
stm32L432KC_SSD1306.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   0000018c  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00003650  0800018c  0800018c  0001018c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000013b8  080037dc  080037dc  000137dc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08004b94  08004b94  00020014  2**0
                  CONTENTS
  4 .ARM          00000008  08004b94  08004b94  00014b94  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  08004b9c  08004b9c  00020014  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08004b9c  08004b9c  00014b9c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08004ba0  08004ba0  00014ba0  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000014  20000000  08004ba4  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000524  20000014  08004bb8  00020014  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  20000538  08004bb8  00020538  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  00020014  2**0
                  CONTENTS, READONLY
 12 .debug_info   0000da0c  00000000  00000000  00020044  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_abbrev 00001d99  00000000  00000000  0002da50  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_aranges 00000c48  00000000  00000000  0002f7f0  2**3
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_ranges 00000b38  00000000  00000000  00030438  2**3
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_macro  0002034c  00000000  00000000  00030f70  2**0
                  CONTENTS, READONLY, DEBUGGING
 17 .debug_line   0000a801  00000000  00000000  000512bc  2**0
                  CONTENTS, READONLY, DEBUGGING
 18 .debug_str    000c11c7  00000000  00000000  0005babd  2**0
                  CONTENTS, READONLY, DEBUGGING
 19 .comment      0000007b  00000000  00000000  0011cc84  2**0
                  CONTENTS, READONLY
 20 .debug_frame  000031b8  00000000  00000000  0011cd00  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

0800018c <__do_global_dtors_aux>:
 800018c:	b510      	push	{r4, lr}
 800018e:	4c05      	ldr	r4, [pc, #20]	; (80001a4 <__do_global_dtors_aux+0x18>)
 8000190:	7823      	ldrb	r3, [r4, #0]
 8000192:	b933      	cbnz	r3, 80001a2 <__do_global_dtors_aux+0x16>
 8000194:	4b04      	ldr	r3, [pc, #16]	; (80001a8 <__do_global_dtors_aux+0x1c>)
 8000196:	b113      	cbz	r3, 800019e <__do_global_dtors_aux+0x12>
 8000198:	4804      	ldr	r0, [pc, #16]	; (80001ac <__do_global_dtors_aux+0x20>)
 800019a:	f3af 8000 	nop.w
 800019e:	2301      	movs	r3, #1
 80001a0:	7023      	strb	r3, [r4, #0]
 80001a2:	bd10      	pop	{r4, pc}
 80001a4:	20000014 	.word	0x20000014
 80001a8:	00000000 	.word	0x00000000
 80001ac:	080037c4 	.word	0x080037c4

080001b0 <frame_dummy>:
 80001b0:	b508      	push	{r3, lr}
 80001b2:	4b03      	ldr	r3, [pc, #12]	; (80001c0 <frame_dummy+0x10>)
 80001b4:	b11b      	cbz	r3, 80001be <frame_dummy+0xe>
 80001b6:	4903      	ldr	r1, [pc, #12]	; (80001c4 <frame_dummy+0x14>)
 80001b8:	4803      	ldr	r0, [pc, #12]	; (80001c8 <frame_dummy+0x18>)
 80001ba:	f3af 8000 	nop.w
 80001be:	bd08      	pop	{r3, pc}
 80001c0:	00000000 	.word	0x00000000
 80001c4:	20000018 	.word	0x20000018
 80001c8:	080037c4 	.word	0x080037c4

080001cc <__aeabi_uldivmod>:
 80001cc:	b953      	cbnz	r3, 80001e4 <__aeabi_uldivmod+0x18>
 80001ce:	b94a      	cbnz	r2, 80001e4 <__aeabi_uldivmod+0x18>
 80001d0:	2900      	cmp	r1, #0
 80001d2:	bf08      	it	eq
 80001d4:	2800      	cmpeq	r0, #0
 80001d6:	bf1c      	itt	ne
 80001d8:	f04f 31ff 	movne.w	r1, #4294967295
 80001dc:	f04f 30ff 	movne.w	r0, #4294967295
 80001e0:	f000 b972 	b.w	80004c8 <__aeabi_idiv0>
 80001e4:	f1ad 0c08 	sub.w	ip, sp, #8
 80001e8:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 80001ec:	f000 f806 	bl	80001fc <__udivmoddi4>
 80001f0:	f8dd e004 	ldr.w	lr, [sp, #4]
 80001f4:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 80001f8:	b004      	add	sp, #16
 80001fa:	4770      	bx	lr

080001fc <__udivmoddi4>:
 80001fc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000200:	9e08      	ldr	r6, [sp, #32]
 8000202:	4604      	mov	r4, r0
 8000204:	4688      	mov	r8, r1
 8000206:	2b00      	cmp	r3, #0
 8000208:	d14b      	bne.n	80002a2 <__udivmoddi4+0xa6>
 800020a:	428a      	cmp	r2, r1
 800020c:	4615      	mov	r5, r2
 800020e:	d967      	bls.n	80002e0 <__udivmoddi4+0xe4>
 8000210:	fab2 f282 	clz	r2, r2
 8000214:	b14a      	cbz	r2, 800022a <__udivmoddi4+0x2e>
 8000216:	f1c2 0720 	rsb	r7, r2, #32
 800021a:	fa01 f302 	lsl.w	r3, r1, r2
 800021e:	fa20 f707 	lsr.w	r7, r0, r7
 8000222:	4095      	lsls	r5, r2
 8000224:	ea47 0803 	orr.w	r8, r7, r3
 8000228:	4094      	lsls	r4, r2
 800022a:	ea4f 4e15 	mov.w	lr, r5, lsr #16
 800022e:	0c23      	lsrs	r3, r4, #16
 8000230:	fbb8 f7fe 	udiv	r7, r8, lr
 8000234:	fa1f fc85 	uxth.w	ip, r5
 8000238:	fb0e 8817 	mls	r8, lr, r7, r8
 800023c:	ea43 4308 	orr.w	r3, r3, r8, lsl #16
 8000240:	fb07 f10c 	mul.w	r1, r7, ip
 8000244:	4299      	cmp	r1, r3
 8000246:	d909      	bls.n	800025c <__udivmoddi4+0x60>
 8000248:	18eb      	adds	r3, r5, r3
 800024a:	f107 30ff 	add.w	r0, r7, #4294967295
 800024e:	f080 811b 	bcs.w	8000488 <__udivmoddi4+0x28c>
 8000252:	4299      	cmp	r1, r3
 8000254:	f240 8118 	bls.w	8000488 <__udivmoddi4+0x28c>
 8000258:	3f02      	subs	r7, #2
 800025a:	442b      	add	r3, r5
 800025c:	1a5b      	subs	r3, r3, r1
 800025e:	b2a4      	uxth	r4, r4
 8000260:	fbb3 f0fe 	udiv	r0, r3, lr
 8000264:	fb0e 3310 	mls	r3, lr, r0, r3
 8000268:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
 800026c:	fb00 fc0c 	mul.w	ip, r0, ip
 8000270:	45a4      	cmp	ip, r4
 8000272:	d909      	bls.n	8000288 <__udivmoddi4+0x8c>
 8000274:	192c      	adds	r4, r5, r4
 8000276:	f100 33ff 	add.w	r3, r0, #4294967295
 800027a:	f080 8107 	bcs.w	800048c <__udivmoddi4+0x290>
 800027e:	45a4      	cmp	ip, r4
 8000280:	f240 8104 	bls.w	800048c <__udivmoddi4+0x290>
 8000284:	3802      	subs	r0, #2
 8000286:	442c      	add	r4, r5
 8000288:	ea40 4007 	orr.w	r0, r0, r7, lsl #16
 800028c:	eba4 040c 	sub.w	r4, r4, ip
 8000290:	2700      	movs	r7, #0
 8000292:	b11e      	cbz	r6, 800029c <__udivmoddi4+0xa0>
 8000294:	40d4      	lsrs	r4, r2
 8000296:	2300      	movs	r3, #0
 8000298:	e9c6 4300 	strd	r4, r3, [r6]
 800029c:	4639      	mov	r1, r7
 800029e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80002a2:	428b      	cmp	r3, r1
 80002a4:	d909      	bls.n	80002ba <__udivmoddi4+0xbe>
 80002a6:	2e00      	cmp	r6, #0
 80002a8:	f000 80eb 	beq.w	8000482 <__udivmoddi4+0x286>
 80002ac:	2700      	movs	r7, #0
 80002ae:	e9c6 0100 	strd	r0, r1, [r6]
 80002b2:	4638      	mov	r0, r7
 80002b4:	4639      	mov	r1, r7
 80002b6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80002ba:	fab3 f783 	clz	r7, r3
 80002be:	2f00      	cmp	r7, #0
 80002c0:	d147      	bne.n	8000352 <__udivmoddi4+0x156>
 80002c2:	428b      	cmp	r3, r1
 80002c4:	d302      	bcc.n	80002cc <__udivmoddi4+0xd0>
 80002c6:	4282      	cmp	r2, r0
 80002c8:	f200 80fa 	bhi.w	80004c0 <__udivmoddi4+0x2c4>
 80002cc:	1a84      	subs	r4, r0, r2
 80002ce:	eb61 0303 	sbc.w	r3, r1, r3
 80002d2:	2001      	movs	r0, #1
 80002d4:	4698      	mov	r8, r3
 80002d6:	2e00      	cmp	r6, #0
 80002d8:	d0e0      	beq.n	800029c <__udivmoddi4+0xa0>
 80002da:	e9c6 4800 	strd	r4, r8, [r6]
 80002de:	e7dd      	b.n	800029c <__udivmoddi4+0xa0>
 80002e0:	b902      	cbnz	r2, 80002e4 <__udivmoddi4+0xe8>
 80002e2:	deff      	udf	#255	; 0xff
 80002e4:	fab2 f282 	clz	r2, r2
 80002e8:	2a00      	cmp	r2, #0
 80002ea:	f040 808f 	bne.w	800040c <__udivmoddi4+0x210>
 80002ee:	1b49      	subs	r1, r1, r5
 80002f0:	ea4f 4e15 	mov.w	lr, r5, lsr #16
 80002f4:	fa1f f885 	uxth.w	r8, r5
 80002f8:	2701      	movs	r7, #1
 80002fa:	fbb1 fcfe 	udiv	ip, r1, lr
 80002fe:	0c23      	lsrs	r3, r4, #16
 8000300:	fb0e 111c 	mls	r1, lr, ip, r1
 8000304:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8000308:	fb08 f10c 	mul.w	r1, r8, ip
 800030c:	4299      	cmp	r1, r3
 800030e:	d907      	bls.n	8000320 <__udivmoddi4+0x124>
 8000310:	18eb      	adds	r3, r5, r3
 8000312:	f10c 30ff 	add.w	r0, ip, #4294967295
 8000316:	d202      	bcs.n	800031e <__udivmoddi4+0x122>
 8000318:	4299      	cmp	r1, r3
 800031a:	f200 80cd 	bhi.w	80004b8 <__udivmoddi4+0x2bc>
 800031e:	4684      	mov	ip, r0
 8000320:	1a59      	subs	r1, r3, r1
 8000322:	b2a3      	uxth	r3, r4
 8000324:	fbb1 f0fe 	udiv	r0, r1, lr
 8000328:	fb0e 1410 	mls	r4, lr, r0, r1
 800032c:	ea43 4404 	orr.w	r4, r3, r4, lsl #16
 8000330:	fb08 f800 	mul.w	r8, r8, r0
 8000334:	45a0      	cmp	r8, r4
 8000336:	d907      	bls.n	8000348 <__udivmoddi4+0x14c>
 8000338:	192c      	adds	r4, r5, r4
 800033a:	f100 33ff 	add.w	r3, r0, #4294967295
 800033e:	d202      	bcs.n	8000346 <__udivmoddi4+0x14a>
 8000340:	45a0      	cmp	r8, r4
 8000342:	f200 80b6 	bhi.w	80004b2 <__udivmoddi4+0x2b6>
 8000346:	4618      	mov	r0, r3
 8000348:	eba4 0408 	sub.w	r4, r4, r8
 800034c:	ea40 400c 	orr.w	r0, r0, ip, lsl #16
 8000350:	e79f      	b.n	8000292 <__udivmoddi4+0x96>
 8000352:	f1c7 0c20 	rsb	ip, r7, #32
 8000356:	40bb      	lsls	r3, r7
 8000358:	fa22 fe0c 	lsr.w	lr, r2, ip
 800035c:	ea4e 0e03 	orr.w	lr, lr, r3
 8000360:	fa01 f407 	lsl.w	r4, r1, r7
 8000364:	fa20 f50c 	lsr.w	r5, r0, ip
 8000368:	fa21 f30c 	lsr.w	r3, r1, ip
 800036c:	ea4f 481e 	mov.w	r8, lr, lsr #16
 8000370:	4325      	orrs	r5, r4
 8000372:	fbb3 f9f8 	udiv	r9, r3, r8
 8000376:	0c2c      	lsrs	r4, r5, #16
 8000378:	fb08 3319 	mls	r3, r8, r9, r3
 800037c:	fa1f fa8e 	uxth.w	sl, lr
 8000380:	ea44 4303 	orr.w	r3, r4, r3, lsl #16
 8000384:	fb09 f40a 	mul.w	r4, r9, sl
 8000388:	429c      	cmp	r4, r3
 800038a:	fa02 f207 	lsl.w	r2, r2, r7
 800038e:	fa00 f107 	lsl.w	r1, r0, r7
 8000392:	d90b      	bls.n	80003ac <__udivmoddi4+0x1b0>
 8000394:	eb1e 0303 	adds.w	r3, lr, r3
 8000398:	f109 30ff 	add.w	r0, r9, #4294967295
 800039c:	f080 8087 	bcs.w	80004ae <__udivmoddi4+0x2b2>
 80003a0:	429c      	cmp	r4, r3
 80003a2:	f240 8084 	bls.w	80004ae <__udivmoddi4+0x2b2>
 80003a6:	f1a9 0902 	sub.w	r9, r9, #2
 80003aa:	4473      	add	r3, lr
 80003ac:	1b1b      	subs	r3, r3, r4
 80003ae:	b2ad      	uxth	r5, r5
 80003b0:	fbb3 f0f8 	udiv	r0, r3, r8
 80003b4:	fb08 3310 	mls	r3, r8, r0, r3
 80003b8:	ea45 4403 	orr.w	r4, r5, r3, lsl #16
 80003bc:	fb00 fa0a 	mul.w	sl, r0, sl
 80003c0:	45a2      	cmp	sl, r4
 80003c2:	d908      	bls.n	80003d6 <__udivmoddi4+0x1da>
 80003c4:	eb1e 0404 	adds.w	r4, lr, r4
 80003c8:	f100 33ff 	add.w	r3, r0, #4294967295
 80003cc:	d26b      	bcs.n	80004a6 <__udivmoddi4+0x2aa>
 80003ce:	45a2      	cmp	sl, r4
 80003d0:	d969      	bls.n	80004a6 <__udivmoddi4+0x2aa>
 80003d2:	3802      	subs	r0, #2
 80003d4:	4474      	add	r4, lr
 80003d6:	ea40 4009 	orr.w	r0, r0, r9, lsl #16
 80003da:	fba0 8902 	umull	r8, r9, r0, r2
 80003de:	eba4 040a 	sub.w	r4, r4, sl
 80003e2:	454c      	cmp	r4, r9
 80003e4:	46c2      	mov	sl, r8
 80003e6:	464b      	mov	r3, r9
 80003e8:	d354      	bcc.n	8000494 <__udivmoddi4+0x298>
 80003ea:	d051      	beq.n	8000490 <__udivmoddi4+0x294>
 80003ec:	2e00      	cmp	r6, #0
 80003ee:	d069      	beq.n	80004c4 <__udivmoddi4+0x2c8>
 80003f0:	ebb1 050a 	subs.w	r5, r1, sl
 80003f4:	eb64 0403 	sbc.w	r4, r4, r3
 80003f8:	fa04 fc0c 	lsl.w	ip, r4, ip
 80003fc:	40fd      	lsrs	r5, r7
 80003fe:	40fc      	lsrs	r4, r7
 8000400:	ea4c 0505 	orr.w	r5, ip, r5
 8000404:	e9c6 5400 	strd	r5, r4, [r6]
 8000408:	2700      	movs	r7, #0
 800040a:	e747      	b.n	800029c <__udivmoddi4+0xa0>
 800040c:	f1c2 0320 	rsb	r3, r2, #32
 8000410:	fa20 f703 	lsr.w	r7, r0, r3
 8000414:	4095      	lsls	r5, r2
 8000416:	fa01 f002 	lsl.w	r0, r1, r2
 800041a:	fa21 f303 	lsr.w	r3, r1, r3
 800041e:	ea4f 4e15 	mov.w	lr, r5, lsr #16
 8000422:	4338      	orrs	r0, r7
 8000424:	0c01      	lsrs	r1, r0, #16
 8000426:	fbb3 f7fe 	udiv	r7, r3, lr
 800042a:	fa1f f885 	uxth.w	r8, r5
 800042e:	fb0e 3317 	mls	r3, lr, r7, r3
 8000432:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 8000436:	fb07 f308 	mul.w	r3, r7, r8
 800043a:	428b      	cmp	r3, r1
 800043c:	fa04 f402 	lsl.w	r4, r4, r2
 8000440:	d907      	bls.n	8000452 <__udivmoddi4+0x256>
 8000442:	1869      	adds	r1, r5, r1
 8000444:	f107 3cff 	add.w	ip, r7, #4294967295
 8000448:	d22f      	bcs.n	80004aa <__udivmoddi4+0x2ae>
 800044a:	428b      	cmp	r3, r1
 800044c:	d92d      	bls.n	80004aa <__udivmoddi4+0x2ae>
 800044e:	3f02      	subs	r7, #2
 8000450:	4429      	add	r1, r5
 8000452:	1acb      	subs	r3, r1, r3
 8000454:	b281      	uxth	r1, r0
 8000456:	fbb3 f0fe 	udiv	r0, r3, lr
 800045a:	fb0e 3310 	mls	r3, lr, r0, r3
 800045e:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 8000462:	fb00 f308 	mul.w	r3, r0, r8
 8000466:	428b      	cmp	r3, r1
 8000468:	d907      	bls.n	800047a <__udivmoddi4+0x27e>
 800046a:	1869      	adds	r1, r5, r1
 800046c:	f100 3cff 	add.w	ip, r0, #4294967295
 8000470:	d217      	bcs.n	80004a2 <__udivmoddi4+0x2a6>
 8000472:	428b      	cmp	r3, r1
 8000474:	d915      	bls.n	80004a2 <__udivmoddi4+0x2a6>
 8000476:	3802      	subs	r0, #2
 8000478:	4429      	add	r1, r5
 800047a:	1ac9      	subs	r1, r1, r3
 800047c:	ea40 4707 	orr.w	r7, r0, r7, lsl #16
 8000480:	e73b      	b.n	80002fa <__udivmoddi4+0xfe>
 8000482:	4637      	mov	r7, r6
 8000484:	4630      	mov	r0, r6
 8000486:	e709      	b.n	800029c <__udivmoddi4+0xa0>
 8000488:	4607      	mov	r7, r0
 800048a:	e6e7      	b.n	800025c <__udivmoddi4+0x60>
 800048c:	4618      	mov	r0, r3
 800048e:	e6fb      	b.n	8000288 <__udivmoddi4+0x8c>
 8000490:	4541      	cmp	r1, r8
 8000492:	d2ab      	bcs.n	80003ec <__udivmoddi4+0x1f0>
 8000494:	ebb8 0a02 	subs.w	sl, r8, r2
 8000498:	eb69 020e 	sbc.w	r2, r9, lr
 800049c:	3801      	subs	r0, #1
 800049e:	4613      	mov	r3, r2
 80004a0:	e7a4      	b.n	80003ec <__udivmoddi4+0x1f0>
 80004a2:	4660      	mov	r0, ip
 80004a4:	e7e9      	b.n	800047a <__udivmoddi4+0x27e>
 80004a6:	4618      	mov	r0, r3
 80004a8:	e795      	b.n	80003d6 <__udivmoddi4+0x1da>
 80004aa:	4667      	mov	r7, ip
 80004ac:	e7d1      	b.n	8000452 <__udivmoddi4+0x256>
 80004ae:	4681      	mov	r9, r0
 80004b0:	e77c      	b.n	80003ac <__udivmoddi4+0x1b0>
 80004b2:	3802      	subs	r0, #2
 80004b4:	442c      	add	r4, r5
 80004b6:	e747      	b.n	8000348 <__udivmoddi4+0x14c>
 80004b8:	f1ac 0c02 	sub.w	ip, ip, #2
 80004bc:	442b      	add	r3, r5
 80004be:	e72f      	b.n	8000320 <__udivmoddi4+0x124>
 80004c0:	4638      	mov	r0, r7
 80004c2:	e708      	b.n	80002d6 <__udivmoddi4+0xda>
 80004c4:	4637      	mov	r7, r6
 80004c6:	e6e9      	b.n	800029c <__udivmoddi4+0xa0>

080004c8 <__aeabi_idiv0>:
 80004c8:	4770      	bx	lr
 80004ca:	bf00      	nop

080004cc <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 80004cc:	b580      	push	{r7, lr}
 80004ce:	b082      	sub	sp, #8
 80004d0:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN 1 */
	bool die = false;
 80004d2:	2300      	movs	r3, #0
 80004d4:	71fb      	strb	r3, [r7, #7]
  

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 80004d6:	f000 fcaa 	bl	8000e2e <HAL_Init>
  /* USER CODE BEGIN Init */

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 80004da:	f000 f81d 	bl	8000518 <SystemClock_Config>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 80004de:	f000 f90f 	bl	8000700 <MX_GPIO_Init>
  MX_USART2_UART_Init();
 80004e2:	f000 f8dd 	bl	80006a0 <MX_USART2_UART_Init>
  MX_I2C1_Init();
 80004e6:	f000 f89b 	bl	8000620 <MX_I2C1_Init>
  /* USER CODE END 2 */

  /* Infinite loop */
  /* USER CODE BEGIN WHILE */
  //debug_print("Hello from STM32L432KC dev board\r\n");
  ssd1306_Init();
 80004ea:	f000 f993 	bl	8000814 <ssd1306_Init>
  //init();

  	  if(die == true)
 80004ee:	79fb      	ldrb	r3, [r7, #7]
 80004f0:	2b00      	cmp	r3, #0
 80004f2:	d008      	beq.n	8000506 <main+0x3a>
  	  {

	  ssd1306_Fill(Black);
 80004f4:	2000      	movs	r0, #0
 80004f6:	f000 f9fb 	bl	80008f0 <ssd1306_Fill>

	  ssd1306_WriteString("[YOU DIED, RETURNING TO BONFIRE]", Font_16x26, White);
 80004fa:	4a05      	ldr	r2, [pc, #20]	; (8000510 <main+0x44>)
 80004fc:	2301      	movs	r3, #1
 80004fe:	ca06      	ldmia	r2, {r1, r2}
 8000500:	4804      	ldr	r0, [pc, #16]	; (8000514 <main+0x48>)
 8000502:	f000 fb25 	bl	8000b50 <ssd1306_WriteString>
 8000506:	2300      	movs	r3, #0

  	  }
  /* USER CODE END 3 */
	}
 8000508:	4618      	mov	r0, r3
 800050a:	3708      	adds	r7, #8
 800050c:	46bd      	mov	sp, r7
 800050e:	bd80      	pop	{r7, pc}
 8000510:	20000000 	.word	0x20000000
 8000514:	080037dc 	.word	0x080037dc

08000518 <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 8000518:	b580      	push	{r7, lr}
 800051a:	b0ac      	sub	sp, #176	; 0xb0
 800051c:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 800051e:	f107 036c 	add.w	r3, r7, #108	; 0x6c
 8000522:	2244      	movs	r2, #68	; 0x44
 8000524:	2100      	movs	r1, #0
 8000526:	4618      	mov	r0, r3
 8000528:	f003 f944 	bl	80037b4 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 800052c:	f107 0358 	add.w	r3, r7, #88	; 0x58
 8000530:	2200      	movs	r2, #0
 8000532:	601a      	str	r2, [r3, #0]
 8000534:	605a      	str	r2, [r3, #4]
 8000536:	609a      	str	r2, [r3, #8]
 8000538:	60da      	str	r2, [r3, #12]
 800053a:	611a      	str	r2, [r3, #16]
  RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 800053c:	1d3b      	adds	r3, r7, #4
 800053e:	2254      	movs	r2, #84	; 0x54
 8000540:	2100      	movs	r1, #0
 8000542:	4618      	mov	r0, r3
 8000544:	f003 f936 	bl	80037b4 <memset>

  /** Configure LSE Drive Capability 
  */
  HAL_PWR_EnableBkUpAccess();
 8000548:	f001 fb70 	bl	8001c2c <HAL_PWR_EnableBkUpAccess>
  __HAL_RCC_LSEDRIVE_CONFIG(RCC_LSEDRIVE_LOW);
 800054c:	4b33      	ldr	r3, [pc, #204]	; (800061c <SystemClock_Config+0x104>)
 800054e:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8000552:	4a32      	ldr	r2, [pc, #200]	; (800061c <SystemClock_Config+0x104>)
 8000554:	f023 0318 	bic.w	r3, r3, #24
 8000558:	f8c2 3090 	str.w	r3, [r2, #144]	; 0x90
  /** Initializes the CPU, AHB and APB busses clocks 
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_LSE|RCC_OSCILLATORTYPE_MSI;
 800055c:	2314      	movs	r3, #20
 800055e:	66fb      	str	r3, [r7, #108]	; 0x6c
  RCC_OscInitStruct.LSEState = RCC_LSE_ON;
 8000560:	2301      	movs	r3, #1
 8000562:	677b      	str	r3, [r7, #116]	; 0x74
  RCC_OscInitStruct.MSIState = RCC_MSI_ON;
 8000564:	2301      	movs	r3, #1
 8000566:	f8c7 3084 	str.w	r3, [r7, #132]	; 0x84
  RCC_OscInitStruct.MSICalibrationValue = 0;
 800056a:	2300      	movs	r3, #0
 800056c:	f8c7 3088 	str.w	r3, [r7, #136]	; 0x88
  RCC_OscInitStruct.MSIClockRange = RCC_MSIRANGE_6;
 8000570:	2360      	movs	r3, #96	; 0x60
 8000572:	f8c7 308c 	str.w	r3, [r7, #140]	; 0x8c
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 8000576:	2302      	movs	r3, #2
 8000578:	f8c7 3094 	str.w	r3, [r7, #148]	; 0x94
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_MSI;
 800057c:	2301      	movs	r3, #1
 800057e:	f8c7 3098 	str.w	r3, [r7, #152]	; 0x98
  RCC_OscInitStruct.PLL.PLLM = 1;
 8000582:	2301      	movs	r3, #1
 8000584:	f8c7 309c 	str.w	r3, [r7, #156]	; 0x9c
  RCC_OscInitStruct.PLL.PLLN = 16;
 8000588:	2310      	movs	r3, #16
 800058a:	f8c7 30a0 	str.w	r3, [r7, #160]	; 0xa0
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV7;
 800058e:	2307      	movs	r3, #7
 8000590:	f8c7 30a4 	str.w	r3, [r7, #164]	; 0xa4
  RCC_OscInitStruct.PLL.PLLQ = RCC_PLLQ_DIV2;
 8000594:	2302      	movs	r3, #2
 8000596:	f8c7 30a8 	str.w	r3, [r7, #168]	; 0xa8
  RCC_OscInitStruct.PLL.PLLR = RCC_PLLR_DIV2;
 800059a:	2302      	movs	r3, #2
 800059c:	f8c7 30ac 	str.w	r3, [r7, #172]	; 0xac
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 80005a0:	f107 036c 	add.w	r3, r7, #108	; 0x6c
 80005a4:	4618      	mov	r0, r3
 80005a6:	f001 fbb5 	bl	8001d14 <HAL_RCC_OscConfig>
 80005aa:	4603      	mov	r3, r0
 80005ac:	2b00      	cmp	r3, #0
 80005ae:	d001      	beq.n	80005b4 <SystemClock_Config+0x9c>
  {
    Error_Handler();
 80005b0:	f000 f8f0 	bl	8000794 <Error_Handler>
  }
  /** Initializes the CPU, AHB and APB busses clocks 
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 80005b4:	230f      	movs	r3, #15
 80005b6:	65bb      	str	r3, [r7, #88]	; 0x58
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 80005b8:	2303      	movs	r3, #3
 80005ba:	65fb      	str	r3, [r7, #92]	; 0x5c
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 80005bc:	2300      	movs	r3, #0
 80005be:	663b      	str	r3, [r7, #96]	; 0x60
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 80005c0:	2300      	movs	r3, #0
 80005c2:	667b      	str	r3, [r7, #100]	; 0x64
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 80005c4:	2300      	movs	r3, #0
 80005c6:	66bb      	str	r3, [r7, #104]	; 0x68

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_1) != HAL_OK)
 80005c8:	f107 0358 	add.w	r3, r7, #88	; 0x58
 80005cc:	2101      	movs	r1, #1
 80005ce:	4618      	mov	r0, r3
 80005d0:	f001 ff8e 	bl	80024f0 <HAL_RCC_ClockConfig>
 80005d4:	4603      	mov	r3, r0
 80005d6:	2b00      	cmp	r3, #0
 80005d8:	d001      	beq.n	80005de <SystemClock_Config+0xc6>
  {
    Error_Handler();
 80005da:	f000 f8db 	bl	8000794 <Error_Handler>
  }
  PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_USART2|RCC_PERIPHCLK_I2C1;
 80005de:	2342      	movs	r3, #66	; 0x42
 80005e0:	607b      	str	r3, [r7, #4]
  PeriphClkInit.Usart2ClockSelection = RCC_USART2CLKSOURCE_PCLK1;
 80005e2:	2300      	movs	r3, #0
 80005e4:	62bb      	str	r3, [r7, #40]	; 0x28
  PeriphClkInit.I2c1ClockSelection = RCC_I2C1CLKSOURCE_PCLK1;
 80005e6:	2300      	movs	r3, #0
 80005e8:	633b      	str	r3, [r7, #48]	; 0x30
  if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 80005ea:	1d3b      	adds	r3, r7, #4
 80005ec:	4618      	mov	r0, r3
 80005ee:	f002 f983 	bl	80028f8 <HAL_RCCEx_PeriphCLKConfig>
 80005f2:	4603      	mov	r3, r0
 80005f4:	2b00      	cmp	r3, #0
 80005f6:	d001      	beq.n	80005fc <SystemClock_Config+0xe4>
  {
    Error_Handler();
 80005f8:	f000 f8cc 	bl	8000794 <Error_Handler>
  }
  /** Configure the main internal regulator output voltage 
  */
  if (HAL_PWREx_ControlVoltageScaling(PWR_REGULATOR_VOLTAGE_SCALE1) != HAL_OK)
 80005fc:	f44f 7000 	mov.w	r0, #512	; 0x200
 8000600:	f001 fb32 	bl	8001c68 <HAL_PWREx_ControlVoltageScaling>
 8000604:	4603      	mov	r3, r0
 8000606:	2b00      	cmp	r3, #0
 8000608:	d001      	beq.n	800060e <SystemClock_Config+0xf6>
  {
    Error_Handler();
 800060a:	f000 f8c3 	bl	8000794 <Error_Handler>
  }
  /** Enable MSI Auto calibration 
  */
  HAL_RCCEx_EnableMSIPLLMode();
 800060e:	f002 fb65 	bl	8002cdc <HAL_RCCEx_EnableMSIPLLMode>
}
 8000612:	bf00      	nop
 8000614:	37b0      	adds	r7, #176	; 0xb0
 8000616:	46bd      	mov	sp, r7
 8000618:	bd80      	pop	{r7, pc}
 800061a:	bf00      	nop
 800061c:	40021000 	.word	0x40021000

08000620 <MX_I2C1_Init>:
  * @brief I2C1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_I2C1_Init(void)
{
 8000620:	b580      	push	{r7, lr}
 8000622:	af00      	add	r7, sp, #0
  /* USER CODE END I2C1_Init 0 */

  /* USER CODE BEGIN I2C1_Init 1 */

  /* USER CODE END I2C1_Init 1 */
  hi2c1.Instance = I2C1;
 8000624:	4b1b      	ldr	r3, [pc, #108]	; (8000694 <MX_I2C1_Init+0x74>)
 8000626:	4a1c      	ldr	r2, [pc, #112]	; (8000698 <MX_I2C1_Init+0x78>)
 8000628:	601a      	str	r2, [r3, #0]
  hi2c1.Init.Timing = 0x00707CBB;
 800062a:	4b1a      	ldr	r3, [pc, #104]	; (8000694 <MX_I2C1_Init+0x74>)
 800062c:	4a1b      	ldr	r2, [pc, #108]	; (800069c <MX_I2C1_Init+0x7c>)
 800062e:	605a      	str	r2, [r3, #4]
  hi2c1.Init.OwnAddress1 = 0;
 8000630:	4b18      	ldr	r3, [pc, #96]	; (8000694 <MX_I2C1_Init+0x74>)
 8000632:	2200      	movs	r2, #0
 8000634:	609a      	str	r2, [r3, #8]
  hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 8000636:	4b17      	ldr	r3, [pc, #92]	; (8000694 <MX_I2C1_Init+0x74>)
 8000638:	2201      	movs	r2, #1
 800063a:	60da      	str	r2, [r3, #12]
  hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 800063c:	4b15      	ldr	r3, [pc, #84]	; (8000694 <MX_I2C1_Init+0x74>)
 800063e:	2200      	movs	r2, #0
 8000640:	611a      	str	r2, [r3, #16]
  hi2c1.Init.OwnAddress2 = 0;
 8000642:	4b14      	ldr	r3, [pc, #80]	; (8000694 <MX_I2C1_Init+0x74>)
 8000644:	2200      	movs	r2, #0
 8000646:	615a      	str	r2, [r3, #20]
  hi2c1.Init.OwnAddress2Masks = I2C_OA2_NOMASK;
 8000648:	4b12      	ldr	r3, [pc, #72]	; (8000694 <MX_I2C1_Init+0x74>)
 800064a:	2200      	movs	r2, #0
 800064c:	619a      	str	r2, [r3, #24]
  hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 800064e:	4b11      	ldr	r3, [pc, #68]	; (8000694 <MX_I2C1_Init+0x74>)
 8000650:	2200      	movs	r2, #0
 8000652:	61da      	str	r2, [r3, #28]
  hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 8000654:	4b0f      	ldr	r3, [pc, #60]	; (8000694 <MX_I2C1_Init+0x74>)
 8000656:	2200      	movs	r2, #0
 8000658:	621a      	str	r2, [r3, #32]
  if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 800065a:	480e      	ldr	r0, [pc, #56]	; (8000694 <MX_I2C1_Init+0x74>)
 800065c:	f000 fee2 	bl	8001424 <HAL_I2C_Init>
 8000660:	4603      	mov	r3, r0
 8000662:	2b00      	cmp	r3, #0
 8000664:	d001      	beq.n	800066a <MX_I2C1_Init+0x4a>
  {
    Error_Handler();
 8000666:	f000 f895 	bl	8000794 <Error_Handler>
  }
  /** Configure Analogue filter 
  */
  if (HAL_I2CEx_ConfigAnalogFilter(&hi2c1, I2C_ANALOGFILTER_ENABLE) != HAL_OK)
 800066a:	2100      	movs	r1, #0
 800066c:	4809      	ldr	r0, [pc, #36]	; (8000694 <MX_I2C1_Init+0x74>)
 800066e:	f001 fa45 	bl	8001afc <HAL_I2CEx_ConfigAnalogFilter>
 8000672:	4603      	mov	r3, r0
 8000674:	2b00      	cmp	r3, #0
 8000676:	d001      	beq.n	800067c <MX_I2C1_Init+0x5c>
  {
    Error_Handler();
 8000678:	f000 f88c 	bl	8000794 <Error_Handler>
  }
  /** Configure Digital filter 
  */
  if (HAL_I2CEx_ConfigDigitalFilter(&hi2c1, 0) != HAL_OK)
 800067c:	2100      	movs	r1, #0
 800067e:	4805      	ldr	r0, [pc, #20]	; (8000694 <MX_I2C1_Init+0x74>)
 8000680:	f001 fa87 	bl	8001b92 <HAL_I2CEx_ConfigDigitalFilter>
 8000684:	4603      	mov	r3, r0
 8000686:	2b00      	cmp	r3, #0
 8000688:	d001      	beq.n	800068e <MX_I2C1_Init+0x6e>
  {
    Error_Handler();
 800068a:	f000 f883 	bl	8000794 <Error_Handler>
  }
  /* USER CODE BEGIN I2C1_Init 2 */

  /* USER CODE END I2C1_Init 2 */

}
 800068e:	bf00      	nop
 8000690:	bd80      	pop	{r7, pc}
 8000692:	bf00      	nop
 8000694:	20000438 	.word	0x20000438
 8000698:	40005400 	.word	0x40005400
 800069c:	00707cbb 	.word	0x00707cbb

080006a0 <MX_USART2_UART_Init>:
  * @brief USART2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_USART2_UART_Init(void)
{
 80006a0:	b580      	push	{r7, lr}
 80006a2:	af00      	add	r7, sp, #0
  /* USER CODE END USART2_Init 0 */

  /* USER CODE BEGIN USART2_Init 1 */

  /* USER CODE END USART2_Init 1 */
  huart2.Instance = USART2;
 80006a4:	4b14      	ldr	r3, [pc, #80]	; (80006f8 <MX_USART2_UART_Init+0x58>)
 80006a6:	4a15      	ldr	r2, [pc, #84]	; (80006fc <MX_USART2_UART_Init+0x5c>)
 80006a8:	601a      	str	r2, [r3, #0]
  huart2.Init.BaudRate = 115200;
 80006aa:	4b13      	ldr	r3, [pc, #76]	; (80006f8 <MX_USART2_UART_Init+0x58>)
 80006ac:	f44f 32e1 	mov.w	r2, #115200	; 0x1c200
 80006b0:	605a      	str	r2, [r3, #4]
  huart2.Init.WordLength = UART_WORDLENGTH_8B;
 80006b2:	4b11      	ldr	r3, [pc, #68]	; (80006f8 <MX_USART2_UART_Init+0x58>)
 80006b4:	2200      	movs	r2, #0
 80006b6:	609a      	str	r2, [r3, #8]
  huart2.Init.StopBits = UART_STOPBITS_1;
 80006b8:	4b0f      	ldr	r3, [pc, #60]	; (80006f8 <MX_USART2_UART_Init+0x58>)
 80006ba:	2200      	movs	r2, #0
 80006bc:	60da      	str	r2, [r3, #12]
  huart2.Init.Parity = UART_PARITY_NONE;
 80006be:	4b0e      	ldr	r3, [pc, #56]	; (80006f8 <MX_USART2_UART_Init+0x58>)
 80006c0:	2200      	movs	r2, #0
 80006c2:	611a      	str	r2, [r3, #16]
  huart2.Init.Mode = UART_MODE_TX_RX;
 80006c4:	4b0c      	ldr	r3, [pc, #48]	; (80006f8 <MX_USART2_UART_Init+0x58>)
 80006c6:	220c      	movs	r2, #12
 80006c8:	615a      	str	r2, [r3, #20]
  huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 80006ca:	4b0b      	ldr	r3, [pc, #44]	; (80006f8 <MX_USART2_UART_Init+0x58>)
 80006cc:	2200      	movs	r2, #0
 80006ce:	619a      	str	r2, [r3, #24]
  huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 80006d0:	4b09      	ldr	r3, [pc, #36]	; (80006f8 <MX_USART2_UART_Init+0x58>)
 80006d2:	2200      	movs	r2, #0
 80006d4:	61da      	str	r2, [r3, #28]
  huart2.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 80006d6:	4b08      	ldr	r3, [pc, #32]	; (80006f8 <MX_USART2_UART_Init+0x58>)
 80006d8:	2200      	movs	r2, #0
 80006da:	621a      	str	r2, [r3, #32]
  huart2.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 80006dc:	4b06      	ldr	r3, [pc, #24]	; (80006f8 <MX_USART2_UART_Init+0x58>)
 80006de:	2200      	movs	r2, #0
 80006e0:	625a      	str	r2, [r3, #36]	; 0x24
  if (HAL_UART_Init(&huart2) != HAL_OK)
 80006e2:	4805      	ldr	r0, [pc, #20]	; (80006f8 <MX_USART2_UART_Init+0x58>)
 80006e4:	f002 fbfa 	bl	8002edc <HAL_UART_Init>
 80006e8:	4603      	mov	r3, r0
 80006ea:	2b00      	cmp	r3, #0
 80006ec:	d001      	beq.n	80006f2 <MX_USART2_UART_Init+0x52>
  {
    Error_Handler();
 80006ee:	f000 f851 	bl	8000794 <Error_Handler>
  }
  /* USER CODE BEGIN USART2_Init 2 */

  /* USER CODE END USART2_Init 2 */

}
 80006f2:	bf00      	nop
 80006f4:	bd80      	pop	{r7, pc}
 80006f6:	bf00      	nop
 80006f8:	200004b4 	.word	0x200004b4
 80006fc:	40004400 	.word	0x40004400

08000700 <MX_GPIO_Init>:
  * @brief GPIO Initialization Function
  * @param None
  * @retval None
  */
static void MX_GPIO_Init(void)
{
 8000700:	b580      	push	{r7, lr}
 8000702:	b088      	sub	sp, #32
 8000704:	af00      	add	r7, sp, #0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8000706:	f107 030c 	add.w	r3, r7, #12
 800070a:	2200      	movs	r2, #0
 800070c:	601a      	str	r2, [r3, #0]
 800070e:	605a      	str	r2, [r3, #4]
 8000710:	609a      	str	r2, [r3, #8]
 8000712:	60da      	str	r2, [r3, #12]
 8000714:	611a      	str	r2, [r3, #16]

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOC_CLK_ENABLE();
 8000716:	4b1d      	ldr	r3, [pc, #116]	; (800078c <MX_GPIO_Init+0x8c>)
 8000718:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800071a:	4a1c      	ldr	r2, [pc, #112]	; (800078c <MX_GPIO_Init+0x8c>)
 800071c:	f043 0304 	orr.w	r3, r3, #4
 8000720:	64d3      	str	r3, [r2, #76]	; 0x4c
 8000722:	4b1a      	ldr	r3, [pc, #104]	; (800078c <MX_GPIO_Init+0x8c>)
 8000724:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8000726:	f003 0304 	and.w	r3, r3, #4
 800072a:	60bb      	str	r3, [r7, #8]
 800072c:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 800072e:	4b17      	ldr	r3, [pc, #92]	; (800078c <MX_GPIO_Init+0x8c>)
 8000730:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8000732:	4a16      	ldr	r2, [pc, #88]	; (800078c <MX_GPIO_Init+0x8c>)
 8000734:	f043 0301 	orr.w	r3, r3, #1
 8000738:	64d3      	str	r3, [r2, #76]	; 0x4c
 800073a:	4b14      	ldr	r3, [pc, #80]	; (800078c <MX_GPIO_Init+0x8c>)
 800073c:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800073e:	f003 0301 	and.w	r3, r3, #1
 8000742:	607b      	str	r3, [r7, #4]
 8000744:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 8000746:	4b11      	ldr	r3, [pc, #68]	; (800078c <MX_GPIO_Init+0x8c>)
 8000748:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800074a:	4a10      	ldr	r2, [pc, #64]	; (800078c <MX_GPIO_Init+0x8c>)
 800074c:	f043 0302 	orr.w	r3, r3, #2
 8000750:	64d3      	str	r3, [r2, #76]	; 0x4c
 8000752:	4b0e      	ldr	r3, [pc, #56]	; (800078c <MX_GPIO_Init+0x8c>)
 8000754:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8000756:	f003 0302 	and.w	r3, r3, #2
 800075a:	603b      	str	r3, [r7, #0]
 800075c:	683b      	ldr	r3, [r7, #0]

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(LD3_GPIO_Port, LD3_Pin, GPIO_PIN_RESET);
 800075e:	2200      	movs	r2, #0
 8000760:	2108      	movs	r1, #8
 8000762:	480b      	ldr	r0, [pc, #44]	; (8000790 <MX_GPIO_Init+0x90>)
 8000764:	f000 fe46 	bl	80013f4 <HAL_GPIO_WritePin>

  /*Configure GPIO pin : LD3_Pin */
  GPIO_InitStruct.Pin = LD3_Pin;
 8000768:	2308      	movs	r3, #8
 800076a:	60fb      	str	r3, [r7, #12]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 800076c:	2301      	movs	r3, #1
 800076e:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000770:	2300      	movs	r3, #0
 8000772:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000774:	2300      	movs	r3, #0
 8000776:	61bb      	str	r3, [r7, #24]
  HAL_GPIO_Init(LD3_GPIO_Port, &GPIO_InitStruct);
 8000778:	f107 030c 	add.w	r3, r7, #12
 800077c:	4619      	mov	r1, r3
 800077e:	4804      	ldr	r0, [pc, #16]	; (8000790 <MX_GPIO_Init+0x90>)
 8000780:	f000 fcce 	bl	8001120 <HAL_GPIO_Init>

}
 8000784:	bf00      	nop
 8000786:	3720      	adds	r7, #32
 8000788:	46bd      	mov	sp, r7
 800078a:	bd80      	pop	{r7, pc}
 800078c:	40021000 	.word	0x40021000
 8000790:	48000400 	.word	0x48000400

08000794 <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 8000794:	b480      	push	{r7}
 8000796:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */

  /* USER CODE END Error_Handler_Debug */
}
 8000798:	bf00      	nop
 800079a:	46bd      	mov	sp, r7
 800079c:	f85d 7b04 	ldr.w	r7, [sp], #4
 80007a0:	4770      	bx	lr

080007a2 <ssd1306_Reset>:

#include "ssd1306.h"

#if defined(SSD1306_USE_I2C)

void ssd1306_Reset(void) {
 80007a2:	b480      	push	{r7}
 80007a4:	af00      	add	r7, sp, #0
	/* for I2C - do nothing */
}
 80007a6:	bf00      	nop
 80007a8:	46bd      	mov	sp, r7
 80007aa:	f85d 7b04 	ldr.w	r7, [sp], #4
 80007ae:	4770      	bx	lr

080007b0 <ssd1306_WriteCommand>:

// Send a byte to the command register
void ssd1306_WriteCommand(uint8_t byte) {
 80007b0:	b580      	push	{r7, lr}
 80007b2:	b086      	sub	sp, #24
 80007b4:	af04      	add	r7, sp, #16
 80007b6:	4603      	mov	r3, r0
 80007b8:	71fb      	strb	r3, [r7, #7]
	HAL_I2C_Mem_Write(&SSD1306_I2C_PORT, SSD1306_I2C_ADDR, 0x00, 1, &byte, 1, HAL_MAX_DELAY);
 80007ba:	f04f 33ff 	mov.w	r3, #4294967295
 80007be:	9302      	str	r3, [sp, #8]
 80007c0:	2301      	movs	r3, #1
 80007c2:	9301      	str	r3, [sp, #4]
 80007c4:	1dfb      	adds	r3, r7, #7
 80007c6:	9300      	str	r3, [sp, #0]
 80007c8:	2301      	movs	r3, #1
 80007ca:	2200      	movs	r2, #0
 80007cc:	2178      	movs	r1, #120	; 0x78
 80007ce:	4803      	ldr	r0, [pc, #12]	; (80007dc <ssd1306_WriteCommand+0x2c>)
 80007d0:	f000 feb8 	bl	8001544 <HAL_I2C_Mem_Write>
}
 80007d4:	bf00      	nop
 80007d6:	3708      	adds	r7, #8
 80007d8:	46bd      	mov	sp, r7
 80007da:	bd80      	pop	{r7, pc}
 80007dc:	20000438 	.word	0x20000438

080007e0 <ssd1306_WriteData>:

// Send data
void ssd1306_WriteData(uint8_t* buffer, size_t buff_size) {
 80007e0:	b580      	push	{r7, lr}
 80007e2:	b086      	sub	sp, #24
 80007e4:	af04      	add	r7, sp, #16
 80007e6:	6078      	str	r0, [r7, #4]
 80007e8:	6039      	str	r1, [r7, #0]
	HAL_I2C_Mem_Write(&SSD1306_I2C_PORT, SSD1306_I2C_ADDR, 0x40, 1, buffer, buff_size, HAL_MAX_DELAY);
 80007ea:	683b      	ldr	r3, [r7, #0]
 80007ec:	b29b      	uxth	r3, r3
 80007ee:	f04f 32ff 	mov.w	r2, #4294967295
 80007f2:	9202      	str	r2, [sp, #8]
 80007f4:	9301      	str	r3, [sp, #4]
 80007f6:	687b      	ldr	r3, [r7, #4]
 80007f8:	9300      	str	r3, [sp, #0]
 80007fa:	2301      	movs	r3, #1
 80007fc:	2240      	movs	r2, #64	; 0x40
 80007fe:	2178      	movs	r1, #120	; 0x78
 8000800:	4803      	ldr	r0, [pc, #12]	; (8000810 <ssd1306_WriteData+0x30>)
 8000802:	f000 fe9f 	bl	8001544 <HAL_I2C_Mem_Write>
}
 8000806:	bf00      	nop
 8000808:	3708      	adds	r7, #8
 800080a:	46bd      	mov	sp, r7
 800080c:	bd80      	pop	{r7, pc}
 800080e:	bf00      	nop
 8000810:	20000438 	.word	0x20000438

08000814 <ssd1306_Init>:

// Screen object
static SSD1306_t SSD1306;

// Initialize the oled screen
void ssd1306_Init(void) {
 8000814:	b580      	push	{r7, lr}
 8000816:	af00      	add	r7, sp, #0
	// Reset OLED
	ssd1306_Reset();
 8000818:	f7ff ffc3 	bl	80007a2 <ssd1306_Reset>

    // Wait for the screen to boot
    HAL_Delay(100);
 800081c:	2064      	movs	r0, #100	; 0x64
 800081e:	f000 fb77 	bl	8000f10 <HAL_Delay>

    // Init OLED
    ssd1306_WriteCommand(0xAE); //display off
 8000822:	20ae      	movs	r0, #174	; 0xae
 8000824:	f7ff ffc4 	bl	80007b0 <ssd1306_WriteCommand>

    ssd1306_WriteCommand(0x20); //Set Memory Addressing Mode
 8000828:	2020      	movs	r0, #32
 800082a:	f7ff ffc1 	bl	80007b0 <ssd1306_WriteCommand>
    ssd1306_WriteCommand(0x00); // 00b,Horizontal Addressing Mode; 01b,Vertical Addressing Mode;
 800082e:	2000      	movs	r0, #0
 8000830:	f7ff ffbe 	bl	80007b0 <ssd1306_WriteCommand>
                                // 10b,Page Addressing Mode (RESET); 11b,Invalid

    ssd1306_WriteCommand(0xB0); //Set Page Start Address for Page Addressing Mode,0-7
 8000834:	20b0      	movs	r0, #176	; 0xb0
 8000836:	f7ff ffbb 	bl	80007b0 <ssd1306_WriteCommand>

#ifdef SSD1306_MIRROR_VERT
    ssd1306_WriteCommand(0xC0); // Mirror vertically
#else
    ssd1306_WriteCommand(0xC8); //Set COM Output Scan Direction
 800083a:	20c8      	movs	r0, #200	; 0xc8
 800083c:	f7ff ffb8 	bl	80007b0 <ssd1306_WriteCommand>
#endif

    ssd1306_WriteCommand(0x00); //---set low column address
 8000840:	2000      	movs	r0, #0
 8000842:	f7ff ffb5 	bl	80007b0 <ssd1306_WriteCommand>
    ssd1306_WriteCommand(0x10); //---set high column address
 8000846:	2010      	movs	r0, #16
 8000848:	f7ff ffb2 	bl	80007b0 <ssd1306_WriteCommand>

    ssd1306_WriteCommand(0x40); //--set start line address - CHECK
 800084c:	2040      	movs	r0, #64	; 0x40
 800084e:	f7ff ffaf 	bl	80007b0 <ssd1306_WriteCommand>

    ssd1306_WriteCommand(0x81); //--set contrast control register - CHECK
 8000852:	2081      	movs	r0, #129	; 0x81
 8000854:	f7ff ffac 	bl	80007b0 <ssd1306_WriteCommand>
    ssd1306_WriteCommand(0xFF);
 8000858:	20ff      	movs	r0, #255	; 0xff
 800085a:	f7ff ffa9 	bl	80007b0 <ssd1306_WriteCommand>

#ifdef SSD1306_MIRROR_HORIZ
    ssd1306_WriteCommand(0xA0); // Mirror horizontally
#else
    ssd1306_WriteCommand(0xA1); //--set segment re-map 0 to 127 - CHECK
 800085e:	20a1      	movs	r0, #161	; 0xa1
 8000860:	f7ff ffa6 	bl	80007b0 <ssd1306_WriteCommand>
#endif

#ifdef SSD1306_INVERSE_COLOR
    ssd1306_WriteCommand(0xA7); //--set inverse color
#else
    ssd1306_WriteCommand(0xA6); //--set normal color
 8000864:	20a6      	movs	r0, #166	; 0xa6
 8000866:	f7ff ffa3 	bl	80007b0 <ssd1306_WriteCommand>
#endif

    ssd1306_WriteCommand(0xA8); //--set multiplex ratio(1 to 64) - CHECK
 800086a:	20a8      	movs	r0, #168	; 0xa8
 800086c:	f7ff ffa0 	bl	80007b0 <ssd1306_WriteCommand>
    ssd1306_WriteCommand(0x3F); //
 8000870:	203f      	movs	r0, #63	; 0x3f
 8000872:	f7ff ff9d 	bl	80007b0 <ssd1306_WriteCommand>

    ssd1306_WriteCommand(0xA4); //0xa4,Output follows RAM content;0xa5,Output ignores RAM content
 8000876:	20a4      	movs	r0, #164	; 0xa4
 8000878:	f7ff ff9a 	bl	80007b0 <ssd1306_WriteCommand>

    ssd1306_WriteCommand(0xD3); //-set display offset - CHECK
 800087c:	20d3      	movs	r0, #211	; 0xd3
 800087e:	f7ff ff97 	bl	80007b0 <ssd1306_WriteCommand>
    ssd1306_WriteCommand(0x00); //-not offset
 8000882:	2000      	movs	r0, #0
 8000884:	f7ff ff94 	bl	80007b0 <ssd1306_WriteCommand>

    ssd1306_WriteCommand(0xD5); //--set display clock divide ratio/oscillator frequency
 8000888:	20d5      	movs	r0, #213	; 0xd5
 800088a:	f7ff ff91 	bl	80007b0 <ssd1306_WriteCommand>
    ssd1306_WriteCommand(0xF0); //--set divide ratio
 800088e:	20f0      	movs	r0, #240	; 0xf0
 8000890:	f7ff ff8e 	bl	80007b0 <ssd1306_WriteCommand>

    ssd1306_WriteCommand(0xD9); //--set pre-charge period
 8000894:	20d9      	movs	r0, #217	; 0xd9
 8000896:	f7ff ff8b 	bl	80007b0 <ssd1306_WriteCommand>
    ssd1306_WriteCommand(0x22); //
 800089a:	2022      	movs	r0, #34	; 0x22
 800089c:	f7ff ff88 	bl	80007b0 <ssd1306_WriteCommand>

    ssd1306_WriteCommand(0xDA); //--set com pins hardware configuration - CHECK
 80008a0:	20da      	movs	r0, #218	; 0xda
 80008a2:	f7ff ff85 	bl	80007b0 <ssd1306_WriteCommand>
    ssd1306_WriteCommand(0x12);
 80008a6:	2012      	movs	r0, #18
 80008a8:	f7ff ff82 	bl	80007b0 <ssd1306_WriteCommand>

    ssd1306_WriteCommand(0xDB); //--set vcomh
 80008ac:	20db      	movs	r0, #219	; 0xdb
 80008ae:	f7ff ff7f 	bl	80007b0 <ssd1306_WriteCommand>
    ssd1306_WriteCommand(0x20); //0x20,0.77xVcc
 80008b2:	2020      	movs	r0, #32
 80008b4:	f7ff ff7c 	bl	80007b0 <ssd1306_WriteCommand>

    ssd1306_WriteCommand(0x8D); //--set DC-DC enable
 80008b8:	208d      	movs	r0, #141	; 0x8d
 80008ba:	f7ff ff79 	bl	80007b0 <ssd1306_WriteCommand>
    ssd1306_WriteCommand(0x14); //
 80008be:	2014      	movs	r0, #20
 80008c0:	f7ff ff76 	bl	80007b0 <ssd1306_WriteCommand>
    ssd1306_WriteCommand(0xAF); //--turn on SSD1306 panel
 80008c4:	20af      	movs	r0, #175	; 0xaf
 80008c6:	f7ff ff73 	bl	80007b0 <ssd1306_WriteCommand>

    // Clear screen
    ssd1306_Fill(Black);
 80008ca:	2000      	movs	r0, #0
 80008cc:	f000 f810 	bl	80008f0 <ssd1306_Fill>

    // Flush buffer to screen
    ssd1306_UpdateScreen();
 80008d0:	f000 f830 	bl	8000934 <ssd1306_UpdateScreen>

    // Set default values for screen object
    SSD1306.CurrentX = 0;
 80008d4:	4b05      	ldr	r3, [pc, #20]	; (80008ec <ssd1306_Init+0xd8>)
 80008d6:	2200      	movs	r2, #0
 80008d8:	801a      	strh	r2, [r3, #0]
    SSD1306.CurrentY = 0;
 80008da:	4b04      	ldr	r3, [pc, #16]	; (80008ec <ssd1306_Init+0xd8>)
 80008dc:	2200      	movs	r2, #0
 80008de:	805a      	strh	r2, [r3, #2]

    SSD1306.Initialized = 1;
 80008e0:	4b02      	ldr	r3, [pc, #8]	; (80008ec <ssd1306_Init+0xd8>)
 80008e2:	2201      	movs	r2, #1
 80008e4:	715a      	strb	r2, [r3, #5]
}
 80008e6:	bf00      	nop
 80008e8:	bd80      	pop	{r7, pc}
 80008ea:	bf00      	nop
 80008ec:	20000430 	.word	0x20000430

080008f0 <ssd1306_Fill>:

// Fill the whole screen with the given color
void ssd1306_Fill(SSD1306_COLOR color) {
 80008f0:	b480      	push	{r7}
 80008f2:	b085      	sub	sp, #20
 80008f4:	af00      	add	r7, sp, #0
 80008f6:	4603      	mov	r3, r0
 80008f8:	71fb      	strb	r3, [r7, #7]
    /* Set memory */
    uint32_t i;

    for(i = 0; i < sizeof(SSD1306_Buffer); i++) {
 80008fa:	2300      	movs	r3, #0
 80008fc:	60fb      	str	r3, [r7, #12]
 80008fe:	e00d      	b.n	800091c <ssd1306_Fill+0x2c>
        SSD1306_Buffer[i] = (color == Black) ? 0x00 : 0xFF;
 8000900:	79fb      	ldrb	r3, [r7, #7]
 8000902:	2b00      	cmp	r3, #0
 8000904:	d101      	bne.n	800090a <ssd1306_Fill+0x1a>
 8000906:	2100      	movs	r1, #0
 8000908:	e000      	b.n	800090c <ssd1306_Fill+0x1c>
 800090a:	21ff      	movs	r1, #255	; 0xff
 800090c:	4a08      	ldr	r2, [pc, #32]	; (8000930 <ssd1306_Fill+0x40>)
 800090e:	68fb      	ldr	r3, [r7, #12]
 8000910:	4413      	add	r3, r2
 8000912:	460a      	mov	r2, r1
 8000914:	701a      	strb	r2, [r3, #0]
    for(i = 0; i < sizeof(SSD1306_Buffer); i++) {
 8000916:	68fb      	ldr	r3, [r7, #12]
 8000918:	3301      	adds	r3, #1
 800091a:	60fb      	str	r3, [r7, #12]
 800091c:	68fb      	ldr	r3, [r7, #12]
 800091e:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8000922:	d3ed      	bcc.n	8000900 <ssd1306_Fill+0x10>
    }
}
 8000924:	bf00      	nop
 8000926:	3714      	adds	r7, #20
 8000928:	46bd      	mov	sp, r7
 800092a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800092e:	4770      	bx	lr
 8000930:	20000030 	.word	0x20000030

08000934 <ssd1306_UpdateScreen>:

// Write the screenbuffer with changed to the screen
void ssd1306_UpdateScreen(void) {
 8000934:	b580      	push	{r7, lr}
 8000936:	b082      	sub	sp, #8
 8000938:	af00      	add	r7, sp, #0
    uint8_t i;
    for(i = 0; i < 8; i++) {
 800093a:	2300      	movs	r3, #0
 800093c:	71fb      	strb	r3, [r7, #7]
 800093e:	e016      	b.n	800096e <ssd1306_UpdateScreen+0x3a>
        ssd1306_WriteCommand(0xB0 + i);
 8000940:	79fb      	ldrb	r3, [r7, #7]
 8000942:	3b50      	subs	r3, #80	; 0x50
 8000944:	b2db      	uxtb	r3, r3
 8000946:	4618      	mov	r0, r3
 8000948:	f7ff ff32 	bl	80007b0 <ssd1306_WriteCommand>
        ssd1306_WriteCommand(0x00);
 800094c:	2000      	movs	r0, #0
 800094e:	f7ff ff2f 	bl	80007b0 <ssd1306_WriteCommand>
        ssd1306_WriteCommand(0x10);
 8000952:	2010      	movs	r0, #16
 8000954:	f7ff ff2c 	bl	80007b0 <ssd1306_WriteCommand>
        ssd1306_WriteData(&SSD1306_Buffer[SSD1306_WIDTH*i],SSD1306_WIDTH);
 8000958:	79fb      	ldrb	r3, [r7, #7]
 800095a:	01db      	lsls	r3, r3, #7
 800095c:	4a07      	ldr	r2, [pc, #28]	; (800097c <ssd1306_UpdateScreen+0x48>)
 800095e:	4413      	add	r3, r2
 8000960:	2180      	movs	r1, #128	; 0x80
 8000962:	4618      	mov	r0, r3
 8000964:	f7ff ff3c 	bl	80007e0 <ssd1306_WriteData>
    for(i = 0; i < 8; i++) {
 8000968:	79fb      	ldrb	r3, [r7, #7]
 800096a:	3301      	adds	r3, #1
 800096c:	71fb      	strb	r3, [r7, #7]
 800096e:	79fb      	ldrb	r3, [r7, #7]
 8000970:	2b07      	cmp	r3, #7
 8000972:	d9e5      	bls.n	8000940 <ssd1306_UpdateScreen+0xc>
    }
}
 8000974:	bf00      	nop
 8000976:	3708      	adds	r7, #8
 8000978:	46bd      	mov	sp, r7
 800097a:	bd80      	pop	{r7, pc}
 800097c:	20000030 	.word	0x20000030

08000980 <ssd1306_DrawPixel>:

//    Draw one pixel in the screenbuffer
//    X => X Coordinate
//    Y => Y Coordinate
//    color => Pixel color
void ssd1306_DrawPixel(uint8_t x, uint8_t y, SSD1306_COLOR color) {
 8000980:	b480      	push	{r7}
 8000982:	b083      	sub	sp, #12
 8000984:	af00      	add	r7, sp, #0
 8000986:	4603      	mov	r3, r0
 8000988:	71fb      	strb	r3, [r7, #7]
 800098a:	460b      	mov	r3, r1
 800098c:	71bb      	strb	r3, [r7, #6]
 800098e:	4613      	mov	r3, r2
 8000990:	717b      	strb	r3, [r7, #5]
    if(x >= SSD1306_WIDTH || y >= SSD1306_HEIGHT) {
 8000992:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8000996:	2b00      	cmp	r3, #0
 8000998:	db48      	blt.n	8000a2c <ssd1306_DrawPixel+0xac>
 800099a:	79bb      	ldrb	r3, [r7, #6]
 800099c:	2b3f      	cmp	r3, #63	; 0x3f
 800099e:	d845      	bhi.n	8000a2c <ssd1306_DrawPixel+0xac>
        // Don't write outside the buffer
        return;
    }

    // Check if pixel should be inverted
    if(SSD1306.Inverted) {
 80009a0:	4b25      	ldr	r3, [pc, #148]	; (8000a38 <ssd1306_DrawPixel+0xb8>)
 80009a2:	791b      	ldrb	r3, [r3, #4]
 80009a4:	2b00      	cmp	r3, #0
 80009a6:	d006      	beq.n	80009b6 <ssd1306_DrawPixel+0x36>
        color = (SSD1306_COLOR)!color;
 80009a8:	797b      	ldrb	r3, [r7, #5]
 80009aa:	2b00      	cmp	r3, #0
 80009ac:	bf0c      	ite	eq
 80009ae:	2301      	moveq	r3, #1
 80009b0:	2300      	movne	r3, #0
 80009b2:	b2db      	uxtb	r3, r3
 80009b4:	717b      	strb	r3, [r7, #5]
    }

    // Draw in the right color
    if(color == White) {
 80009b6:	797b      	ldrb	r3, [r7, #5]
 80009b8:	2b01      	cmp	r3, #1
 80009ba:	d11a      	bne.n	80009f2 <ssd1306_DrawPixel+0x72>
        SSD1306_Buffer[x + (y / 8) * SSD1306_WIDTH] |= 1 << (y % 8);
 80009bc:	79fa      	ldrb	r2, [r7, #7]
 80009be:	79bb      	ldrb	r3, [r7, #6]
 80009c0:	08db      	lsrs	r3, r3, #3
 80009c2:	b2d8      	uxtb	r0, r3
 80009c4:	4603      	mov	r3, r0
 80009c6:	01db      	lsls	r3, r3, #7
 80009c8:	4413      	add	r3, r2
 80009ca:	4a1c      	ldr	r2, [pc, #112]	; (8000a3c <ssd1306_DrawPixel+0xbc>)
 80009cc:	5cd3      	ldrb	r3, [r2, r3]
 80009ce:	b25a      	sxtb	r2, r3
 80009d0:	79bb      	ldrb	r3, [r7, #6]
 80009d2:	f003 0307 	and.w	r3, r3, #7
 80009d6:	2101      	movs	r1, #1
 80009d8:	fa01 f303 	lsl.w	r3, r1, r3
 80009dc:	b25b      	sxtb	r3, r3
 80009de:	4313      	orrs	r3, r2
 80009e0:	b259      	sxtb	r1, r3
 80009e2:	79fa      	ldrb	r2, [r7, #7]
 80009e4:	4603      	mov	r3, r0
 80009e6:	01db      	lsls	r3, r3, #7
 80009e8:	4413      	add	r3, r2
 80009ea:	b2c9      	uxtb	r1, r1
 80009ec:	4a13      	ldr	r2, [pc, #76]	; (8000a3c <ssd1306_DrawPixel+0xbc>)
 80009ee:	54d1      	strb	r1, [r2, r3]
 80009f0:	e01d      	b.n	8000a2e <ssd1306_DrawPixel+0xae>
    } else {
        SSD1306_Buffer[x + (y / 8) * SSD1306_WIDTH] &= ~(1 << (y % 8));
 80009f2:	79fa      	ldrb	r2, [r7, #7]
 80009f4:	79bb      	ldrb	r3, [r7, #6]
 80009f6:	08db      	lsrs	r3, r3, #3
 80009f8:	b2d8      	uxtb	r0, r3
 80009fa:	4603      	mov	r3, r0
 80009fc:	01db      	lsls	r3, r3, #7
 80009fe:	4413      	add	r3, r2
 8000a00:	4a0e      	ldr	r2, [pc, #56]	; (8000a3c <ssd1306_DrawPixel+0xbc>)
 8000a02:	5cd3      	ldrb	r3, [r2, r3]
 8000a04:	b25a      	sxtb	r2, r3
 8000a06:	79bb      	ldrb	r3, [r7, #6]
 8000a08:	f003 0307 	and.w	r3, r3, #7
 8000a0c:	2101      	movs	r1, #1
 8000a0e:	fa01 f303 	lsl.w	r3, r1, r3
 8000a12:	b25b      	sxtb	r3, r3
 8000a14:	43db      	mvns	r3, r3
 8000a16:	b25b      	sxtb	r3, r3
 8000a18:	4013      	ands	r3, r2
 8000a1a:	b259      	sxtb	r1, r3
 8000a1c:	79fa      	ldrb	r2, [r7, #7]
 8000a1e:	4603      	mov	r3, r0
 8000a20:	01db      	lsls	r3, r3, #7
 8000a22:	4413      	add	r3, r2
 8000a24:	b2c9      	uxtb	r1, r1
 8000a26:	4a05      	ldr	r2, [pc, #20]	; (8000a3c <ssd1306_DrawPixel+0xbc>)
 8000a28:	54d1      	strb	r1, [r2, r3]
 8000a2a:	e000      	b.n	8000a2e <ssd1306_DrawPixel+0xae>
        return;
 8000a2c:	bf00      	nop
    }
}
 8000a2e:	370c      	adds	r7, #12
 8000a30:	46bd      	mov	sp, r7
 8000a32:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000a36:	4770      	bx	lr
 8000a38:	20000430 	.word	0x20000430
 8000a3c:	20000030 	.word	0x20000030

08000a40 <ssd1306_WriteChar>:

// Draw 1 char to the screen buffer
// ch       => char om weg te schrijven
// Font     => Font waarmee we gaan schrijven
// color    => Black or White
char ssd1306_WriteChar(char ch, FontDef Font, SSD1306_COLOR color) {
 8000a40:	b590      	push	{r4, r7, lr}
 8000a42:	b089      	sub	sp, #36	; 0x24
 8000a44:	af00      	add	r7, sp, #0
 8000a46:	4604      	mov	r4, r0
 8000a48:	1d38      	adds	r0, r7, #4
 8000a4a:	e880 0006 	stmia.w	r0, {r1, r2}
 8000a4e:	461a      	mov	r2, r3
 8000a50:	4623      	mov	r3, r4
 8000a52:	73fb      	strb	r3, [r7, #15]
 8000a54:	4613      	mov	r3, r2
 8000a56:	73bb      	strb	r3, [r7, #14]
    uint32_t i, b, j;

    // Check if character is valid
    if (ch < 32 || ch > 126)
 8000a58:	7bfb      	ldrb	r3, [r7, #15]
 8000a5a:	2b1f      	cmp	r3, #31
 8000a5c:	d902      	bls.n	8000a64 <ssd1306_WriteChar+0x24>
 8000a5e:	7bfb      	ldrb	r3, [r7, #15]
 8000a60:	2b7e      	cmp	r3, #126	; 0x7e
 8000a62:	d901      	bls.n	8000a68 <ssd1306_WriteChar+0x28>
        return 0;
 8000a64:	2300      	movs	r3, #0
 8000a66:	e06d      	b.n	8000b44 <ssd1306_WriteChar+0x104>

    // Check remaining space on current line
    if (SSD1306_WIDTH < (SSD1306.CurrentX + Font.FontWidth) ||
 8000a68:	4b38      	ldr	r3, [pc, #224]	; (8000b4c <ssd1306_WriteChar+0x10c>)
 8000a6a:	881b      	ldrh	r3, [r3, #0]
 8000a6c:	461a      	mov	r2, r3
 8000a6e:	793b      	ldrb	r3, [r7, #4]
 8000a70:	4413      	add	r3, r2
 8000a72:	2b80      	cmp	r3, #128	; 0x80
 8000a74:	dc06      	bgt.n	8000a84 <ssd1306_WriteChar+0x44>
        SSD1306_HEIGHT < (SSD1306.CurrentY + Font.FontHeight))
 8000a76:	4b35      	ldr	r3, [pc, #212]	; (8000b4c <ssd1306_WriteChar+0x10c>)
 8000a78:	885b      	ldrh	r3, [r3, #2]
 8000a7a:	461a      	mov	r2, r3
 8000a7c:	797b      	ldrb	r3, [r7, #5]
 8000a7e:	4413      	add	r3, r2
    if (SSD1306_WIDTH < (SSD1306.CurrentX + Font.FontWidth) ||
 8000a80:	2b40      	cmp	r3, #64	; 0x40
 8000a82:	dd01      	ble.n	8000a88 <ssd1306_WriteChar+0x48>
    {
        // Not enough space on current line
        return 0;
 8000a84:	2300      	movs	r3, #0
 8000a86:	e05d      	b.n	8000b44 <ssd1306_WriteChar+0x104>
    }

    // Use the font to write
    for(i = 0; i < Font.FontHeight; i++) {
 8000a88:	2300      	movs	r3, #0
 8000a8a:	61fb      	str	r3, [r7, #28]
 8000a8c:	e04c      	b.n	8000b28 <ssd1306_WriteChar+0xe8>
        b = Font.data[(ch - 32) * Font.FontHeight + i];
 8000a8e:	68ba      	ldr	r2, [r7, #8]
 8000a90:	7bfb      	ldrb	r3, [r7, #15]
 8000a92:	3b20      	subs	r3, #32
 8000a94:	7979      	ldrb	r1, [r7, #5]
 8000a96:	fb01 f303 	mul.w	r3, r1, r3
 8000a9a:	4619      	mov	r1, r3
 8000a9c:	69fb      	ldr	r3, [r7, #28]
 8000a9e:	440b      	add	r3, r1
 8000aa0:	005b      	lsls	r3, r3, #1
 8000aa2:	4413      	add	r3, r2
 8000aa4:	881b      	ldrh	r3, [r3, #0]
 8000aa6:	617b      	str	r3, [r7, #20]
        for(j = 0; j < Font.FontWidth; j++) {
 8000aa8:	2300      	movs	r3, #0
 8000aaa:	61bb      	str	r3, [r7, #24]
 8000aac:	e034      	b.n	8000b18 <ssd1306_WriteChar+0xd8>
            if((b << j) & 0x8000)  {
 8000aae:	697a      	ldr	r2, [r7, #20]
 8000ab0:	69bb      	ldr	r3, [r7, #24]
 8000ab2:	fa02 f303 	lsl.w	r3, r2, r3
 8000ab6:	f403 4300 	and.w	r3, r3, #32768	; 0x8000
 8000aba:	2b00      	cmp	r3, #0
 8000abc:	d012      	beq.n	8000ae4 <ssd1306_WriteChar+0xa4>
                ssd1306_DrawPixel(SSD1306.CurrentX + j, (SSD1306.CurrentY + i), (SSD1306_COLOR) color);
 8000abe:	4b23      	ldr	r3, [pc, #140]	; (8000b4c <ssd1306_WriteChar+0x10c>)
 8000ac0:	881b      	ldrh	r3, [r3, #0]
 8000ac2:	b2da      	uxtb	r2, r3
 8000ac4:	69bb      	ldr	r3, [r7, #24]
 8000ac6:	b2db      	uxtb	r3, r3
 8000ac8:	4413      	add	r3, r2
 8000aca:	b2d8      	uxtb	r0, r3
 8000acc:	4b1f      	ldr	r3, [pc, #124]	; (8000b4c <ssd1306_WriteChar+0x10c>)
 8000ace:	885b      	ldrh	r3, [r3, #2]
 8000ad0:	b2da      	uxtb	r2, r3
 8000ad2:	69fb      	ldr	r3, [r7, #28]
 8000ad4:	b2db      	uxtb	r3, r3
 8000ad6:	4413      	add	r3, r2
 8000ad8:	b2db      	uxtb	r3, r3
 8000ada:	7bba      	ldrb	r2, [r7, #14]
 8000adc:	4619      	mov	r1, r3
 8000ade:	f7ff ff4f 	bl	8000980 <ssd1306_DrawPixel>
 8000ae2:	e016      	b.n	8000b12 <ssd1306_WriteChar+0xd2>
            } else {
                ssd1306_DrawPixel(SSD1306.CurrentX + j, (SSD1306.CurrentY + i), (SSD1306_COLOR)!color);
 8000ae4:	4b19      	ldr	r3, [pc, #100]	; (8000b4c <ssd1306_WriteChar+0x10c>)
 8000ae6:	881b      	ldrh	r3, [r3, #0]
 8000ae8:	b2da      	uxtb	r2, r3
 8000aea:	69bb      	ldr	r3, [r7, #24]
 8000aec:	b2db      	uxtb	r3, r3
 8000aee:	4413      	add	r3, r2
 8000af0:	b2d8      	uxtb	r0, r3
 8000af2:	4b16      	ldr	r3, [pc, #88]	; (8000b4c <ssd1306_WriteChar+0x10c>)
 8000af4:	885b      	ldrh	r3, [r3, #2]
 8000af6:	b2da      	uxtb	r2, r3
 8000af8:	69fb      	ldr	r3, [r7, #28]
 8000afa:	b2db      	uxtb	r3, r3
 8000afc:	4413      	add	r3, r2
 8000afe:	b2d9      	uxtb	r1, r3
 8000b00:	7bbb      	ldrb	r3, [r7, #14]
 8000b02:	2b00      	cmp	r3, #0
 8000b04:	bf0c      	ite	eq
 8000b06:	2301      	moveq	r3, #1
 8000b08:	2300      	movne	r3, #0
 8000b0a:	b2db      	uxtb	r3, r3
 8000b0c:	461a      	mov	r2, r3
 8000b0e:	f7ff ff37 	bl	8000980 <ssd1306_DrawPixel>
        for(j = 0; j < Font.FontWidth; j++) {
 8000b12:	69bb      	ldr	r3, [r7, #24]
 8000b14:	3301      	adds	r3, #1
 8000b16:	61bb      	str	r3, [r7, #24]
 8000b18:	793b      	ldrb	r3, [r7, #4]
 8000b1a:	461a      	mov	r2, r3
 8000b1c:	69bb      	ldr	r3, [r7, #24]
 8000b1e:	4293      	cmp	r3, r2
 8000b20:	d3c5      	bcc.n	8000aae <ssd1306_WriteChar+0x6e>
    for(i = 0; i < Font.FontHeight; i++) {
 8000b22:	69fb      	ldr	r3, [r7, #28]
 8000b24:	3301      	adds	r3, #1
 8000b26:	61fb      	str	r3, [r7, #28]
 8000b28:	797b      	ldrb	r3, [r7, #5]
 8000b2a:	461a      	mov	r2, r3
 8000b2c:	69fb      	ldr	r3, [r7, #28]
 8000b2e:	4293      	cmp	r3, r2
 8000b30:	d3ad      	bcc.n	8000a8e <ssd1306_WriteChar+0x4e>
            }
        }
    }

    // The current space is now taken
    SSD1306.CurrentX += Font.FontWidth;
 8000b32:	4b06      	ldr	r3, [pc, #24]	; (8000b4c <ssd1306_WriteChar+0x10c>)
 8000b34:	881a      	ldrh	r2, [r3, #0]
 8000b36:	793b      	ldrb	r3, [r7, #4]
 8000b38:	b29b      	uxth	r3, r3
 8000b3a:	4413      	add	r3, r2
 8000b3c:	b29a      	uxth	r2, r3
 8000b3e:	4b03      	ldr	r3, [pc, #12]	; (8000b4c <ssd1306_WriteChar+0x10c>)
 8000b40:	801a      	strh	r2, [r3, #0]

    // Return written char for validation
    return ch;
 8000b42:	7bfb      	ldrb	r3, [r7, #15]
}
 8000b44:	4618      	mov	r0, r3
 8000b46:	3724      	adds	r7, #36	; 0x24
 8000b48:	46bd      	mov	sp, r7
 8000b4a:	bd90      	pop	{r4, r7, pc}
 8000b4c:	20000430 	.word	0x20000430

08000b50 <ssd1306_WriteString>:

// Write full string to screenbuffer
char ssd1306_WriteString(char* str, FontDef Font, SSD1306_COLOR color) {
 8000b50:	b580      	push	{r7, lr}
 8000b52:	b084      	sub	sp, #16
 8000b54:	af00      	add	r7, sp, #0
 8000b56:	60f8      	str	r0, [r7, #12]
 8000b58:	1d38      	adds	r0, r7, #4
 8000b5a:	e880 0006 	stmia.w	r0, {r1, r2}
 8000b5e:	70fb      	strb	r3, [r7, #3]
    // Write until null-byte
    while (*str) {
 8000b60:	e012      	b.n	8000b88 <ssd1306_WriteString+0x38>
        if (ssd1306_WriteChar(*str, Font, color) != *str) {
 8000b62:	68fb      	ldr	r3, [r7, #12]
 8000b64:	7818      	ldrb	r0, [r3, #0]
 8000b66:	78fb      	ldrb	r3, [r7, #3]
 8000b68:	1d3a      	adds	r2, r7, #4
 8000b6a:	ca06      	ldmia	r2, {r1, r2}
 8000b6c:	f7ff ff68 	bl	8000a40 <ssd1306_WriteChar>
 8000b70:	4603      	mov	r3, r0
 8000b72:	461a      	mov	r2, r3
 8000b74:	68fb      	ldr	r3, [r7, #12]
 8000b76:	781b      	ldrb	r3, [r3, #0]
 8000b78:	429a      	cmp	r2, r3
 8000b7a:	d002      	beq.n	8000b82 <ssd1306_WriteString+0x32>
            // Char could not be written
            return *str;
 8000b7c:	68fb      	ldr	r3, [r7, #12]
 8000b7e:	781b      	ldrb	r3, [r3, #0]
 8000b80:	e008      	b.n	8000b94 <ssd1306_WriteString+0x44>
        }

        // Next char
        str++;
 8000b82:	68fb      	ldr	r3, [r7, #12]
 8000b84:	3301      	adds	r3, #1
 8000b86:	60fb      	str	r3, [r7, #12]
    while (*str) {
 8000b88:	68fb      	ldr	r3, [r7, #12]
 8000b8a:	781b      	ldrb	r3, [r3, #0]
 8000b8c:	2b00      	cmp	r3, #0
 8000b8e:	d1e8      	bne.n	8000b62 <ssd1306_WriteString+0x12>
    }

    // Everything ok
    return *str;
 8000b90:	68fb      	ldr	r3, [r7, #12]
 8000b92:	781b      	ldrb	r3, [r3, #0]
}
 8000b94:	4618      	mov	r0, r3
 8000b96:	3710      	adds	r7, #16
 8000b98:	46bd      	mov	sp, r7
 8000b9a:	bd80      	pop	{r7, pc}

08000b9c <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 8000b9c:	b480      	push	{r7}
 8000b9e:	b083      	sub	sp, #12
 8000ba0:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 8000ba2:	4b0f      	ldr	r3, [pc, #60]	; (8000be0 <HAL_MspInit+0x44>)
 8000ba4:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8000ba6:	4a0e      	ldr	r2, [pc, #56]	; (8000be0 <HAL_MspInit+0x44>)
 8000ba8:	f043 0301 	orr.w	r3, r3, #1
 8000bac:	6613      	str	r3, [r2, #96]	; 0x60
 8000bae:	4b0c      	ldr	r3, [pc, #48]	; (8000be0 <HAL_MspInit+0x44>)
 8000bb0:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8000bb2:	f003 0301 	and.w	r3, r3, #1
 8000bb6:	607b      	str	r3, [r7, #4]
 8000bb8:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_PWR_CLK_ENABLE();
 8000bba:	4b09      	ldr	r3, [pc, #36]	; (8000be0 <HAL_MspInit+0x44>)
 8000bbc:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8000bbe:	4a08      	ldr	r2, [pc, #32]	; (8000be0 <HAL_MspInit+0x44>)
 8000bc0:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8000bc4:	6593      	str	r3, [r2, #88]	; 0x58
 8000bc6:	4b06      	ldr	r3, [pc, #24]	; (8000be0 <HAL_MspInit+0x44>)
 8000bc8:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8000bca:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8000bce:	603b      	str	r3, [r7, #0]
 8000bd0:	683b      	ldr	r3, [r7, #0]
  /* System interrupt init*/

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 8000bd2:	bf00      	nop
 8000bd4:	370c      	adds	r7, #12
 8000bd6:	46bd      	mov	sp, r7
 8000bd8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000bdc:	4770      	bx	lr
 8000bde:	bf00      	nop
 8000be0:	40021000 	.word	0x40021000

08000be4 <HAL_I2C_MspInit>:
* This function configures the hardware resources used in this example
* @param hi2c: I2C handle pointer
* @retval None
*/
void HAL_I2C_MspInit(I2C_HandleTypeDef* hi2c)
{
 8000be4:	b580      	push	{r7, lr}
 8000be6:	b08a      	sub	sp, #40	; 0x28
 8000be8:	af00      	add	r7, sp, #0
 8000bea:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8000bec:	f107 0314 	add.w	r3, r7, #20
 8000bf0:	2200      	movs	r2, #0
 8000bf2:	601a      	str	r2, [r3, #0]
 8000bf4:	605a      	str	r2, [r3, #4]
 8000bf6:	609a      	str	r2, [r3, #8]
 8000bf8:	60da      	str	r2, [r3, #12]
 8000bfa:	611a      	str	r2, [r3, #16]
  if(hi2c->Instance==I2C1)
 8000bfc:	687b      	ldr	r3, [r7, #4]
 8000bfe:	681b      	ldr	r3, [r3, #0]
 8000c00:	4a18      	ldr	r2, [pc, #96]	; (8000c64 <HAL_I2C_MspInit+0x80>)
 8000c02:	4293      	cmp	r3, r2
 8000c04:	d129      	bne.n	8000c5a <HAL_I2C_MspInit+0x76>
  {
  /* USER CODE BEGIN I2C1_MspInit 0 */

  /* USER CODE END I2C1_MspInit 0 */
  
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8000c06:	4b18      	ldr	r3, [pc, #96]	; (8000c68 <HAL_I2C_MspInit+0x84>)
 8000c08:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8000c0a:	4a17      	ldr	r2, [pc, #92]	; (8000c68 <HAL_I2C_MspInit+0x84>)
 8000c0c:	f043 0301 	orr.w	r3, r3, #1
 8000c10:	64d3      	str	r3, [r2, #76]	; 0x4c
 8000c12:	4b15      	ldr	r3, [pc, #84]	; (8000c68 <HAL_I2C_MspInit+0x84>)
 8000c14:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8000c16:	f003 0301 	and.w	r3, r3, #1
 8000c1a:	613b      	str	r3, [r7, #16]
 8000c1c:	693b      	ldr	r3, [r7, #16]
    /**I2C1 GPIO Configuration    
    PA9     ------> I2C1_SCL
    PA10     ------> I2C1_SDA 
    */
    GPIO_InitStruct.Pin = GPIO_PIN_9|GPIO_PIN_10;
 8000c1e:	f44f 63c0 	mov.w	r3, #1536	; 0x600
 8000c22:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8000c24:	2312      	movs	r3, #18
 8000c26:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_PULLUP;
 8000c28:	2301      	movs	r3, #1
 8000c2a:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8000c2c:	2303      	movs	r3, #3
 8000c2e:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C1;
 8000c30:	2304      	movs	r3, #4
 8000c32:	627b      	str	r3, [r7, #36]	; 0x24
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8000c34:	f107 0314 	add.w	r3, r7, #20
 8000c38:	4619      	mov	r1, r3
 8000c3a:	f04f 4090 	mov.w	r0, #1207959552	; 0x48000000
 8000c3e:	f000 fa6f 	bl	8001120 <HAL_GPIO_Init>

    /* Peripheral clock enable */
    __HAL_RCC_I2C1_CLK_ENABLE();
 8000c42:	4b09      	ldr	r3, [pc, #36]	; (8000c68 <HAL_I2C_MspInit+0x84>)
 8000c44:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8000c46:	4a08      	ldr	r2, [pc, #32]	; (8000c68 <HAL_I2C_MspInit+0x84>)
 8000c48:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 8000c4c:	6593      	str	r3, [r2, #88]	; 0x58
 8000c4e:	4b06      	ldr	r3, [pc, #24]	; (8000c68 <HAL_I2C_MspInit+0x84>)
 8000c50:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8000c52:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 8000c56:	60fb      	str	r3, [r7, #12]
 8000c58:	68fb      	ldr	r3, [r7, #12]
  /* USER CODE BEGIN I2C1_MspInit 1 */

  /* USER CODE END I2C1_MspInit 1 */
  }

}
 8000c5a:	bf00      	nop
 8000c5c:	3728      	adds	r7, #40	; 0x28
 8000c5e:	46bd      	mov	sp, r7
 8000c60:	bd80      	pop	{r7, pc}
 8000c62:	bf00      	nop
 8000c64:	40005400 	.word	0x40005400
 8000c68:	40021000 	.word	0x40021000

08000c6c <HAL_UART_MspInit>:
* This function configures the hardware resources used in this example
* @param huart: UART handle pointer
* @retval None
*/
void HAL_UART_MspInit(UART_HandleTypeDef* huart)
{
 8000c6c:	b580      	push	{r7, lr}
 8000c6e:	b08a      	sub	sp, #40	; 0x28
 8000c70:	af00      	add	r7, sp, #0
 8000c72:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8000c74:	f107 0314 	add.w	r3, r7, #20
 8000c78:	2200      	movs	r2, #0
 8000c7a:	601a      	str	r2, [r3, #0]
 8000c7c:	605a      	str	r2, [r3, #4]
 8000c7e:	609a      	str	r2, [r3, #8]
 8000c80:	60da      	str	r2, [r3, #12]
 8000c82:	611a      	str	r2, [r3, #16]
  if(huart->Instance==USART2)
 8000c84:	687b      	ldr	r3, [r7, #4]
 8000c86:	681b      	ldr	r3, [r3, #0]
 8000c88:	4a20      	ldr	r2, [pc, #128]	; (8000d0c <HAL_UART_MspInit+0xa0>)
 8000c8a:	4293      	cmp	r3, r2
 8000c8c:	d13a      	bne.n	8000d04 <HAL_UART_MspInit+0x98>
  {
  /* USER CODE BEGIN USART2_MspInit 0 */

  /* USER CODE END USART2_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_USART2_CLK_ENABLE();
 8000c8e:	4b20      	ldr	r3, [pc, #128]	; (8000d10 <HAL_UART_MspInit+0xa4>)
 8000c90:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8000c92:	4a1f      	ldr	r2, [pc, #124]	; (8000d10 <HAL_UART_MspInit+0xa4>)
 8000c94:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8000c98:	6593      	str	r3, [r2, #88]	; 0x58
 8000c9a:	4b1d      	ldr	r3, [pc, #116]	; (8000d10 <HAL_UART_MspInit+0xa4>)
 8000c9c:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8000c9e:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8000ca2:	613b      	str	r3, [r7, #16]
 8000ca4:	693b      	ldr	r3, [r7, #16]
  
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8000ca6:	4b1a      	ldr	r3, [pc, #104]	; (8000d10 <HAL_UART_MspInit+0xa4>)
 8000ca8:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8000caa:	4a19      	ldr	r2, [pc, #100]	; (8000d10 <HAL_UART_MspInit+0xa4>)
 8000cac:	f043 0301 	orr.w	r3, r3, #1
 8000cb0:	64d3      	str	r3, [r2, #76]	; 0x4c
 8000cb2:	4b17      	ldr	r3, [pc, #92]	; (8000d10 <HAL_UART_MspInit+0xa4>)
 8000cb4:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8000cb6:	f003 0301 	and.w	r3, r3, #1
 8000cba:	60fb      	str	r3, [r7, #12]
 8000cbc:	68fb      	ldr	r3, [r7, #12]
    /**USART2 GPIO Configuration    
    PA2     ------> USART2_TX
    PA15 (JTDI)     ------> USART2_RX 
    */
    GPIO_InitStruct.Pin = VCP_TX_Pin;
 8000cbe:	2304      	movs	r3, #4
 8000cc0:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000cc2:	2302      	movs	r3, #2
 8000cc4:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000cc6:	2300      	movs	r3, #0
 8000cc8:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8000cca:	2303      	movs	r3, #3
 8000ccc:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF7_USART2;
 8000cce:	2307      	movs	r3, #7
 8000cd0:	627b      	str	r3, [r7, #36]	; 0x24
    HAL_GPIO_Init(VCP_TX_GPIO_Port, &GPIO_InitStruct);
 8000cd2:	f107 0314 	add.w	r3, r7, #20
 8000cd6:	4619      	mov	r1, r3
 8000cd8:	f04f 4090 	mov.w	r0, #1207959552	; 0x48000000
 8000cdc:	f000 fa20 	bl	8001120 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = VCP_RX_Pin;
 8000ce0:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8000ce4:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000ce6:	2302      	movs	r3, #2
 8000ce8:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000cea:	2300      	movs	r3, #0
 8000cec:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8000cee:	2303      	movs	r3, #3
 8000cf0:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF3_USART2;
 8000cf2:	2303      	movs	r3, #3
 8000cf4:	627b      	str	r3, [r7, #36]	; 0x24
    HAL_GPIO_Init(VCP_RX_GPIO_Port, &GPIO_InitStruct);
 8000cf6:	f107 0314 	add.w	r3, r7, #20
 8000cfa:	4619      	mov	r1, r3
 8000cfc:	f04f 4090 	mov.w	r0, #1207959552	; 0x48000000
 8000d00:	f000 fa0e 	bl	8001120 <HAL_GPIO_Init>
  /* USER CODE BEGIN USART2_MspInit 1 */

  /* USER CODE END USART2_MspInit 1 */
  }

}
 8000d04:	bf00      	nop
 8000d06:	3728      	adds	r7, #40	; 0x28
 8000d08:	46bd      	mov	sp, r7
 8000d0a:	bd80      	pop	{r7, pc}
 8000d0c:	40004400 	.word	0x40004400
 8000d10:	40021000 	.word	0x40021000

08000d14 <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable interrupt.
  */
void NMI_Handler(void)
{
 8000d14:	b480      	push	{r7}
 8000d16:	af00      	add	r7, sp, #0

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */

  /* USER CODE END NonMaskableInt_IRQn 1 */
}
 8000d18:	bf00      	nop
 8000d1a:	46bd      	mov	sp, r7
 8000d1c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000d20:	4770      	bx	lr

08000d22 <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 8000d22:	b480      	push	{r7}
 8000d24:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 8000d26:	e7fe      	b.n	8000d26 <HardFault_Handler+0x4>

08000d28 <MemManage_Handler>:

/**
  * @brief This function handles Memory management fault.
  */
void MemManage_Handler(void)
{
 8000d28:	b480      	push	{r7}
 8000d2a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 8000d2c:	e7fe      	b.n	8000d2c <MemManage_Handler+0x4>

08000d2e <BusFault_Handler>:

/**
  * @brief This function handles Prefetch fault, memory access fault.
  */
void BusFault_Handler(void)
{
 8000d2e:	b480      	push	{r7}
 8000d30:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 8000d32:	e7fe      	b.n	8000d32 <BusFault_Handler+0x4>

08000d34 <UsageFault_Handler>:

/**
  * @brief This function handles Undefined instruction or illegal state.
  */
void UsageFault_Handler(void)
{
 8000d34:	b480      	push	{r7}
 8000d36:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 8000d38:	e7fe      	b.n	8000d38 <UsageFault_Handler+0x4>

08000d3a <SVC_Handler>:

/**
  * @brief This function handles System service call via SWI instruction.
  */
void SVC_Handler(void)
{
 8000d3a:	b480      	push	{r7}
 8000d3c:	af00      	add	r7, sp, #0

  /* USER CODE END SVCall_IRQn 0 */
  /* USER CODE BEGIN SVCall_IRQn 1 */

  /* USER CODE END SVCall_IRQn 1 */
}
 8000d3e:	bf00      	nop
 8000d40:	46bd      	mov	sp, r7
 8000d42:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000d46:	4770      	bx	lr

08000d48 <DebugMon_Handler>:

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
{
 8000d48:	b480      	push	{r7}
 8000d4a:	af00      	add	r7, sp, #0

  /* USER CODE END DebugMonitor_IRQn 0 */
  /* USER CODE BEGIN DebugMonitor_IRQn 1 */

  /* USER CODE END DebugMonitor_IRQn 1 */
}
 8000d4c:	bf00      	nop
 8000d4e:	46bd      	mov	sp, r7
 8000d50:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000d54:	4770      	bx	lr

08000d56 <PendSV_Handler>:

/**
  * @brief This function handles Pendable request for system service.
  */
void PendSV_Handler(void)
{
 8000d56:	b480      	push	{r7}
 8000d58:	af00      	add	r7, sp, #0

  /* USER CODE END PendSV_IRQn 0 */
  /* USER CODE BEGIN PendSV_IRQn 1 */

  /* USER CODE END PendSV_IRQn 1 */
}
 8000d5a:	bf00      	nop
 8000d5c:	46bd      	mov	sp, r7
 8000d5e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000d62:	4770      	bx	lr

08000d64 <SysTick_Handler>:

/**
  * @brief This function handles System tick timer.
  */
void SysTick_Handler(void)
{
 8000d64:	b580      	push	{r7, lr}
 8000d66:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN SysTick_IRQn 0 */

  /* USER CODE END SysTick_IRQn 0 */
  HAL_IncTick();
 8000d68:	f000 f8b4 	bl	8000ed4 <HAL_IncTick>
  /* USER CODE BEGIN SysTick_IRQn 1 */

  /* USER CODE END SysTick_IRQn 1 */
}
 8000d6c:	bf00      	nop
 8000d6e:	bd80      	pop	{r7, pc}

08000d70 <SystemInit>:
  * @param  None
  * @retval None
  */

void SystemInit(void)
{
 8000d70:	b480      	push	{r7}
 8000d72:	af00      	add	r7, sp, #0
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 8000d74:	4b17      	ldr	r3, [pc, #92]	; (8000dd4 <SystemInit+0x64>)
 8000d76:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8000d7a:	4a16      	ldr	r2, [pc, #88]	; (8000dd4 <SystemInit+0x64>)
 8000d7c:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 8000d80:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
  #endif

  /* Reset the RCC clock configuration to the default reset state ------------*/
  /* Set MSION bit */
  RCC->CR |= RCC_CR_MSION;
 8000d84:	4b14      	ldr	r3, [pc, #80]	; (8000dd8 <SystemInit+0x68>)
 8000d86:	681b      	ldr	r3, [r3, #0]
 8000d88:	4a13      	ldr	r2, [pc, #76]	; (8000dd8 <SystemInit+0x68>)
 8000d8a:	f043 0301 	orr.w	r3, r3, #1
 8000d8e:	6013      	str	r3, [r2, #0]

  /* Reset CFGR register */
  RCC->CFGR = 0x00000000U;
 8000d90:	4b11      	ldr	r3, [pc, #68]	; (8000dd8 <SystemInit+0x68>)
 8000d92:	2200      	movs	r2, #0
 8000d94:	609a      	str	r2, [r3, #8]

  /* Reset HSEON, CSSON , HSION, and PLLON bits */
  RCC->CR &= 0xEAF6FFFFU;
 8000d96:	4b10      	ldr	r3, [pc, #64]	; (8000dd8 <SystemInit+0x68>)
 8000d98:	681b      	ldr	r3, [r3, #0]
 8000d9a:	4a0f      	ldr	r2, [pc, #60]	; (8000dd8 <SystemInit+0x68>)
 8000d9c:	f023 53a8 	bic.w	r3, r3, #352321536	; 0x15000000
 8000da0:	f423 2310 	bic.w	r3, r3, #589824	; 0x90000
 8000da4:	6013      	str	r3, [r2, #0]

  /* Reset PLLCFGR register */
  RCC->PLLCFGR = 0x00001000U;
 8000da6:	4b0c      	ldr	r3, [pc, #48]	; (8000dd8 <SystemInit+0x68>)
 8000da8:	f44f 5280 	mov.w	r2, #4096	; 0x1000
 8000dac:	60da      	str	r2, [r3, #12]

  /* Reset HSEBYP bit */
  RCC->CR &= 0xFFFBFFFFU;
 8000dae:	4b0a      	ldr	r3, [pc, #40]	; (8000dd8 <SystemInit+0x68>)
 8000db0:	681b      	ldr	r3, [r3, #0]
 8000db2:	4a09      	ldr	r2, [pc, #36]	; (8000dd8 <SystemInit+0x68>)
 8000db4:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 8000db8:	6013      	str	r3, [r2, #0]

  /* Disable all interrupts */
  RCC->CIER = 0x00000000U;
 8000dba:	4b07      	ldr	r3, [pc, #28]	; (8000dd8 <SystemInit+0x68>)
 8000dbc:	2200      	movs	r2, #0
 8000dbe:	619a      	str	r2, [r3, #24]

  /* Configure the Vector Table location add offset address ------------------*/
#ifdef VECT_TAB_SRAM
  SCB->VTOR = SRAM_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#else
  SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
 8000dc0:	4b04      	ldr	r3, [pc, #16]	; (8000dd4 <SystemInit+0x64>)
 8000dc2:	f04f 6200 	mov.w	r2, #134217728	; 0x8000000
 8000dc6:	609a      	str	r2, [r3, #8]
#endif
}
 8000dc8:	bf00      	nop
 8000dca:	46bd      	mov	sp, r7
 8000dcc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000dd0:	4770      	bx	lr
 8000dd2:	bf00      	nop
 8000dd4:	e000ed00 	.word	0xe000ed00
 8000dd8:	40021000 	.word	0x40021000

08000ddc <Reset_Handler>:
 8000ddc:	f8df d034 	ldr.w	sp, [pc, #52]	; 8000e14 <LoopForever+0x2>
 8000de0:	2100      	movs	r1, #0
 8000de2:	e003      	b.n	8000dec <LoopCopyDataInit>

08000de4 <CopyDataInit>:
 8000de4:	4b0c      	ldr	r3, [pc, #48]	; (8000e18 <LoopForever+0x6>)
 8000de6:	585b      	ldr	r3, [r3, r1]
 8000de8:	5043      	str	r3, [r0, r1]
 8000dea:	3104      	adds	r1, #4

08000dec <LoopCopyDataInit>:
 8000dec:	480b      	ldr	r0, [pc, #44]	; (8000e1c <LoopForever+0xa>)
 8000dee:	4b0c      	ldr	r3, [pc, #48]	; (8000e20 <LoopForever+0xe>)
 8000df0:	1842      	adds	r2, r0, r1
 8000df2:	429a      	cmp	r2, r3
 8000df4:	d3f6      	bcc.n	8000de4 <CopyDataInit>
 8000df6:	4a0b      	ldr	r2, [pc, #44]	; (8000e24 <LoopForever+0x12>)
 8000df8:	e002      	b.n	8000e00 <LoopFillZerobss>

08000dfa <FillZerobss>:
 8000dfa:	2300      	movs	r3, #0
 8000dfc:	f842 3b04 	str.w	r3, [r2], #4

08000e00 <LoopFillZerobss>:
 8000e00:	4b09      	ldr	r3, [pc, #36]	; (8000e28 <LoopForever+0x16>)
 8000e02:	429a      	cmp	r2, r3
 8000e04:	d3f9      	bcc.n	8000dfa <FillZerobss>
 8000e06:	f7ff ffb3 	bl	8000d70 <SystemInit>
 8000e0a:	f002 fcaf 	bl	800376c <__libc_init_array>
 8000e0e:	f7ff fb5d 	bl	80004cc <main>

08000e12 <LoopForever>:
 8000e12:	e7fe      	b.n	8000e12 <LoopForever>
 8000e14:	20010000 	.word	0x20010000
 8000e18:	08004ba4 	.word	0x08004ba4
 8000e1c:	20000000 	.word	0x20000000
 8000e20:	20000014 	.word	0x20000014
 8000e24:	20000014 	.word	0x20000014
 8000e28:	20000538 	.word	0x20000538

08000e2c <ADC1_IRQHandler>:
 8000e2c:	e7fe      	b.n	8000e2c <ADC1_IRQHandler>

08000e2e <HAL_Init>:
  *         each 1ms in the SysTick_Handler() interrupt handler.
  *
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_Init(void)
{
 8000e2e:	b580      	push	{r7, lr}
 8000e30:	b082      	sub	sp, #8
 8000e32:	af00      	add	r7, sp, #0
  HAL_StatusTypeDef  status = HAL_OK;
 8000e34:	2300      	movs	r3, #0
 8000e36:	71fb      	strb	r3, [r7, #7]
#if (PREFETCH_ENABLE != 0)
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
#endif /* PREFETCH_ENABLE */

  /* Set Interrupt Group Priority */
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 8000e38:	2003      	movs	r0, #3
 8000e3a:	f000 f93d 	bl	80010b8 <HAL_NVIC_SetPriorityGrouping>

  /* Use SysTick as time base source and configure 1ms tick (default clock after Reset is MSI) */
  if (HAL_InitTick(TICK_INT_PRIORITY) != HAL_OK)
 8000e3e:	2000      	movs	r0, #0
 8000e40:	f000 f80e 	bl	8000e60 <HAL_InitTick>
 8000e44:	4603      	mov	r3, r0
 8000e46:	2b00      	cmp	r3, #0
 8000e48:	d002      	beq.n	8000e50 <HAL_Init+0x22>
  {
    status = HAL_ERROR;
 8000e4a:	2301      	movs	r3, #1
 8000e4c:	71fb      	strb	r3, [r7, #7]
 8000e4e:	e001      	b.n	8000e54 <HAL_Init+0x26>
  }
  else
  {
    /* Init the low level hardware */
    HAL_MspInit();
 8000e50:	f7ff fea4 	bl	8000b9c <HAL_MspInit>
  }

  /* Return function status */
  return status;
 8000e54:	79fb      	ldrb	r3, [r7, #7]
}
 8000e56:	4618      	mov	r0, r3
 8000e58:	3708      	adds	r7, #8
 8000e5a:	46bd      	mov	sp, r7
 8000e5c:	bd80      	pop	{r7, pc}
	...

08000e60 <HAL_InitTick>:
  *       implementation  in user file.
  * @param TickPriority  Tick interrupt priority.
  * @retval HAL status
  */
__weak HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
 8000e60:	b580      	push	{r7, lr}
 8000e62:	b084      	sub	sp, #16
 8000e64:	af00      	add	r7, sp, #0
 8000e66:	6078      	str	r0, [r7, #4]
  HAL_StatusTypeDef  status = HAL_OK;
 8000e68:	2300      	movs	r3, #0
 8000e6a:	73fb      	strb	r3, [r7, #15]

  if (uwTickFreq != 0U)
 8000e6c:	4b16      	ldr	r3, [pc, #88]	; (8000ec8 <HAL_InitTick+0x68>)
 8000e6e:	681b      	ldr	r3, [r3, #0]
 8000e70:	2b00      	cmp	r3, #0
 8000e72:	d022      	beq.n	8000eba <HAL_InitTick+0x5a>
  {
    /*Configure the SysTick to have interrupt in 1ms time basis*/
    if (HAL_SYSTICK_Config(SystemCoreClock / (1000U / uwTickFreq)) == 0U)
 8000e74:	4b15      	ldr	r3, [pc, #84]	; (8000ecc <HAL_InitTick+0x6c>)
 8000e76:	681a      	ldr	r2, [r3, #0]
 8000e78:	4b13      	ldr	r3, [pc, #76]	; (8000ec8 <HAL_InitTick+0x68>)
 8000e7a:	681b      	ldr	r3, [r3, #0]
 8000e7c:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
 8000e80:	fbb1 f3f3 	udiv	r3, r1, r3
 8000e84:	fbb2 f3f3 	udiv	r3, r2, r3
 8000e88:	4618      	mov	r0, r3
 8000e8a:	f000 f93c 	bl	8001106 <HAL_SYSTICK_Config>
 8000e8e:	4603      	mov	r3, r0
 8000e90:	2b00      	cmp	r3, #0
 8000e92:	d10f      	bne.n	8000eb4 <HAL_InitTick+0x54>
    {
      /* Configure the SysTick IRQ priority */
      if (TickPriority < (1UL << __NVIC_PRIO_BITS))
 8000e94:	687b      	ldr	r3, [r7, #4]
 8000e96:	2b0f      	cmp	r3, #15
 8000e98:	d809      	bhi.n	8000eae <HAL_InitTick+0x4e>
      {
        HAL_NVIC_SetPriority(SysTick_IRQn, TickPriority, 0U);
 8000e9a:	2200      	movs	r2, #0
 8000e9c:	6879      	ldr	r1, [r7, #4]
 8000e9e:	f04f 30ff 	mov.w	r0, #4294967295
 8000ea2:	f000 f914 	bl	80010ce <HAL_NVIC_SetPriority>
        uwTickPrio = TickPriority;
 8000ea6:	4a0a      	ldr	r2, [pc, #40]	; (8000ed0 <HAL_InitTick+0x70>)
 8000ea8:	687b      	ldr	r3, [r7, #4]
 8000eaa:	6013      	str	r3, [r2, #0]
 8000eac:	e007      	b.n	8000ebe <HAL_InitTick+0x5e>
      }
      else
      {
        status = HAL_ERROR;
 8000eae:	2301      	movs	r3, #1
 8000eb0:	73fb      	strb	r3, [r7, #15]
 8000eb2:	e004      	b.n	8000ebe <HAL_InitTick+0x5e>
      }
    }
    else
    {
      status = HAL_ERROR;
 8000eb4:	2301      	movs	r3, #1
 8000eb6:	73fb      	strb	r3, [r7, #15]
 8000eb8:	e001      	b.n	8000ebe <HAL_InitTick+0x5e>
    }
  }
  else
  {
    status = HAL_ERROR;
 8000eba:	2301      	movs	r3, #1
 8000ebc:	73fb      	strb	r3, [r7, #15]
  }

  /* Return function status */
  return status;
 8000ebe:	7bfb      	ldrb	r3, [r7, #15]
}
 8000ec0:	4618      	mov	r0, r3
 8000ec2:	3710      	adds	r7, #16
 8000ec4:	46bd      	mov	sp, r7
 8000ec6:	bd80      	pop	{r7, pc}
 8000ec8:	20000010 	.word	0x20000010
 8000ecc:	20000008 	.word	0x20000008
 8000ed0:	2000000c 	.word	0x2000000c

08000ed4 <HAL_IncTick>:
 * @note This function is declared as __weak to be overwritten in case of other
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
 8000ed4:	b480      	push	{r7}
 8000ed6:	af00      	add	r7, sp, #0
  uwTick += uwTickFreq;
 8000ed8:	4b05      	ldr	r3, [pc, #20]	; (8000ef0 <HAL_IncTick+0x1c>)
 8000eda:	681a      	ldr	r2, [r3, #0]
 8000edc:	4b05      	ldr	r3, [pc, #20]	; (8000ef4 <HAL_IncTick+0x20>)
 8000ede:	681b      	ldr	r3, [r3, #0]
 8000ee0:	4413      	add	r3, r2
 8000ee2:	4a03      	ldr	r2, [pc, #12]	; (8000ef0 <HAL_IncTick+0x1c>)
 8000ee4:	6013      	str	r3, [r2, #0]
}
 8000ee6:	bf00      	nop
 8000ee8:	46bd      	mov	sp, r7
 8000eea:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000eee:	4770      	bx	lr
 8000ef0:	20000534 	.word	0x20000534
 8000ef4:	20000010 	.word	0x20000010

08000ef8 <HAL_GetTick>:
  * @note This function is declared as __weak to be overwritten in case of other
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
 8000ef8:	b480      	push	{r7}
 8000efa:	af00      	add	r7, sp, #0
  return uwTick;
 8000efc:	4b03      	ldr	r3, [pc, #12]	; (8000f0c <HAL_GetTick+0x14>)
 8000efe:	681b      	ldr	r3, [r3, #0]
}
 8000f00:	4618      	mov	r0, r3
 8000f02:	46bd      	mov	sp, r7
 8000f04:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000f08:	4770      	bx	lr
 8000f0a:	bf00      	nop
 8000f0c:	20000534 	.word	0x20000534

08000f10 <HAL_Delay>:
  *       implementations in user file.
  * @param Delay  specifies the delay time length, in milliseconds.
  * @retval None
  */
__weak void HAL_Delay(uint32_t Delay)
{
 8000f10:	b580      	push	{r7, lr}
 8000f12:	b084      	sub	sp, #16
 8000f14:	af00      	add	r7, sp, #0
 8000f16:	6078      	str	r0, [r7, #4]
  uint32_t tickstart = HAL_GetTick();
 8000f18:	f7ff ffee 	bl	8000ef8 <HAL_GetTick>
 8000f1c:	60b8      	str	r0, [r7, #8]
  uint32_t wait = Delay;
 8000f1e:	687b      	ldr	r3, [r7, #4]
 8000f20:	60fb      	str	r3, [r7, #12]

  /* Add a period to guaranty minimum wait */
  if (wait < HAL_MAX_DELAY)
 8000f22:	68fb      	ldr	r3, [r7, #12]
 8000f24:	f1b3 3fff 	cmp.w	r3, #4294967295
 8000f28:	d004      	beq.n	8000f34 <HAL_Delay+0x24>
  {
    wait += (uint32_t)(uwTickFreq);
 8000f2a:	4b09      	ldr	r3, [pc, #36]	; (8000f50 <HAL_Delay+0x40>)
 8000f2c:	681b      	ldr	r3, [r3, #0]
 8000f2e:	68fa      	ldr	r2, [r7, #12]
 8000f30:	4413      	add	r3, r2
 8000f32:	60fb      	str	r3, [r7, #12]
  }

  while((HAL_GetTick() - tickstart) < wait)
 8000f34:	bf00      	nop
 8000f36:	f7ff ffdf 	bl	8000ef8 <HAL_GetTick>
 8000f3a:	4602      	mov	r2, r0
 8000f3c:	68bb      	ldr	r3, [r7, #8]
 8000f3e:	1ad3      	subs	r3, r2, r3
 8000f40:	68fa      	ldr	r2, [r7, #12]
 8000f42:	429a      	cmp	r2, r3
 8000f44:	d8f7      	bhi.n	8000f36 <HAL_Delay+0x26>
  {
  }
}
 8000f46:	bf00      	nop
 8000f48:	3710      	adds	r7, #16
 8000f4a:	46bd      	mov	sp, r7
 8000f4c:	bd80      	pop	{r7, pc}
 8000f4e:	bf00      	nop
 8000f50:	20000010 	.word	0x20000010

08000f54 <__NVIC_SetPriorityGrouping>:
           In case of a conflict between priority grouping and available
           priority bits (__NVIC_PRIO_BITS), the smallest possible priority group is set.
  \param [in]      PriorityGroup  Priority grouping field.
 */
__STATIC_INLINE void __NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
{
 8000f54:	b480      	push	{r7}
 8000f56:	b085      	sub	sp, #20
 8000f58:	af00      	add	r7, sp, #0
 8000f5a:	6078      	str	r0, [r7, #4]
  uint32_t reg_value;
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);             /* only values 0..7 are used          */
 8000f5c:	687b      	ldr	r3, [r7, #4]
 8000f5e:	f003 0307 	and.w	r3, r3, #7
 8000f62:	60fb      	str	r3, [r7, #12]

  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 8000f64:	4b0c      	ldr	r3, [pc, #48]	; (8000f98 <__NVIC_SetPriorityGrouping+0x44>)
 8000f66:	68db      	ldr	r3, [r3, #12]
 8000f68:	60bb      	str	r3, [r7, #8]
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 8000f6a:	68ba      	ldr	r2, [r7, #8]
 8000f6c:	f64f 03ff 	movw	r3, #63743	; 0xf8ff
 8000f70:	4013      	ands	r3, r2
 8000f72:	60bb      	str	r3, [r7, #8]
  reg_value  =  (reg_value                                   |
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 8000f74:	68fb      	ldr	r3, [r7, #12]
 8000f76:	021a      	lsls	r2, r3, #8
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
 8000f78:	68bb      	ldr	r3, [r7, #8]
 8000f7a:	4313      	orrs	r3, r2
  reg_value  =  (reg_value                                   |
 8000f7c:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 8000f80:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8000f84:	60bb      	str	r3, [r7, #8]
  SCB->AIRCR =  reg_value;
 8000f86:	4a04      	ldr	r2, [pc, #16]	; (8000f98 <__NVIC_SetPriorityGrouping+0x44>)
 8000f88:	68bb      	ldr	r3, [r7, #8]
 8000f8a:	60d3      	str	r3, [r2, #12]
}
 8000f8c:	bf00      	nop
 8000f8e:	3714      	adds	r7, #20
 8000f90:	46bd      	mov	sp, r7
 8000f92:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000f96:	4770      	bx	lr
 8000f98:	e000ed00 	.word	0xe000ed00

08000f9c <__NVIC_GetPriorityGrouping>:
  \brief   Get Priority Grouping
  \details Reads the priority grouping field from the NVIC Interrupt Controller.
  \return                Priority grouping field (SCB->AIRCR [10:8] PRIGROUP field).
 */
__STATIC_INLINE uint32_t __NVIC_GetPriorityGrouping(void)
{
 8000f9c:	b480      	push	{r7}
 8000f9e:	af00      	add	r7, sp, #0
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
 8000fa0:	4b04      	ldr	r3, [pc, #16]	; (8000fb4 <__NVIC_GetPriorityGrouping+0x18>)
 8000fa2:	68db      	ldr	r3, [r3, #12]
 8000fa4:	0a1b      	lsrs	r3, r3, #8
 8000fa6:	f003 0307 	and.w	r3, r3, #7
}
 8000faa:	4618      	mov	r0, r3
 8000fac:	46bd      	mov	sp, r7
 8000fae:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000fb2:	4770      	bx	lr
 8000fb4:	e000ed00 	.word	0xe000ed00

08000fb8 <__NVIC_SetPriority>:
  \param [in]      IRQn  Interrupt number.
  \param [in]  priority  Priority to set.
  \note    The priority cannot be set for every processor exception.
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
 8000fb8:	b480      	push	{r7}
 8000fba:	b083      	sub	sp, #12
 8000fbc:	af00      	add	r7, sp, #0
 8000fbe:	4603      	mov	r3, r0
 8000fc0:	6039      	str	r1, [r7, #0]
 8000fc2:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 8000fc4:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8000fc8:	2b00      	cmp	r3, #0
 8000fca:	db0a      	blt.n	8000fe2 <__NVIC_SetPriority+0x2a>
  {
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8000fcc:	683b      	ldr	r3, [r7, #0]
 8000fce:	b2da      	uxtb	r2, r3
 8000fd0:	490c      	ldr	r1, [pc, #48]	; (8001004 <__NVIC_SetPriority+0x4c>)
 8000fd2:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8000fd6:	0112      	lsls	r2, r2, #4
 8000fd8:	b2d2      	uxtb	r2, r2
 8000fda:	440b      	add	r3, r1
 8000fdc:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
  }
  else
  {
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
  }
}
 8000fe0:	e00a      	b.n	8000ff8 <__NVIC_SetPriority+0x40>
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8000fe2:	683b      	ldr	r3, [r7, #0]
 8000fe4:	b2da      	uxtb	r2, r3
 8000fe6:	4908      	ldr	r1, [pc, #32]	; (8001008 <__NVIC_SetPriority+0x50>)
 8000fe8:	79fb      	ldrb	r3, [r7, #7]
 8000fea:	f003 030f 	and.w	r3, r3, #15
 8000fee:	3b04      	subs	r3, #4
 8000ff0:	0112      	lsls	r2, r2, #4
 8000ff2:	b2d2      	uxtb	r2, r2
 8000ff4:	440b      	add	r3, r1
 8000ff6:	761a      	strb	r2, [r3, #24]
}
 8000ff8:	bf00      	nop
 8000ffa:	370c      	adds	r7, #12
 8000ffc:	46bd      	mov	sp, r7
 8000ffe:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001002:	4770      	bx	lr
 8001004:	e000e100 	.word	0xe000e100
 8001008:	e000ed00 	.word	0xe000ed00

0800100c <NVIC_EncodePriority>:
  \param [in]   PreemptPriority  Preemptive priority value (starting from 0).
  \param [in]       SubPriority  Subpriority value (starting from 0).
  \return                        Encoded priority. Value can be used in the function \ref NVIC_SetPriority().
 */
__STATIC_INLINE uint32_t NVIC_EncodePriority (uint32_t PriorityGroup, uint32_t PreemptPriority, uint32_t SubPriority)
{
 800100c:	b480      	push	{r7}
 800100e:	b089      	sub	sp, #36	; 0x24
 8001010:	af00      	add	r7, sp, #0
 8001012:	60f8      	str	r0, [r7, #12]
 8001014:	60b9      	str	r1, [r7, #8]
 8001016:	607a      	str	r2, [r7, #4]
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used          */
 8001018:	68fb      	ldr	r3, [r7, #12]
 800101a:	f003 0307 	and.w	r3, r3, #7
 800101e:	61fb      	str	r3, [r7, #28]
  uint32_t PreemptPriorityBits;
  uint32_t SubPriorityBits;

  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 8001020:	69fb      	ldr	r3, [r7, #28]
 8001022:	f1c3 0307 	rsb	r3, r3, #7
 8001026:	2b04      	cmp	r3, #4
 8001028:	bf28      	it	cs
 800102a:	2304      	movcs	r3, #4
 800102c:	61bb      	str	r3, [r7, #24]
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 800102e:	69fb      	ldr	r3, [r7, #28]
 8001030:	3304      	adds	r3, #4
 8001032:	2b06      	cmp	r3, #6
 8001034:	d902      	bls.n	800103c <NVIC_EncodePriority+0x30>
 8001036:	69fb      	ldr	r3, [r7, #28]
 8001038:	3b03      	subs	r3, #3
 800103a:	e000      	b.n	800103e <NVIC_EncodePriority+0x32>
 800103c:	2300      	movs	r3, #0
 800103e:	617b      	str	r3, [r7, #20]

  return (
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8001040:	f04f 32ff 	mov.w	r2, #4294967295
 8001044:	69bb      	ldr	r3, [r7, #24]
 8001046:	fa02 f303 	lsl.w	r3, r2, r3
 800104a:	43da      	mvns	r2, r3
 800104c:	68bb      	ldr	r3, [r7, #8]
 800104e:	401a      	ands	r2, r3
 8001050:	697b      	ldr	r3, [r7, #20]
 8001052:	409a      	lsls	r2, r3
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 8001054:	f04f 31ff 	mov.w	r1, #4294967295
 8001058:	697b      	ldr	r3, [r7, #20]
 800105a:	fa01 f303 	lsl.w	r3, r1, r3
 800105e:	43d9      	mvns	r1, r3
 8001060:	687b      	ldr	r3, [r7, #4]
 8001062:	400b      	ands	r3, r1
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8001064:	4313      	orrs	r3, r2
         );
}
 8001066:	4618      	mov	r0, r3
 8001068:	3724      	adds	r7, #36	; 0x24
 800106a:	46bd      	mov	sp, r7
 800106c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001070:	4770      	bx	lr
	...

08001074 <SysTick_Config>:
  \note    When the variable <b>__Vendor_SysTickConfig</b> is set to 1, then the
           function <b>SysTick_Config</b> is not included. In this case, the file <b><i>device</i>.h</b>
           must contain a vendor-specific implementation of this function.
 */
__STATIC_INLINE uint32_t SysTick_Config(uint32_t ticks)
{
 8001074:	b580      	push	{r7, lr}
 8001076:	b082      	sub	sp, #8
 8001078:	af00      	add	r7, sp, #0
 800107a:	6078      	str	r0, [r7, #4]
  if ((ticks - 1UL) > SysTick_LOAD_RELOAD_Msk)
 800107c:	687b      	ldr	r3, [r7, #4]
 800107e:	3b01      	subs	r3, #1
 8001080:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 8001084:	d301      	bcc.n	800108a <SysTick_Config+0x16>
  {
    return (1UL);                                                   /* Reload value impossible */
 8001086:	2301      	movs	r3, #1
 8001088:	e00f      	b.n	80010aa <SysTick_Config+0x36>
  }

  SysTick->LOAD  = (uint32_t)(ticks - 1UL);                         /* set reload register */
 800108a:	4a0a      	ldr	r2, [pc, #40]	; (80010b4 <SysTick_Config+0x40>)
 800108c:	687b      	ldr	r3, [r7, #4]
 800108e:	3b01      	subs	r3, #1
 8001090:	6053      	str	r3, [r2, #4]
  NVIC_SetPriority (SysTick_IRQn, (1UL << __NVIC_PRIO_BITS) - 1UL); /* set Priority for Systick Interrupt */
 8001092:	210f      	movs	r1, #15
 8001094:	f04f 30ff 	mov.w	r0, #4294967295
 8001098:	f7ff ff8e 	bl	8000fb8 <__NVIC_SetPriority>
  SysTick->VAL   = 0UL;                                             /* Load the SysTick Counter Value */
 800109c:	4b05      	ldr	r3, [pc, #20]	; (80010b4 <SysTick_Config+0x40>)
 800109e:	2200      	movs	r2, #0
 80010a0:	609a      	str	r2, [r3, #8]
  SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk |
 80010a2:	4b04      	ldr	r3, [pc, #16]	; (80010b4 <SysTick_Config+0x40>)
 80010a4:	2207      	movs	r2, #7
 80010a6:	601a      	str	r2, [r3, #0]
                   SysTick_CTRL_TICKINT_Msk   |
                   SysTick_CTRL_ENABLE_Msk;                         /* Enable SysTick IRQ and SysTick Timer */
  return (0UL);                                                     /* Function successful */
 80010a8:	2300      	movs	r3, #0
}
 80010aa:	4618      	mov	r0, r3
 80010ac:	3708      	adds	r7, #8
 80010ae:	46bd      	mov	sp, r7
 80010b0:	bd80      	pop	{r7, pc}
 80010b2:	bf00      	nop
 80010b4:	e000e010 	.word	0xe000e010

080010b8 <HAL_NVIC_SetPriorityGrouping>:
  * @note   When the NVIC_PriorityGroup_0 is selected, IRQ pre-emption is no more possible.
  *         The pending IRQ priority will be managed only by the subpriority.
  * @retval None
  */
void HAL_NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
{
 80010b8:	b580      	push	{r7, lr}
 80010ba:	b082      	sub	sp, #8
 80010bc:	af00      	add	r7, sp, #0
 80010be:	6078      	str	r0, [r7, #4]
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));

  /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
  NVIC_SetPriorityGrouping(PriorityGroup);
 80010c0:	6878      	ldr	r0, [r7, #4]
 80010c2:	f7ff ff47 	bl	8000f54 <__NVIC_SetPriorityGrouping>
}
 80010c6:	bf00      	nop
 80010c8:	3708      	adds	r7, #8
 80010ca:	46bd      	mov	sp, r7
 80010cc:	bd80      	pop	{r7, pc}

080010ce <HAL_NVIC_SetPriority>:
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{
 80010ce:	b580      	push	{r7, lr}
 80010d0:	b086      	sub	sp, #24
 80010d2:	af00      	add	r7, sp, #0
 80010d4:	4603      	mov	r3, r0
 80010d6:	60b9      	str	r1, [r7, #8]
 80010d8:	607a      	str	r2, [r7, #4]
 80010da:	73fb      	strb	r3, [r7, #15]
  uint32_t prioritygroup = 0x00;
 80010dc:	2300      	movs	r3, #0
 80010de:	617b      	str	r3, [r7, #20]

  /* Check the parameters */
  assert_param(IS_NVIC_SUB_PRIORITY(SubPriority));
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));

  prioritygroup = NVIC_GetPriorityGrouping();
 80010e0:	f7ff ff5c 	bl	8000f9c <__NVIC_GetPriorityGrouping>
 80010e4:	6178      	str	r0, [r7, #20]

  NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
 80010e6:	687a      	ldr	r2, [r7, #4]
 80010e8:	68b9      	ldr	r1, [r7, #8]
 80010ea:	6978      	ldr	r0, [r7, #20]
 80010ec:	f7ff ff8e 	bl	800100c <NVIC_EncodePriority>
 80010f0:	4602      	mov	r2, r0
 80010f2:	f997 300f 	ldrsb.w	r3, [r7, #15]
 80010f6:	4611      	mov	r1, r2
 80010f8:	4618      	mov	r0, r3
 80010fa:	f7ff ff5d 	bl	8000fb8 <__NVIC_SetPriority>
}
 80010fe:	bf00      	nop
 8001100:	3718      	adds	r7, #24
 8001102:	46bd      	mov	sp, r7
 8001104:	bd80      	pop	{r7, pc}

08001106 <HAL_SYSTICK_Config>:
  * @param  TicksNumb: Specifies the ticks Number of ticks between two interrupts.
  * @retval status:  - 0  Function succeeded.
  *                  - 1  Function failed.
  */
uint32_t HAL_SYSTICK_Config(uint32_t TicksNumb)
{
 8001106:	b580      	push	{r7, lr}
 8001108:	b082      	sub	sp, #8
 800110a:	af00      	add	r7, sp, #0
 800110c:	6078      	str	r0, [r7, #4]
   return SysTick_Config(TicksNumb);
 800110e:	6878      	ldr	r0, [r7, #4]
 8001110:	f7ff ffb0 	bl	8001074 <SysTick_Config>
 8001114:	4603      	mov	r3, r0
}
 8001116:	4618      	mov	r0, r3
 8001118:	3708      	adds	r7, #8
 800111a:	46bd      	mov	sp, r7
 800111c:	bd80      	pop	{r7, pc}
	...

08001120 <HAL_GPIO_Init>:
 8001120:	b480      	push	{r7}
 8001122:	b087      	sub	sp, #28
 8001124:	af00      	add	r7, sp, #0
 8001126:	6078      	str	r0, [r7, #4]
 8001128:	6039      	str	r1, [r7, #0]
 800112a:	2300      	movs	r3, #0
 800112c:	617b      	str	r3, [r7, #20]
 800112e:	e148      	b.n	80013c2 <HAL_GPIO_Init+0x2a2>
 8001130:	683b      	ldr	r3, [r7, #0]
 8001132:	681a      	ldr	r2, [r3, #0]
 8001134:	2101      	movs	r1, #1
 8001136:	697b      	ldr	r3, [r7, #20]
 8001138:	fa01 f303 	lsl.w	r3, r1, r3
 800113c:	4013      	ands	r3, r2
 800113e:	60fb      	str	r3, [r7, #12]
 8001140:	68fb      	ldr	r3, [r7, #12]
 8001142:	2b00      	cmp	r3, #0
 8001144:	f000 813a 	beq.w	80013bc <HAL_GPIO_Init+0x29c>
 8001148:	683b      	ldr	r3, [r7, #0]
 800114a:	685b      	ldr	r3, [r3, #4]
 800114c:	2b02      	cmp	r3, #2
 800114e:	d003      	beq.n	8001158 <HAL_GPIO_Init+0x38>
 8001150:	683b      	ldr	r3, [r7, #0]
 8001152:	685b      	ldr	r3, [r3, #4]
 8001154:	2b12      	cmp	r3, #18
 8001156:	d123      	bne.n	80011a0 <HAL_GPIO_Init+0x80>
 8001158:	697b      	ldr	r3, [r7, #20]
 800115a:	08da      	lsrs	r2, r3, #3
 800115c:	687b      	ldr	r3, [r7, #4]
 800115e:	3208      	adds	r2, #8
 8001160:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8001164:	613b      	str	r3, [r7, #16]
 8001166:	697b      	ldr	r3, [r7, #20]
 8001168:	f003 0307 	and.w	r3, r3, #7
 800116c:	009b      	lsls	r3, r3, #2
 800116e:	220f      	movs	r2, #15
 8001170:	fa02 f303 	lsl.w	r3, r2, r3
 8001174:	43db      	mvns	r3, r3
 8001176:	693a      	ldr	r2, [r7, #16]
 8001178:	4013      	ands	r3, r2
 800117a:	613b      	str	r3, [r7, #16]
 800117c:	683b      	ldr	r3, [r7, #0]
 800117e:	691a      	ldr	r2, [r3, #16]
 8001180:	697b      	ldr	r3, [r7, #20]
 8001182:	f003 0307 	and.w	r3, r3, #7
 8001186:	009b      	lsls	r3, r3, #2
 8001188:	fa02 f303 	lsl.w	r3, r2, r3
 800118c:	693a      	ldr	r2, [r7, #16]
 800118e:	4313      	orrs	r3, r2
 8001190:	613b      	str	r3, [r7, #16]
 8001192:	697b      	ldr	r3, [r7, #20]
 8001194:	08da      	lsrs	r2, r3, #3
 8001196:	687b      	ldr	r3, [r7, #4]
 8001198:	3208      	adds	r2, #8
 800119a:	6939      	ldr	r1, [r7, #16]
 800119c:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 80011a0:	687b      	ldr	r3, [r7, #4]
 80011a2:	681b      	ldr	r3, [r3, #0]
 80011a4:	613b      	str	r3, [r7, #16]
 80011a6:	697b      	ldr	r3, [r7, #20]
 80011a8:	005b      	lsls	r3, r3, #1
 80011aa:	2203      	movs	r2, #3
 80011ac:	fa02 f303 	lsl.w	r3, r2, r3
 80011b0:	43db      	mvns	r3, r3
 80011b2:	693a      	ldr	r2, [r7, #16]
 80011b4:	4013      	ands	r3, r2
 80011b6:	613b      	str	r3, [r7, #16]
 80011b8:	683b      	ldr	r3, [r7, #0]
 80011ba:	685b      	ldr	r3, [r3, #4]
 80011bc:	f003 0203 	and.w	r2, r3, #3
 80011c0:	697b      	ldr	r3, [r7, #20]
 80011c2:	005b      	lsls	r3, r3, #1
 80011c4:	fa02 f303 	lsl.w	r3, r2, r3
 80011c8:	693a      	ldr	r2, [r7, #16]
 80011ca:	4313      	orrs	r3, r2
 80011cc:	613b      	str	r3, [r7, #16]
 80011ce:	687b      	ldr	r3, [r7, #4]
 80011d0:	693a      	ldr	r2, [r7, #16]
 80011d2:	601a      	str	r2, [r3, #0]
 80011d4:	683b      	ldr	r3, [r7, #0]
 80011d6:	685b      	ldr	r3, [r3, #4]
 80011d8:	2b01      	cmp	r3, #1
 80011da:	d00b      	beq.n	80011f4 <HAL_GPIO_Init+0xd4>
 80011dc:	683b      	ldr	r3, [r7, #0]
 80011de:	685b      	ldr	r3, [r3, #4]
 80011e0:	2b02      	cmp	r3, #2
 80011e2:	d007      	beq.n	80011f4 <HAL_GPIO_Init+0xd4>
 80011e4:	683b      	ldr	r3, [r7, #0]
 80011e6:	685b      	ldr	r3, [r3, #4]
 80011e8:	2b11      	cmp	r3, #17
 80011ea:	d003      	beq.n	80011f4 <HAL_GPIO_Init+0xd4>
 80011ec:	683b      	ldr	r3, [r7, #0]
 80011ee:	685b      	ldr	r3, [r3, #4]
 80011f0:	2b12      	cmp	r3, #18
 80011f2:	d130      	bne.n	8001256 <HAL_GPIO_Init+0x136>
 80011f4:	687b      	ldr	r3, [r7, #4]
 80011f6:	689b      	ldr	r3, [r3, #8]
 80011f8:	613b      	str	r3, [r7, #16]
 80011fa:	697b      	ldr	r3, [r7, #20]
 80011fc:	005b      	lsls	r3, r3, #1
 80011fe:	2203      	movs	r2, #3
 8001200:	fa02 f303 	lsl.w	r3, r2, r3
 8001204:	43db      	mvns	r3, r3
 8001206:	693a      	ldr	r2, [r7, #16]
 8001208:	4013      	ands	r3, r2
 800120a:	613b      	str	r3, [r7, #16]
 800120c:	683b      	ldr	r3, [r7, #0]
 800120e:	68da      	ldr	r2, [r3, #12]
 8001210:	697b      	ldr	r3, [r7, #20]
 8001212:	005b      	lsls	r3, r3, #1
 8001214:	fa02 f303 	lsl.w	r3, r2, r3
 8001218:	693a      	ldr	r2, [r7, #16]
 800121a:	4313      	orrs	r3, r2
 800121c:	613b      	str	r3, [r7, #16]
 800121e:	687b      	ldr	r3, [r7, #4]
 8001220:	693a      	ldr	r2, [r7, #16]
 8001222:	609a      	str	r2, [r3, #8]
 8001224:	687b      	ldr	r3, [r7, #4]
 8001226:	685b      	ldr	r3, [r3, #4]
 8001228:	613b      	str	r3, [r7, #16]
 800122a:	2201      	movs	r2, #1
 800122c:	697b      	ldr	r3, [r7, #20]
 800122e:	fa02 f303 	lsl.w	r3, r2, r3
 8001232:	43db      	mvns	r3, r3
 8001234:	693a      	ldr	r2, [r7, #16]
 8001236:	4013      	ands	r3, r2
 8001238:	613b      	str	r3, [r7, #16]
 800123a:	683b      	ldr	r3, [r7, #0]
 800123c:	685b      	ldr	r3, [r3, #4]
 800123e:	091b      	lsrs	r3, r3, #4
 8001240:	f003 0201 	and.w	r2, r3, #1
 8001244:	697b      	ldr	r3, [r7, #20]
 8001246:	fa02 f303 	lsl.w	r3, r2, r3
 800124a:	693a      	ldr	r2, [r7, #16]
 800124c:	4313      	orrs	r3, r2
 800124e:	613b      	str	r3, [r7, #16]
 8001250:	687b      	ldr	r3, [r7, #4]
 8001252:	693a      	ldr	r2, [r7, #16]
 8001254:	605a      	str	r2, [r3, #4]
 8001256:	687b      	ldr	r3, [r7, #4]
 8001258:	68db      	ldr	r3, [r3, #12]
 800125a:	613b      	str	r3, [r7, #16]
 800125c:	697b      	ldr	r3, [r7, #20]
 800125e:	005b      	lsls	r3, r3, #1
 8001260:	2203      	movs	r2, #3
 8001262:	fa02 f303 	lsl.w	r3, r2, r3
 8001266:	43db      	mvns	r3, r3
 8001268:	693a      	ldr	r2, [r7, #16]
 800126a:	4013      	ands	r3, r2
 800126c:	613b      	str	r3, [r7, #16]
 800126e:	683b      	ldr	r3, [r7, #0]
 8001270:	689a      	ldr	r2, [r3, #8]
 8001272:	697b      	ldr	r3, [r7, #20]
 8001274:	005b      	lsls	r3, r3, #1
 8001276:	fa02 f303 	lsl.w	r3, r2, r3
 800127a:	693a      	ldr	r2, [r7, #16]
 800127c:	4313      	orrs	r3, r2
 800127e:	613b      	str	r3, [r7, #16]
 8001280:	687b      	ldr	r3, [r7, #4]
 8001282:	693a      	ldr	r2, [r7, #16]
 8001284:	60da      	str	r2, [r3, #12]
 8001286:	683b      	ldr	r3, [r7, #0]
 8001288:	685b      	ldr	r3, [r3, #4]
 800128a:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800128e:	2b00      	cmp	r3, #0
 8001290:	f000 8094 	beq.w	80013bc <HAL_GPIO_Init+0x29c>
 8001294:	4b52      	ldr	r3, [pc, #328]	; (80013e0 <HAL_GPIO_Init+0x2c0>)
 8001296:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8001298:	4a51      	ldr	r2, [pc, #324]	; (80013e0 <HAL_GPIO_Init+0x2c0>)
 800129a:	f043 0301 	orr.w	r3, r3, #1
 800129e:	6613      	str	r3, [r2, #96]	; 0x60
 80012a0:	4b4f      	ldr	r3, [pc, #316]	; (80013e0 <HAL_GPIO_Init+0x2c0>)
 80012a2:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 80012a4:	f003 0301 	and.w	r3, r3, #1
 80012a8:	60bb      	str	r3, [r7, #8]
 80012aa:	68bb      	ldr	r3, [r7, #8]
 80012ac:	4a4d      	ldr	r2, [pc, #308]	; (80013e4 <HAL_GPIO_Init+0x2c4>)
 80012ae:	697b      	ldr	r3, [r7, #20]
 80012b0:	089b      	lsrs	r3, r3, #2
 80012b2:	3302      	adds	r3, #2
 80012b4:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 80012b8:	613b      	str	r3, [r7, #16]
 80012ba:	697b      	ldr	r3, [r7, #20]
 80012bc:	f003 0303 	and.w	r3, r3, #3
 80012c0:	009b      	lsls	r3, r3, #2
 80012c2:	220f      	movs	r2, #15
 80012c4:	fa02 f303 	lsl.w	r3, r2, r3
 80012c8:	43db      	mvns	r3, r3
 80012ca:	693a      	ldr	r2, [r7, #16]
 80012cc:	4013      	ands	r3, r2
 80012ce:	613b      	str	r3, [r7, #16]
 80012d0:	687b      	ldr	r3, [r7, #4]
 80012d2:	f1b3 4f90 	cmp.w	r3, #1207959552	; 0x48000000
 80012d6:	d00d      	beq.n	80012f4 <HAL_GPIO_Init+0x1d4>
 80012d8:	687b      	ldr	r3, [r7, #4]
 80012da:	4a43      	ldr	r2, [pc, #268]	; (80013e8 <HAL_GPIO_Init+0x2c8>)
 80012dc:	4293      	cmp	r3, r2
 80012de:	d007      	beq.n	80012f0 <HAL_GPIO_Init+0x1d0>
 80012e0:	687b      	ldr	r3, [r7, #4]
 80012e2:	4a42      	ldr	r2, [pc, #264]	; (80013ec <HAL_GPIO_Init+0x2cc>)
 80012e4:	4293      	cmp	r3, r2
 80012e6:	d101      	bne.n	80012ec <HAL_GPIO_Init+0x1cc>
 80012e8:	2302      	movs	r3, #2
 80012ea:	e004      	b.n	80012f6 <HAL_GPIO_Init+0x1d6>
 80012ec:	2307      	movs	r3, #7
 80012ee:	e002      	b.n	80012f6 <HAL_GPIO_Init+0x1d6>
 80012f0:	2301      	movs	r3, #1
 80012f2:	e000      	b.n	80012f6 <HAL_GPIO_Init+0x1d6>
 80012f4:	2300      	movs	r3, #0
 80012f6:	697a      	ldr	r2, [r7, #20]
 80012f8:	f002 0203 	and.w	r2, r2, #3
 80012fc:	0092      	lsls	r2, r2, #2
 80012fe:	4093      	lsls	r3, r2
 8001300:	693a      	ldr	r2, [r7, #16]
 8001302:	4313      	orrs	r3, r2
 8001304:	613b      	str	r3, [r7, #16]
 8001306:	4937      	ldr	r1, [pc, #220]	; (80013e4 <HAL_GPIO_Init+0x2c4>)
 8001308:	697b      	ldr	r3, [r7, #20]
 800130a:	089b      	lsrs	r3, r3, #2
 800130c:	3302      	adds	r3, #2
 800130e:	693a      	ldr	r2, [r7, #16]
 8001310:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8001314:	4b36      	ldr	r3, [pc, #216]	; (80013f0 <HAL_GPIO_Init+0x2d0>)
 8001316:	681b      	ldr	r3, [r3, #0]
 8001318:	613b      	str	r3, [r7, #16]
 800131a:	68fb      	ldr	r3, [r7, #12]
 800131c:	43db      	mvns	r3, r3
 800131e:	693a      	ldr	r2, [r7, #16]
 8001320:	4013      	ands	r3, r2
 8001322:	613b      	str	r3, [r7, #16]
 8001324:	683b      	ldr	r3, [r7, #0]
 8001326:	685b      	ldr	r3, [r3, #4]
 8001328:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 800132c:	2b00      	cmp	r3, #0
 800132e:	d003      	beq.n	8001338 <HAL_GPIO_Init+0x218>
 8001330:	693a      	ldr	r2, [r7, #16]
 8001332:	68fb      	ldr	r3, [r7, #12]
 8001334:	4313      	orrs	r3, r2
 8001336:	613b      	str	r3, [r7, #16]
 8001338:	4a2d      	ldr	r2, [pc, #180]	; (80013f0 <HAL_GPIO_Init+0x2d0>)
 800133a:	693b      	ldr	r3, [r7, #16]
 800133c:	6013      	str	r3, [r2, #0]
 800133e:	4b2c      	ldr	r3, [pc, #176]	; (80013f0 <HAL_GPIO_Init+0x2d0>)
 8001340:	685b      	ldr	r3, [r3, #4]
 8001342:	613b      	str	r3, [r7, #16]
 8001344:	68fb      	ldr	r3, [r7, #12]
 8001346:	43db      	mvns	r3, r3
 8001348:	693a      	ldr	r2, [r7, #16]
 800134a:	4013      	ands	r3, r2
 800134c:	613b      	str	r3, [r7, #16]
 800134e:	683b      	ldr	r3, [r7, #0]
 8001350:	685b      	ldr	r3, [r3, #4]
 8001352:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8001356:	2b00      	cmp	r3, #0
 8001358:	d003      	beq.n	8001362 <HAL_GPIO_Init+0x242>
 800135a:	693a      	ldr	r2, [r7, #16]
 800135c:	68fb      	ldr	r3, [r7, #12]
 800135e:	4313      	orrs	r3, r2
 8001360:	613b      	str	r3, [r7, #16]
 8001362:	4a23      	ldr	r2, [pc, #140]	; (80013f0 <HAL_GPIO_Init+0x2d0>)
 8001364:	693b      	ldr	r3, [r7, #16]
 8001366:	6053      	str	r3, [r2, #4]
 8001368:	4b21      	ldr	r3, [pc, #132]	; (80013f0 <HAL_GPIO_Init+0x2d0>)
 800136a:	689b      	ldr	r3, [r3, #8]
 800136c:	613b      	str	r3, [r7, #16]
 800136e:	68fb      	ldr	r3, [r7, #12]
 8001370:	43db      	mvns	r3, r3
 8001372:	693a      	ldr	r2, [r7, #16]
 8001374:	4013      	ands	r3, r2
 8001376:	613b      	str	r3, [r7, #16]
 8001378:	683b      	ldr	r3, [r7, #0]
 800137a:	685b      	ldr	r3, [r3, #4]
 800137c:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 8001380:	2b00      	cmp	r3, #0
 8001382:	d003      	beq.n	800138c <HAL_GPIO_Init+0x26c>
 8001384:	693a      	ldr	r2, [r7, #16]
 8001386:	68fb      	ldr	r3, [r7, #12]
 8001388:	4313      	orrs	r3, r2
 800138a:	613b      	str	r3, [r7, #16]
 800138c:	4a18      	ldr	r2, [pc, #96]	; (80013f0 <HAL_GPIO_Init+0x2d0>)
 800138e:	693b      	ldr	r3, [r7, #16]
 8001390:	6093      	str	r3, [r2, #8]
 8001392:	4b17      	ldr	r3, [pc, #92]	; (80013f0 <HAL_GPIO_Init+0x2d0>)
 8001394:	68db      	ldr	r3, [r3, #12]
 8001396:	613b      	str	r3, [r7, #16]
 8001398:	68fb      	ldr	r3, [r7, #12]
 800139a:	43db      	mvns	r3, r3
 800139c:	693a      	ldr	r2, [r7, #16]
 800139e:	4013      	ands	r3, r2
 80013a0:	613b      	str	r3, [r7, #16]
 80013a2:	683b      	ldr	r3, [r7, #0]
 80013a4:	685b      	ldr	r3, [r3, #4]
 80013a6:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 80013aa:	2b00      	cmp	r3, #0
 80013ac:	d003      	beq.n	80013b6 <HAL_GPIO_Init+0x296>
 80013ae:	693a      	ldr	r2, [r7, #16]
 80013b0:	68fb      	ldr	r3, [r7, #12]
 80013b2:	4313      	orrs	r3, r2
 80013b4:	613b      	str	r3, [r7, #16]
 80013b6:	4a0e      	ldr	r2, [pc, #56]	; (80013f0 <HAL_GPIO_Init+0x2d0>)
 80013b8:	693b      	ldr	r3, [r7, #16]
 80013ba:	60d3      	str	r3, [r2, #12]
 80013bc:	697b      	ldr	r3, [r7, #20]
 80013be:	3301      	adds	r3, #1
 80013c0:	617b      	str	r3, [r7, #20]
 80013c2:	683b      	ldr	r3, [r7, #0]
 80013c4:	681a      	ldr	r2, [r3, #0]
 80013c6:	697b      	ldr	r3, [r7, #20]
 80013c8:	fa22 f303 	lsr.w	r3, r2, r3
 80013cc:	2b00      	cmp	r3, #0
 80013ce:	f47f aeaf 	bne.w	8001130 <HAL_GPIO_Init+0x10>
 80013d2:	bf00      	nop
 80013d4:	371c      	adds	r7, #28
 80013d6:	46bd      	mov	sp, r7
 80013d8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80013dc:	4770      	bx	lr
 80013de:	bf00      	nop
 80013e0:	40021000 	.word	0x40021000
 80013e4:	40010000 	.word	0x40010000
 80013e8:	48000400 	.word	0x48000400
 80013ec:	48000800 	.word	0x48000800
 80013f0:	40010400 	.word	0x40010400

080013f4 <HAL_GPIO_WritePin>:
 80013f4:	b480      	push	{r7}
 80013f6:	b083      	sub	sp, #12
 80013f8:	af00      	add	r7, sp, #0
 80013fa:	6078      	str	r0, [r7, #4]
 80013fc:	460b      	mov	r3, r1
 80013fe:	807b      	strh	r3, [r7, #2]
 8001400:	4613      	mov	r3, r2
 8001402:	707b      	strb	r3, [r7, #1]
 8001404:	787b      	ldrb	r3, [r7, #1]
 8001406:	2b00      	cmp	r3, #0
 8001408:	d003      	beq.n	8001412 <HAL_GPIO_WritePin+0x1e>
 800140a:	887a      	ldrh	r2, [r7, #2]
 800140c:	687b      	ldr	r3, [r7, #4]
 800140e:	619a      	str	r2, [r3, #24]
 8001410:	e002      	b.n	8001418 <HAL_GPIO_WritePin+0x24>
 8001412:	887a      	ldrh	r2, [r7, #2]
 8001414:	687b      	ldr	r3, [r7, #4]
 8001416:	629a      	str	r2, [r3, #40]	; 0x28
 8001418:	bf00      	nop
 800141a:	370c      	adds	r7, #12
 800141c:	46bd      	mov	sp, r7
 800141e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001422:	4770      	bx	lr

08001424 <HAL_I2C_Init>:
 8001424:	b580      	push	{r7, lr}
 8001426:	b082      	sub	sp, #8
 8001428:	af00      	add	r7, sp, #0
 800142a:	6078      	str	r0, [r7, #4]
 800142c:	687b      	ldr	r3, [r7, #4]
 800142e:	2b00      	cmp	r3, #0
 8001430:	d101      	bne.n	8001436 <HAL_I2C_Init+0x12>
 8001432:	2301      	movs	r3, #1
 8001434:	e081      	b.n	800153a <HAL_I2C_Init+0x116>
 8001436:	687b      	ldr	r3, [r7, #4]
 8001438:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 800143c:	b2db      	uxtb	r3, r3
 800143e:	2b00      	cmp	r3, #0
 8001440:	d106      	bne.n	8001450 <HAL_I2C_Init+0x2c>
 8001442:	687b      	ldr	r3, [r7, #4]
 8001444:	2200      	movs	r2, #0
 8001446:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 800144a:	6878      	ldr	r0, [r7, #4]
 800144c:	f7ff fbca 	bl	8000be4 <HAL_I2C_MspInit>
 8001450:	687b      	ldr	r3, [r7, #4]
 8001452:	2224      	movs	r2, #36	; 0x24
 8001454:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8001458:	687b      	ldr	r3, [r7, #4]
 800145a:	681b      	ldr	r3, [r3, #0]
 800145c:	681a      	ldr	r2, [r3, #0]
 800145e:	687b      	ldr	r3, [r7, #4]
 8001460:	681b      	ldr	r3, [r3, #0]
 8001462:	f022 0201 	bic.w	r2, r2, #1
 8001466:	601a      	str	r2, [r3, #0]
 8001468:	687b      	ldr	r3, [r7, #4]
 800146a:	685a      	ldr	r2, [r3, #4]
 800146c:	687b      	ldr	r3, [r7, #4]
 800146e:	681b      	ldr	r3, [r3, #0]
 8001470:	f022 6270 	bic.w	r2, r2, #251658240	; 0xf000000
 8001474:	611a      	str	r2, [r3, #16]
 8001476:	687b      	ldr	r3, [r7, #4]
 8001478:	681b      	ldr	r3, [r3, #0]
 800147a:	689a      	ldr	r2, [r3, #8]
 800147c:	687b      	ldr	r3, [r7, #4]
 800147e:	681b      	ldr	r3, [r3, #0]
 8001480:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
 8001484:	609a      	str	r2, [r3, #8]
 8001486:	687b      	ldr	r3, [r7, #4]
 8001488:	68db      	ldr	r3, [r3, #12]
 800148a:	2b01      	cmp	r3, #1
 800148c:	d107      	bne.n	800149e <HAL_I2C_Init+0x7a>
 800148e:	687b      	ldr	r3, [r7, #4]
 8001490:	689a      	ldr	r2, [r3, #8]
 8001492:	687b      	ldr	r3, [r7, #4]
 8001494:	681b      	ldr	r3, [r3, #0]
 8001496:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 800149a:	609a      	str	r2, [r3, #8]
 800149c:	e006      	b.n	80014ac <HAL_I2C_Init+0x88>
 800149e:	687b      	ldr	r3, [r7, #4]
 80014a0:	689a      	ldr	r2, [r3, #8]
 80014a2:	687b      	ldr	r3, [r7, #4]
 80014a4:	681b      	ldr	r3, [r3, #0]
 80014a6:	f442 4204 	orr.w	r2, r2, #33792	; 0x8400
 80014aa:	609a      	str	r2, [r3, #8]
 80014ac:	687b      	ldr	r3, [r7, #4]
 80014ae:	68db      	ldr	r3, [r3, #12]
 80014b0:	2b02      	cmp	r3, #2
 80014b2:	d104      	bne.n	80014be <HAL_I2C_Init+0x9a>
 80014b4:	687b      	ldr	r3, [r7, #4]
 80014b6:	681b      	ldr	r3, [r3, #0]
 80014b8:	f44f 6200 	mov.w	r2, #2048	; 0x800
 80014bc:	605a      	str	r2, [r3, #4]
 80014be:	687b      	ldr	r3, [r7, #4]
 80014c0:	681b      	ldr	r3, [r3, #0]
 80014c2:	685b      	ldr	r3, [r3, #4]
 80014c4:	687a      	ldr	r2, [r7, #4]
 80014c6:	6812      	ldr	r2, [r2, #0]
 80014c8:	f043 7300 	orr.w	r3, r3, #33554432	; 0x2000000
 80014cc:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 80014d0:	6053      	str	r3, [r2, #4]
 80014d2:	687b      	ldr	r3, [r7, #4]
 80014d4:	681b      	ldr	r3, [r3, #0]
 80014d6:	68da      	ldr	r2, [r3, #12]
 80014d8:	687b      	ldr	r3, [r7, #4]
 80014da:	681b      	ldr	r3, [r3, #0]
 80014dc:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
 80014e0:	60da      	str	r2, [r3, #12]
 80014e2:	687b      	ldr	r3, [r7, #4]
 80014e4:	691a      	ldr	r2, [r3, #16]
 80014e6:	687b      	ldr	r3, [r7, #4]
 80014e8:	695b      	ldr	r3, [r3, #20]
 80014ea:	ea42 0103 	orr.w	r1, r2, r3
 80014ee:	687b      	ldr	r3, [r7, #4]
 80014f0:	699b      	ldr	r3, [r3, #24]
 80014f2:	021a      	lsls	r2, r3, #8
 80014f4:	687b      	ldr	r3, [r7, #4]
 80014f6:	681b      	ldr	r3, [r3, #0]
 80014f8:	430a      	orrs	r2, r1
 80014fa:	60da      	str	r2, [r3, #12]
 80014fc:	687b      	ldr	r3, [r7, #4]
 80014fe:	69d9      	ldr	r1, [r3, #28]
 8001500:	687b      	ldr	r3, [r7, #4]
 8001502:	6a1a      	ldr	r2, [r3, #32]
 8001504:	687b      	ldr	r3, [r7, #4]
 8001506:	681b      	ldr	r3, [r3, #0]
 8001508:	430a      	orrs	r2, r1
 800150a:	601a      	str	r2, [r3, #0]
 800150c:	687b      	ldr	r3, [r7, #4]
 800150e:	681b      	ldr	r3, [r3, #0]
 8001510:	681a      	ldr	r2, [r3, #0]
 8001512:	687b      	ldr	r3, [r7, #4]
 8001514:	681b      	ldr	r3, [r3, #0]
 8001516:	f042 0201 	orr.w	r2, r2, #1
 800151a:	601a      	str	r2, [r3, #0]
 800151c:	687b      	ldr	r3, [r7, #4]
 800151e:	2200      	movs	r2, #0
 8001520:	645a      	str	r2, [r3, #68]	; 0x44
 8001522:	687b      	ldr	r3, [r7, #4]
 8001524:	2220      	movs	r2, #32
 8001526:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 800152a:	687b      	ldr	r3, [r7, #4]
 800152c:	2200      	movs	r2, #0
 800152e:	631a      	str	r2, [r3, #48]	; 0x30
 8001530:	687b      	ldr	r3, [r7, #4]
 8001532:	2200      	movs	r2, #0
 8001534:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 8001538:	2300      	movs	r3, #0
 800153a:	4618      	mov	r0, r3
 800153c:	3708      	adds	r7, #8
 800153e:	46bd      	mov	sp, r7
 8001540:	bd80      	pop	{r7, pc}
	...

08001544 <HAL_I2C_Mem_Write>:
 8001544:	b580      	push	{r7, lr}
 8001546:	b088      	sub	sp, #32
 8001548:	af02      	add	r7, sp, #8
 800154a:	60f8      	str	r0, [r7, #12]
 800154c:	4608      	mov	r0, r1
 800154e:	4611      	mov	r1, r2
 8001550:	461a      	mov	r2, r3
 8001552:	4603      	mov	r3, r0
 8001554:	817b      	strh	r3, [r7, #10]
 8001556:	460b      	mov	r3, r1
 8001558:	813b      	strh	r3, [r7, #8]
 800155a:	4613      	mov	r3, r2
 800155c:	80fb      	strh	r3, [r7, #6]
 800155e:	68fb      	ldr	r3, [r7, #12]
 8001560:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 8001564:	b2db      	uxtb	r3, r3
 8001566:	2b20      	cmp	r3, #32
 8001568:	f040 80f9 	bne.w	800175e <HAL_I2C_Mem_Write+0x21a>
 800156c:	6a3b      	ldr	r3, [r7, #32]
 800156e:	2b00      	cmp	r3, #0
 8001570:	d002      	beq.n	8001578 <HAL_I2C_Mem_Write+0x34>
 8001572:	8cbb      	ldrh	r3, [r7, #36]	; 0x24
 8001574:	2b00      	cmp	r3, #0
 8001576:	d105      	bne.n	8001584 <HAL_I2C_Mem_Write+0x40>
 8001578:	68fb      	ldr	r3, [r7, #12]
 800157a:	f44f 7200 	mov.w	r2, #512	; 0x200
 800157e:	645a      	str	r2, [r3, #68]	; 0x44
 8001580:	2301      	movs	r3, #1
 8001582:	e0ed      	b.n	8001760 <HAL_I2C_Mem_Write+0x21c>
 8001584:	68fb      	ldr	r3, [r7, #12]
 8001586:	f893 3040 	ldrb.w	r3, [r3, #64]	; 0x40
 800158a:	2b01      	cmp	r3, #1
 800158c:	d101      	bne.n	8001592 <HAL_I2C_Mem_Write+0x4e>
 800158e:	2302      	movs	r3, #2
 8001590:	e0e6      	b.n	8001760 <HAL_I2C_Mem_Write+0x21c>
 8001592:	68fb      	ldr	r3, [r7, #12]
 8001594:	2201      	movs	r2, #1
 8001596:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 800159a:	f7ff fcad 	bl	8000ef8 <HAL_GetTick>
 800159e:	6178      	str	r0, [r7, #20]
 80015a0:	697b      	ldr	r3, [r7, #20]
 80015a2:	9300      	str	r3, [sp, #0]
 80015a4:	2319      	movs	r3, #25
 80015a6:	2201      	movs	r2, #1
 80015a8:	f44f 4100 	mov.w	r1, #32768	; 0x8000
 80015ac:	68f8      	ldr	r0, [r7, #12]
 80015ae:	f000 f955 	bl	800185c <I2C_WaitOnFlagUntilTimeout>
 80015b2:	4603      	mov	r3, r0
 80015b4:	2b00      	cmp	r3, #0
 80015b6:	d001      	beq.n	80015bc <HAL_I2C_Mem_Write+0x78>
 80015b8:	2301      	movs	r3, #1
 80015ba:	e0d1      	b.n	8001760 <HAL_I2C_Mem_Write+0x21c>
 80015bc:	68fb      	ldr	r3, [r7, #12]
 80015be:	2221      	movs	r2, #33	; 0x21
 80015c0:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 80015c4:	68fb      	ldr	r3, [r7, #12]
 80015c6:	2240      	movs	r2, #64	; 0x40
 80015c8:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 80015cc:	68fb      	ldr	r3, [r7, #12]
 80015ce:	2200      	movs	r2, #0
 80015d0:	645a      	str	r2, [r3, #68]	; 0x44
 80015d2:	68fb      	ldr	r3, [r7, #12]
 80015d4:	6a3a      	ldr	r2, [r7, #32]
 80015d6:	625a      	str	r2, [r3, #36]	; 0x24
 80015d8:	68fb      	ldr	r3, [r7, #12]
 80015da:	8cba      	ldrh	r2, [r7, #36]	; 0x24
 80015dc:	855a      	strh	r2, [r3, #42]	; 0x2a
 80015de:	68fb      	ldr	r3, [r7, #12]
 80015e0:	2200      	movs	r2, #0
 80015e2:	635a      	str	r2, [r3, #52]	; 0x34
 80015e4:	88f8      	ldrh	r0, [r7, #6]
 80015e6:	893a      	ldrh	r2, [r7, #8]
 80015e8:	8979      	ldrh	r1, [r7, #10]
 80015ea:	697b      	ldr	r3, [r7, #20]
 80015ec:	9301      	str	r3, [sp, #4]
 80015ee:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80015f0:	9300      	str	r3, [sp, #0]
 80015f2:	4603      	mov	r3, r0
 80015f4:	68f8      	ldr	r0, [r7, #12]
 80015f6:	f000 f8b9 	bl	800176c <I2C_RequestMemoryWrite>
 80015fa:	4603      	mov	r3, r0
 80015fc:	2b00      	cmp	r3, #0
 80015fe:	d005      	beq.n	800160c <HAL_I2C_Mem_Write+0xc8>
 8001600:	68fb      	ldr	r3, [r7, #12]
 8001602:	2200      	movs	r2, #0
 8001604:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 8001608:	2301      	movs	r3, #1
 800160a:	e0a9      	b.n	8001760 <HAL_I2C_Mem_Write+0x21c>
 800160c:	68fb      	ldr	r3, [r7, #12]
 800160e:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8001610:	b29b      	uxth	r3, r3
 8001612:	2bff      	cmp	r3, #255	; 0xff
 8001614:	d90e      	bls.n	8001634 <HAL_I2C_Mem_Write+0xf0>
 8001616:	68fb      	ldr	r3, [r7, #12]
 8001618:	22ff      	movs	r2, #255	; 0xff
 800161a:	851a      	strh	r2, [r3, #40]	; 0x28
 800161c:	68fb      	ldr	r3, [r7, #12]
 800161e:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8001620:	b2da      	uxtb	r2, r3
 8001622:	8979      	ldrh	r1, [r7, #10]
 8001624:	2300      	movs	r3, #0
 8001626:	9300      	str	r3, [sp, #0]
 8001628:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
 800162c:	68f8      	ldr	r0, [r7, #12]
 800162e:	f000 fa37 	bl	8001aa0 <I2C_TransferConfig>
 8001632:	e00f      	b.n	8001654 <HAL_I2C_Mem_Write+0x110>
 8001634:	68fb      	ldr	r3, [r7, #12]
 8001636:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8001638:	b29a      	uxth	r2, r3
 800163a:	68fb      	ldr	r3, [r7, #12]
 800163c:	851a      	strh	r2, [r3, #40]	; 0x28
 800163e:	68fb      	ldr	r3, [r7, #12]
 8001640:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8001642:	b2da      	uxtb	r2, r3
 8001644:	8979      	ldrh	r1, [r7, #10]
 8001646:	2300      	movs	r3, #0
 8001648:	9300      	str	r3, [sp, #0]
 800164a:	f04f 7300 	mov.w	r3, #33554432	; 0x2000000
 800164e:	68f8      	ldr	r0, [r7, #12]
 8001650:	f000 fa26 	bl	8001aa0 <I2C_TransferConfig>
 8001654:	697a      	ldr	r2, [r7, #20]
 8001656:	6ab9      	ldr	r1, [r7, #40]	; 0x28
 8001658:	68f8      	ldr	r0, [r7, #12]
 800165a:	f000 f93f 	bl	80018dc <I2C_WaitOnTXISFlagUntilTimeout>
 800165e:	4603      	mov	r3, r0
 8001660:	2b00      	cmp	r3, #0
 8001662:	d001      	beq.n	8001668 <HAL_I2C_Mem_Write+0x124>
 8001664:	2301      	movs	r3, #1
 8001666:	e07b      	b.n	8001760 <HAL_I2C_Mem_Write+0x21c>
 8001668:	68fb      	ldr	r3, [r7, #12]
 800166a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800166c:	781a      	ldrb	r2, [r3, #0]
 800166e:	68fb      	ldr	r3, [r7, #12]
 8001670:	681b      	ldr	r3, [r3, #0]
 8001672:	629a      	str	r2, [r3, #40]	; 0x28
 8001674:	68fb      	ldr	r3, [r7, #12]
 8001676:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8001678:	1c5a      	adds	r2, r3, #1
 800167a:	68fb      	ldr	r3, [r7, #12]
 800167c:	625a      	str	r2, [r3, #36]	; 0x24
 800167e:	68fb      	ldr	r3, [r7, #12]
 8001680:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8001682:	b29b      	uxth	r3, r3
 8001684:	3b01      	subs	r3, #1
 8001686:	b29a      	uxth	r2, r3
 8001688:	68fb      	ldr	r3, [r7, #12]
 800168a:	855a      	strh	r2, [r3, #42]	; 0x2a
 800168c:	68fb      	ldr	r3, [r7, #12]
 800168e:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8001690:	3b01      	subs	r3, #1
 8001692:	b29a      	uxth	r2, r3
 8001694:	68fb      	ldr	r3, [r7, #12]
 8001696:	851a      	strh	r2, [r3, #40]	; 0x28
 8001698:	68fb      	ldr	r3, [r7, #12]
 800169a:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 800169c:	b29b      	uxth	r3, r3
 800169e:	2b00      	cmp	r3, #0
 80016a0:	d034      	beq.n	800170c <HAL_I2C_Mem_Write+0x1c8>
 80016a2:	68fb      	ldr	r3, [r7, #12]
 80016a4:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 80016a6:	2b00      	cmp	r3, #0
 80016a8:	d130      	bne.n	800170c <HAL_I2C_Mem_Write+0x1c8>
 80016aa:	697b      	ldr	r3, [r7, #20]
 80016ac:	9300      	str	r3, [sp, #0]
 80016ae:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80016b0:	2200      	movs	r2, #0
 80016b2:	2180      	movs	r1, #128	; 0x80
 80016b4:	68f8      	ldr	r0, [r7, #12]
 80016b6:	f000 f8d1 	bl	800185c <I2C_WaitOnFlagUntilTimeout>
 80016ba:	4603      	mov	r3, r0
 80016bc:	2b00      	cmp	r3, #0
 80016be:	d001      	beq.n	80016c4 <HAL_I2C_Mem_Write+0x180>
 80016c0:	2301      	movs	r3, #1
 80016c2:	e04d      	b.n	8001760 <HAL_I2C_Mem_Write+0x21c>
 80016c4:	68fb      	ldr	r3, [r7, #12]
 80016c6:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 80016c8:	b29b      	uxth	r3, r3
 80016ca:	2bff      	cmp	r3, #255	; 0xff
 80016cc:	d90e      	bls.n	80016ec <HAL_I2C_Mem_Write+0x1a8>
 80016ce:	68fb      	ldr	r3, [r7, #12]
 80016d0:	22ff      	movs	r2, #255	; 0xff
 80016d2:	851a      	strh	r2, [r3, #40]	; 0x28
 80016d4:	68fb      	ldr	r3, [r7, #12]
 80016d6:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 80016d8:	b2da      	uxtb	r2, r3
 80016da:	8979      	ldrh	r1, [r7, #10]
 80016dc:	2300      	movs	r3, #0
 80016de:	9300      	str	r3, [sp, #0]
 80016e0:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
 80016e4:	68f8      	ldr	r0, [r7, #12]
 80016e6:	f000 f9db 	bl	8001aa0 <I2C_TransferConfig>
 80016ea:	e00f      	b.n	800170c <HAL_I2C_Mem_Write+0x1c8>
 80016ec:	68fb      	ldr	r3, [r7, #12]
 80016ee:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 80016f0:	b29a      	uxth	r2, r3
 80016f2:	68fb      	ldr	r3, [r7, #12]
 80016f4:	851a      	strh	r2, [r3, #40]	; 0x28
 80016f6:	68fb      	ldr	r3, [r7, #12]
 80016f8:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 80016fa:	b2da      	uxtb	r2, r3
 80016fc:	8979      	ldrh	r1, [r7, #10]
 80016fe:	2300      	movs	r3, #0
 8001700:	9300      	str	r3, [sp, #0]
 8001702:	f04f 7300 	mov.w	r3, #33554432	; 0x2000000
 8001706:	68f8      	ldr	r0, [r7, #12]
 8001708:	f000 f9ca 	bl	8001aa0 <I2C_TransferConfig>
 800170c:	68fb      	ldr	r3, [r7, #12]
 800170e:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8001710:	b29b      	uxth	r3, r3
 8001712:	2b00      	cmp	r3, #0
 8001714:	d19e      	bne.n	8001654 <HAL_I2C_Mem_Write+0x110>
 8001716:	697a      	ldr	r2, [r7, #20]
 8001718:	6ab9      	ldr	r1, [r7, #40]	; 0x28
 800171a:	68f8      	ldr	r0, [r7, #12]
 800171c:	f000 f91e 	bl	800195c <I2C_WaitOnSTOPFlagUntilTimeout>
 8001720:	4603      	mov	r3, r0
 8001722:	2b00      	cmp	r3, #0
 8001724:	d001      	beq.n	800172a <HAL_I2C_Mem_Write+0x1e6>
 8001726:	2301      	movs	r3, #1
 8001728:	e01a      	b.n	8001760 <HAL_I2C_Mem_Write+0x21c>
 800172a:	68fb      	ldr	r3, [r7, #12]
 800172c:	681b      	ldr	r3, [r3, #0]
 800172e:	2220      	movs	r2, #32
 8001730:	61da      	str	r2, [r3, #28]
 8001732:	68fb      	ldr	r3, [r7, #12]
 8001734:	681b      	ldr	r3, [r3, #0]
 8001736:	6859      	ldr	r1, [r3, #4]
 8001738:	68fb      	ldr	r3, [r7, #12]
 800173a:	681a      	ldr	r2, [r3, #0]
 800173c:	4b0a      	ldr	r3, [pc, #40]	; (8001768 <HAL_I2C_Mem_Write+0x224>)
 800173e:	400b      	ands	r3, r1
 8001740:	6053      	str	r3, [r2, #4]
 8001742:	68fb      	ldr	r3, [r7, #12]
 8001744:	2220      	movs	r2, #32
 8001746:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 800174a:	68fb      	ldr	r3, [r7, #12]
 800174c:	2200      	movs	r2, #0
 800174e:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 8001752:	68fb      	ldr	r3, [r7, #12]
 8001754:	2200      	movs	r2, #0
 8001756:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 800175a:	2300      	movs	r3, #0
 800175c:	e000      	b.n	8001760 <HAL_I2C_Mem_Write+0x21c>
 800175e:	2302      	movs	r3, #2
 8001760:	4618      	mov	r0, r3
 8001762:	3718      	adds	r7, #24
 8001764:	46bd      	mov	sp, r7
 8001766:	bd80      	pop	{r7, pc}
 8001768:	fe00e800 	.word	0xfe00e800

0800176c <I2C_RequestMemoryWrite>:
 800176c:	b580      	push	{r7, lr}
 800176e:	b086      	sub	sp, #24
 8001770:	af02      	add	r7, sp, #8
 8001772:	60f8      	str	r0, [r7, #12]
 8001774:	4608      	mov	r0, r1
 8001776:	4611      	mov	r1, r2
 8001778:	461a      	mov	r2, r3
 800177a:	4603      	mov	r3, r0
 800177c:	817b      	strh	r3, [r7, #10]
 800177e:	460b      	mov	r3, r1
 8001780:	813b      	strh	r3, [r7, #8]
 8001782:	4613      	mov	r3, r2
 8001784:	80fb      	strh	r3, [r7, #6]
 8001786:	88fb      	ldrh	r3, [r7, #6]
 8001788:	b2da      	uxtb	r2, r3
 800178a:	8979      	ldrh	r1, [r7, #10]
 800178c:	4b20      	ldr	r3, [pc, #128]	; (8001810 <I2C_RequestMemoryWrite+0xa4>)
 800178e:	9300      	str	r3, [sp, #0]
 8001790:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
 8001794:	68f8      	ldr	r0, [r7, #12]
 8001796:	f000 f983 	bl	8001aa0 <I2C_TransferConfig>
 800179a:	69fa      	ldr	r2, [r7, #28]
 800179c:	69b9      	ldr	r1, [r7, #24]
 800179e:	68f8      	ldr	r0, [r7, #12]
 80017a0:	f000 f89c 	bl	80018dc <I2C_WaitOnTXISFlagUntilTimeout>
 80017a4:	4603      	mov	r3, r0
 80017a6:	2b00      	cmp	r3, #0
 80017a8:	d001      	beq.n	80017ae <I2C_RequestMemoryWrite+0x42>
 80017aa:	2301      	movs	r3, #1
 80017ac:	e02c      	b.n	8001808 <I2C_RequestMemoryWrite+0x9c>
 80017ae:	88fb      	ldrh	r3, [r7, #6]
 80017b0:	2b01      	cmp	r3, #1
 80017b2:	d105      	bne.n	80017c0 <I2C_RequestMemoryWrite+0x54>
 80017b4:	893b      	ldrh	r3, [r7, #8]
 80017b6:	b2da      	uxtb	r2, r3
 80017b8:	68fb      	ldr	r3, [r7, #12]
 80017ba:	681b      	ldr	r3, [r3, #0]
 80017bc:	629a      	str	r2, [r3, #40]	; 0x28
 80017be:	e015      	b.n	80017ec <I2C_RequestMemoryWrite+0x80>
 80017c0:	893b      	ldrh	r3, [r7, #8]
 80017c2:	0a1b      	lsrs	r3, r3, #8
 80017c4:	b29b      	uxth	r3, r3
 80017c6:	b2da      	uxtb	r2, r3
 80017c8:	68fb      	ldr	r3, [r7, #12]
 80017ca:	681b      	ldr	r3, [r3, #0]
 80017cc:	629a      	str	r2, [r3, #40]	; 0x28
 80017ce:	69fa      	ldr	r2, [r7, #28]
 80017d0:	69b9      	ldr	r1, [r7, #24]
 80017d2:	68f8      	ldr	r0, [r7, #12]
 80017d4:	f000 f882 	bl	80018dc <I2C_WaitOnTXISFlagUntilTimeout>
 80017d8:	4603      	mov	r3, r0
 80017da:	2b00      	cmp	r3, #0
 80017dc:	d001      	beq.n	80017e2 <I2C_RequestMemoryWrite+0x76>
 80017de:	2301      	movs	r3, #1
 80017e0:	e012      	b.n	8001808 <I2C_RequestMemoryWrite+0x9c>
 80017e2:	893b      	ldrh	r3, [r7, #8]
 80017e4:	b2da      	uxtb	r2, r3
 80017e6:	68fb      	ldr	r3, [r7, #12]
 80017e8:	681b      	ldr	r3, [r3, #0]
 80017ea:	629a      	str	r2, [r3, #40]	; 0x28
 80017ec:	69fb      	ldr	r3, [r7, #28]
 80017ee:	9300      	str	r3, [sp, #0]
 80017f0:	69bb      	ldr	r3, [r7, #24]
 80017f2:	2200      	movs	r2, #0
 80017f4:	2180      	movs	r1, #128	; 0x80
 80017f6:	68f8      	ldr	r0, [r7, #12]
 80017f8:	f000 f830 	bl	800185c <I2C_WaitOnFlagUntilTimeout>
 80017fc:	4603      	mov	r3, r0
 80017fe:	2b00      	cmp	r3, #0
 8001800:	d001      	beq.n	8001806 <I2C_RequestMemoryWrite+0x9a>
 8001802:	2301      	movs	r3, #1
 8001804:	e000      	b.n	8001808 <I2C_RequestMemoryWrite+0x9c>
 8001806:	2300      	movs	r3, #0
 8001808:	4618      	mov	r0, r3
 800180a:	3710      	adds	r7, #16
 800180c:	46bd      	mov	sp, r7
 800180e:	bd80      	pop	{r7, pc}
 8001810:	80002000 	.word	0x80002000

08001814 <I2C_Flush_TXDR>:
 8001814:	b480      	push	{r7}
 8001816:	b083      	sub	sp, #12
 8001818:	af00      	add	r7, sp, #0
 800181a:	6078      	str	r0, [r7, #4]
 800181c:	687b      	ldr	r3, [r7, #4]
 800181e:	681b      	ldr	r3, [r3, #0]
 8001820:	699b      	ldr	r3, [r3, #24]
 8001822:	f003 0302 	and.w	r3, r3, #2
 8001826:	2b02      	cmp	r3, #2
 8001828:	d103      	bne.n	8001832 <I2C_Flush_TXDR+0x1e>
 800182a:	687b      	ldr	r3, [r7, #4]
 800182c:	681b      	ldr	r3, [r3, #0]
 800182e:	2200      	movs	r2, #0
 8001830:	629a      	str	r2, [r3, #40]	; 0x28
 8001832:	687b      	ldr	r3, [r7, #4]
 8001834:	681b      	ldr	r3, [r3, #0]
 8001836:	699b      	ldr	r3, [r3, #24]
 8001838:	f003 0301 	and.w	r3, r3, #1
 800183c:	2b01      	cmp	r3, #1
 800183e:	d007      	beq.n	8001850 <I2C_Flush_TXDR+0x3c>
 8001840:	687b      	ldr	r3, [r7, #4]
 8001842:	681b      	ldr	r3, [r3, #0]
 8001844:	699a      	ldr	r2, [r3, #24]
 8001846:	687b      	ldr	r3, [r7, #4]
 8001848:	681b      	ldr	r3, [r3, #0]
 800184a:	f042 0201 	orr.w	r2, r2, #1
 800184e:	619a      	str	r2, [r3, #24]
 8001850:	bf00      	nop
 8001852:	370c      	adds	r7, #12
 8001854:	46bd      	mov	sp, r7
 8001856:	f85d 7b04 	ldr.w	r7, [sp], #4
 800185a:	4770      	bx	lr

0800185c <I2C_WaitOnFlagUntilTimeout>:
 800185c:	b580      	push	{r7, lr}
 800185e:	b084      	sub	sp, #16
 8001860:	af00      	add	r7, sp, #0
 8001862:	60f8      	str	r0, [r7, #12]
 8001864:	60b9      	str	r1, [r7, #8]
 8001866:	603b      	str	r3, [r7, #0]
 8001868:	4613      	mov	r3, r2
 800186a:	71fb      	strb	r3, [r7, #7]
 800186c:	e022      	b.n	80018b4 <I2C_WaitOnFlagUntilTimeout+0x58>
 800186e:	683b      	ldr	r3, [r7, #0]
 8001870:	f1b3 3fff 	cmp.w	r3, #4294967295
 8001874:	d01e      	beq.n	80018b4 <I2C_WaitOnFlagUntilTimeout+0x58>
 8001876:	f7ff fb3f 	bl	8000ef8 <HAL_GetTick>
 800187a:	4602      	mov	r2, r0
 800187c:	69bb      	ldr	r3, [r7, #24]
 800187e:	1ad3      	subs	r3, r2, r3
 8001880:	683a      	ldr	r2, [r7, #0]
 8001882:	429a      	cmp	r2, r3
 8001884:	d302      	bcc.n	800188c <I2C_WaitOnFlagUntilTimeout+0x30>
 8001886:	683b      	ldr	r3, [r7, #0]
 8001888:	2b00      	cmp	r3, #0
 800188a:	d113      	bne.n	80018b4 <I2C_WaitOnFlagUntilTimeout+0x58>
 800188c:	68fb      	ldr	r3, [r7, #12]
 800188e:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8001890:	f043 0220 	orr.w	r2, r3, #32
 8001894:	68fb      	ldr	r3, [r7, #12]
 8001896:	645a      	str	r2, [r3, #68]	; 0x44
 8001898:	68fb      	ldr	r3, [r7, #12]
 800189a:	2220      	movs	r2, #32
 800189c:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 80018a0:	68fb      	ldr	r3, [r7, #12]
 80018a2:	2200      	movs	r2, #0
 80018a4:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 80018a8:	68fb      	ldr	r3, [r7, #12]
 80018aa:	2200      	movs	r2, #0
 80018ac:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 80018b0:	2301      	movs	r3, #1
 80018b2:	e00f      	b.n	80018d4 <I2C_WaitOnFlagUntilTimeout+0x78>
 80018b4:	68fb      	ldr	r3, [r7, #12]
 80018b6:	681b      	ldr	r3, [r3, #0]
 80018b8:	699a      	ldr	r2, [r3, #24]
 80018ba:	68bb      	ldr	r3, [r7, #8]
 80018bc:	4013      	ands	r3, r2
 80018be:	68ba      	ldr	r2, [r7, #8]
 80018c0:	429a      	cmp	r2, r3
 80018c2:	bf0c      	ite	eq
 80018c4:	2301      	moveq	r3, #1
 80018c6:	2300      	movne	r3, #0
 80018c8:	b2db      	uxtb	r3, r3
 80018ca:	461a      	mov	r2, r3
 80018cc:	79fb      	ldrb	r3, [r7, #7]
 80018ce:	429a      	cmp	r2, r3
 80018d0:	d0cd      	beq.n	800186e <I2C_WaitOnFlagUntilTimeout+0x12>
 80018d2:	2300      	movs	r3, #0
 80018d4:	4618      	mov	r0, r3
 80018d6:	3710      	adds	r7, #16
 80018d8:	46bd      	mov	sp, r7
 80018da:	bd80      	pop	{r7, pc}

080018dc <I2C_WaitOnTXISFlagUntilTimeout>:
 80018dc:	b580      	push	{r7, lr}
 80018de:	b084      	sub	sp, #16
 80018e0:	af00      	add	r7, sp, #0
 80018e2:	60f8      	str	r0, [r7, #12]
 80018e4:	60b9      	str	r1, [r7, #8]
 80018e6:	607a      	str	r2, [r7, #4]
 80018e8:	e02c      	b.n	8001944 <I2C_WaitOnTXISFlagUntilTimeout+0x68>
 80018ea:	687a      	ldr	r2, [r7, #4]
 80018ec:	68b9      	ldr	r1, [r7, #8]
 80018ee:	68f8      	ldr	r0, [r7, #12]
 80018f0:	f000 f870 	bl	80019d4 <I2C_IsAcknowledgeFailed>
 80018f4:	4603      	mov	r3, r0
 80018f6:	2b00      	cmp	r3, #0
 80018f8:	d001      	beq.n	80018fe <I2C_WaitOnTXISFlagUntilTimeout+0x22>
 80018fa:	2301      	movs	r3, #1
 80018fc:	e02a      	b.n	8001954 <I2C_WaitOnTXISFlagUntilTimeout+0x78>
 80018fe:	68bb      	ldr	r3, [r7, #8]
 8001900:	f1b3 3fff 	cmp.w	r3, #4294967295
 8001904:	d01e      	beq.n	8001944 <I2C_WaitOnTXISFlagUntilTimeout+0x68>
 8001906:	f7ff faf7 	bl	8000ef8 <HAL_GetTick>
 800190a:	4602      	mov	r2, r0
 800190c:	687b      	ldr	r3, [r7, #4]
 800190e:	1ad3      	subs	r3, r2, r3
 8001910:	68ba      	ldr	r2, [r7, #8]
 8001912:	429a      	cmp	r2, r3
 8001914:	d302      	bcc.n	800191c <I2C_WaitOnTXISFlagUntilTimeout+0x40>
 8001916:	68bb      	ldr	r3, [r7, #8]
 8001918:	2b00      	cmp	r3, #0
 800191a:	d113      	bne.n	8001944 <I2C_WaitOnTXISFlagUntilTimeout+0x68>
 800191c:	68fb      	ldr	r3, [r7, #12]
 800191e:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8001920:	f043 0220 	orr.w	r2, r3, #32
 8001924:	68fb      	ldr	r3, [r7, #12]
 8001926:	645a      	str	r2, [r3, #68]	; 0x44
 8001928:	68fb      	ldr	r3, [r7, #12]
 800192a:	2220      	movs	r2, #32
 800192c:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8001930:	68fb      	ldr	r3, [r7, #12]
 8001932:	2200      	movs	r2, #0
 8001934:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 8001938:	68fb      	ldr	r3, [r7, #12]
 800193a:	2200      	movs	r2, #0
 800193c:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 8001940:	2301      	movs	r3, #1
 8001942:	e007      	b.n	8001954 <I2C_WaitOnTXISFlagUntilTimeout+0x78>
 8001944:	68fb      	ldr	r3, [r7, #12]
 8001946:	681b      	ldr	r3, [r3, #0]
 8001948:	699b      	ldr	r3, [r3, #24]
 800194a:	f003 0302 	and.w	r3, r3, #2
 800194e:	2b02      	cmp	r3, #2
 8001950:	d1cb      	bne.n	80018ea <I2C_WaitOnTXISFlagUntilTimeout+0xe>
 8001952:	2300      	movs	r3, #0
 8001954:	4618      	mov	r0, r3
 8001956:	3710      	adds	r7, #16
 8001958:	46bd      	mov	sp, r7
 800195a:	bd80      	pop	{r7, pc}

0800195c <I2C_WaitOnSTOPFlagUntilTimeout>:
 800195c:	b580      	push	{r7, lr}
 800195e:	b084      	sub	sp, #16
 8001960:	af00      	add	r7, sp, #0
 8001962:	60f8      	str	r0, [r7, #12]
 8001964:	60b9      	str	r1, [r7, #8]
 8001966:	607a      	str	r2, [r7, #4]
 8001968:	e028      	b.n	80019bc <I2C_WaitOnSTOPFlagUntilTimeout+0x60>
 800196a:	687a      	ldr	r2, [r7, #4]
 800196c:	68b9      	ldr	r1, [r7, #8]
 800196e:	68f8      	ldr	r0, [r7, #12]
 8001970:	f000 f830 	bl	80019d4 <I2C_IsAcknowledgeFailed>
 8001974:	4603      	mov	r3, r0
 8001976:	2b00      	cmp	r3, #0
 8001978:	d001      	beq.n	800197e <I2C_WaitOnSTOPFlagUntilTimeout+0x22>
 800197a:	2301      	movs	r3, #1
 800197c:	e026      	b.n	80019cc <I2C_WaitOnSTOPFlagUntilTimeout+0x70>
 800197e:	f7ff fabb 	bl	8000ef8 <HAL_GetTick>
 8001982:	4602      	mov	r2, r0
 8001984:	687b      	ldr	r3, [r7, #4]
 8001986:	1ad3      	subs	r3, r2, r3
 8001988:	68ba      	ldr	r2, [r7, #8]
 800198a:	429a      	cmp	r2, r3
 800198c:	d302      	bcc.n	8001994 <I2C_WaitOnSTOPFlagUntilTimeout+0x38>
 800198e:	68bb      	ldr	r3, [r7, #8]
 8001990:	2b00      	cmp	r3, #0
 8001992:	d113      	bne.n	80019bc <I2C_WaitOnSTOPFlagUntilTimeout+0x60>
 8001994:	68fb      	ldr	r3, [r7, #12]
 8001996:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8001998:	f043 0220 	orr.w	r2, r3, #32
 800199c:	68fb      	ldr	r3, [r7, #12]
 800199e:	645a      	str	r2, [r3, #68]	; 0x44
 80019a0:	68fb      	ldr	r3, [r7, #12]
 80019a2:	2220      	movs	r2, #32
 80019a4:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 80019a8:	68fb      	ldr	r3, [r7, #12]
 80019aa:	2200      	movs	r2, #0
 80019ac:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 80019b0:	68fb      	ldr	r3, [r7, #12]
 80019b2:	2200      	movs	r2, #0
 80019b4:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 80019b8:	2301      	movs	r3, #1
 80019ba:	e007      	b.n	80019cc <I2C_WaitOnSTOPFlagUntilTimeout+0x70>
 80019bc:	68fb      	ldr	r3, [r7, #12]
 80019be:	681b      	ldr	r3, [r3, #0]
 80019c0:	699b      	ldr	r3, [r3, #24]
 80019c2:	f003 0320 	and.w	r3, r3, #32
 80019c6:	2b20      	cmp	r3, #32
 80019c8:	d1cf      	bne.n	800196a <I2C_WaitOnSTOPFlagUntilTimeout+0xe>
 80019ca:	2300      	movs	r3, #0
 80019cc:	4618      	mov	r0, r3
 80019ce:	3710      	adds	r7, #16
 80019d0:	46bd      	mov	sp, r7
 80019d2:	bd80      	pop	{r7, pc}

080019d4 <I2C_IsAcknowledgeFailed>:
 80019d4:	b580      	push	{r7, lr}
 80019d6:	b084      	sub	sp, #16
 80019d8:	af00      	add	r7, sp, #0
 80019da:	60f8      	str	r0, [r7, #12]
 80019dc:	60b9      	str	r1, [r7, #8]
 80019de:	607a      	str	r2, [r7, #4]
 80019e0:	68fb      	ldr	r3, [r7, #12]
 80019e2:	681b      	ldr	r3, [r3, #0]
 80019e4:	699b      	ldr	r3, [r3, #24]
 80019e6:	f003 0310 	and.w	r3, r3, #16
 80019ea:	2b10      	cmp	r3, #16
 80019ec:	d151      	bne.n	8001a92 <I2C_IsAcknowledgeFailed+0xbe>
 80019ee:	e022      	b.n	8001a36 <I2C_IsAcknowledgeFailed+0x62>
 80019f0:	68bb      	ldr	r3, [r7, #8]
 80019f2:	f1b3 3fff 	cmp.w	r3, #4294967295
 80019f6:	d01e      	beq.n	8001a36 <I2C_IsAcknowledgeFailed+0x62>
 80019f8:	f7ff fa7e 	bl	8000ef8 <HAL_GetTick>
 80019fc:	4602      	mov	r2, r0
 80019fe:	687b      	ldr	r3, [r7, #4]
 8001a00:	1ad3      	subs	r3, r2, r3
 8001a02:	68ba      	ldr	r2, [r7, #8]
 8001a04:	429a      	cmp	r2, r3
 8001a06:	d302      	bcc.n	8001a0e <I2C_IsAcknowledgeFailed+0x3a>
 8001a08:	68bb      	ldr	r3, [r7, #8]
 8001a0a:	2b00      	cmp	r3, #0
 8001a0c:	d113      	bne.n	8001a36 <I2C_IsAcknowledgeFailed+0x62>
 8001a0e:	68fb      	ldr	r3, [r7, #12]
 8001a10:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8001a12:	f043 0220 	orr.w	r2, r3, #32
 8001a16:	68fb      	ldr	r3, [r7, #12]
 8001a18:	645a      	str	r2, [r3, #68]	; 0x44
 8001a1a:	68fb      	ldr	r3, [r7, #12]
 8001a1c:	2220      	movs	r2, #32
 8001a1e:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8001a22:	68fb      	ldr	r3, [r7, #12]
 8001a24:	2200      	movs	r2, #0
 8001a26:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 8001a2a:	68fb      	ldr	r3, [r7, #12]
 8001a2c:	2200      	movs	r2, #0
 8001a2e:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 8001a32:	2301      	movs	r3, #1
 8001a34:	e02e      	b.n	8001a94 <I2C_IsAcknowledgeFailed+0xc0>
 8001a36:	68fb      	ldr	r3, [r7, #12]
 8001a38:	681b      	ldr	r3, [r3, #0]
 8001a3a:	699b      	ldr	r3, [r3, #24]
 8001a3c:	f003 0320 	and.w	r3, r3, #32
 8001a40:	2b20      	cmp	r3, #32
 8001a42:	d1d5      	bne.n	80019f0 <I2C_IsAcknowledgeFailed+0x1c>
 8001a44:	68fb      	ldr	r3, [r7, #12]
 8001a46:	681b      	ldr	r3, [r3, #0]
 8001a48:	2210      	movs	r2, #16
 8001a4a:	61da      	str	r2, [r3, #28]
 8001a4c:	68fb      	ldr	r3, [r7, #12]
 8001a4e:	681b      	ldr	r3, [r3, #0]
 8001a50:	2220      	movs	r2, #32
 8001a52:	61da      	str	r2, [r3, #28]
 8001a54:	68f8      	ldr	r0, [r7, #12]
 8001a56:	f7ff fedd 	bl	8001814 <I2C_Flush_TXDR>
 8001a5a:	68fb      	ldr	r3, [r7, #12]
 8001a5c:	681b      	ldr	r3, [r3, #0]
 8001a5e:	6859      	ldr	r1, [r3, #4]
 8001a60:	68fb      	ldr	r3, [r7, #12]
 8001a62:	681a      	ldr	r2, [r3, #0]
 8001a64:	4b0d      	ldr	r3, [pc, #52]	; (8001a9c <I2C_IsAcknowledgeFailed+0xc8>)
 8001a66:	400b      	ands	r3, r1
 8001a68:	6053      	str	r3, [r2, #4]
 8001a6a:	68fb      	ldr	r3, [r7, #12]
 8001a6c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8001a6e:	f043 0204 	orr.w	r2, r3, #4
 8001a72:	68fb      	ldr	r3, [r7, #12]
 8001a74:	645a      	str	r2, [r3, #68]	; 0x44
 8001a76:	68fb      	ldr	r3, [r7, #12]
 8001a78:	2220      	movs	r2, #32
 8001a7a:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8001a7e:	68fb      	ldr	r3, [r7, #12]
 8001a80:	2200      	movs	r2, #0
 8001a82:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 8001a86:	68fb      	ldr	r3, [r7, #12]
 8001a88:	2200      	movs	r2, #0
 8001a8a:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 8001a8e:	2301      	movs	r3, #1
 8001a90:	e000      	b.n	8001a94 <I2C_IsAcknowledgeFailed+0xc0>
 8001a92:	2300      	movs	r3, #0
 8001a94:	4618      	mov	r0, r3
 8001a96:	3710      	adds	r7, #16
 8001a98:	46bd      	mov	sp, r7
 8001a9a:	bd80      	pop	{r7, pc}
 8001a9c:	fe00e800 	.word	0xfe00e800

08001aa0 <I2C_TransferConfig>:
 8001aa0:	b480      	push	{r7}
 8001aa2:	b085      	sub	sp, #20
 8001aa4:	af00      	add	r7, sp, #0
 8001aa6:	60f8      	str	r0, [r7, #12]
 8001aa8:	607b      	str	r3, [r7, #4]
 8001aaa:	460b      	mov	r3, r1
 8001aac:	817b      	strh	r3, [r7, #10]
 8001aae:	4613      	mov	r3, r2
 8001ab0:	727b      	strb	r3, [r7, #9]
 8001ab2:	68fb      	ldr	r3, [r7, #12]
 8001ab4:	681b      	ldr	r3, [r3, #0]
 8001ab6:	685a      	ldr	r2, [r3, #4]
 8001ab8:	69bb      	ldr	r3, [r7, #24]
 8001aba:	0d5b      	lsrs	r3, r3, #21
 8001abc:	f403 6180 	and.w	r1, r3, #1024	; 0x400
 8001ac0:	4b0d      	ldr	r3, [pc, #52]	; (8001af8 <I2C_TransferConfig+0x58>)
 8001ac2:	430b      	orrs	r3, r1
 8001ac4:	43db      	mvns	r3, r3
 8001ac6:	ea02 0103 	and.w	r1, r2, r3
 8001aca:	897b      	ldrh	r3, [r7, #10]
 8001acc:	f3c3 0209 	ubfx	r2, r3, #0, #10
 8001ad0:	7a7b      	ldrb	r3, [r7, #9]
 8001ad2:	041b      	lsls	r3, r3, #16
 8001ad4:	f403 037f 	and.w	r3, r3, #16711680	; 0xff0000
 8001ad8:	431a      	orrs	r2, r3
 8001ada:	687b      	ldr	r3, [r7, #4]
 8001adc:	431a      	orrs	r2, r3
 8001ade:	69bb      	ldr	r3, [r7, #24]
 8001ae0:	431a      	orrs	r2, r3
 8001ae2:	68fb      	ldr	r3, [r7, #12]
 8001ae4:	681b      	ldr	r3, [r3, #0]
 8001ae6:	430a      	orrs	r2, r1
 8001ae8:	605a      	str	r2, [r3, #4]
 8001aea:	bf00      	nop
 8001aec:	3714      	adds	r7, #20
 8001aee:	46bd      	mov	sp, r7
 8001af0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001af4:	4770      	bx	lr
 8001af6:	bf00      	nop
 8001af8:	03ff63ff 	.word	0x03ff63ff

08001afc <HAL_I2CEx_ConfigAnalogFilter>:
 8001afc:	b480      	push	{r7}
 8001afe:	b083      	sub	sp, #12
 8001b00:	af00      	add	r7, sp, #0
 8001b02:	6078      	str	r0, [r7, #4]
 8001b04:	6039      	str	r1, [r7, #0]
 8001b06:	687b      	ldr	r3, [r7, #4]
 8001b08:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 8001b0c:	b2db      	uxtb	r3, r3
 8001b0e:	2b20      	cmp	r3, #32
 8001b10:	d138      	bne.n	8001b84 <HAL_I2CEx_ConfigAnalogFilter+0x88>
 8001b12:	687b      	ldr	r3, [r7, #4]
 8001b14:	f893 3040 	ldrb.w	r3, [r3, #64]	; 0x40
 8001b18:	2b01      	cmp	r3, #1
 8001b1a:	d101      	bne.n	8001b20 <HAL_I2CEx_ConfigAnalogFilter+0x24>
 8001b1c:	2302      	movs	r3, #2
 8001b1e:	e032      	b.n	8001b86 <HAL_I2CEx_ConfigAnalogFilter+0x8a>
 8001b20:	687b      	ldr	r3, [r7, #4]
 8001b22:	2201      	movs	r2, #1
 8001b24:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 8001b28:	687b      	ldr	r3, [r7, #4]
 8001b2a:	2224      	movs	r2, #36	; 0x24
 8001b2c:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8001b30:	687b      	ldr	r3, [r7, #4]
 8001b32:	681b      	ldr	r3, [r3, #0]
 8001b34:	681a      	ldr	r2, [r3, #0]
 8001b36:	687b      	ldr	r3, [r7, #4]
 8001b38:	681b      	ldr	r3, [r3, #0]
 8001b3a:	f022 0201 	bic.w	r2, r2, #1
 8001b3e:	601a      	str	r2, [r3, #0]
 8001b40:	687b      	ldr	r3, [r7, #4]
 8001b42:	681b      	ldr	r3, [r3, #0]
 8001b44:	681a      	ldr	r2, [r3, #0]
 8001b46:	687b      	ldr	r3, [r7, #4]
 8001b48:	681b      	ldr	r3, [r3, #0]
 8001b4a:	f422 5280 	bic.w	r2, r2, #4096	; 0x1000
 8001b4e:	601a      	str	r2, [r3, #0]
 8001b50:	687b      	ldr	r3, [r7, #4]
 8001b52:	681b      	ldr	r3, [r3, #0]
 8001b54:	6819      	ldr	r1, [r3, #0]
 8001b56:	687b      	ldr	r3, [r7, #4]
 8001b58:	681b      	ldr	r3, [r3, #0]
 8001b5a:	683a      	ldr	r2, [r7, #0]
 8001b5c:	430a      	orrs	r2, r1
 8001b5e:	601a      	str	r2, [r3, #0]
 8001b60:	687b      	ldr	r3, [r7, #4]
 8001b62:	681b      	ldr	r3, [r3, #0]
 8001b64:	681a      	ldr	r2, [r3, #0]
 8001b66:	687b      	ldr	r3, [r7, #4]
 8001b68:	681b      	ldr	r3, [r3, #0]
 8001b6a:	f042 0201 	orr.w	r2, r2, #1
 8001b6e:	601a      	str	r2, [r3, #0]
 8001b70:	687b      	ldr	r3, [r7, #4]
 8001b72:	2220      	movs	r2, #32
 8001b74:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8001b78:	687b      	ldr	r3, [r7, #4]
 8001b7a:	2200      	movs	r2, #0
 8001b7c:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 8001b80:	2300      	movs	r3, #0
 8001b82:	e000      	b.n	8001b86 <HAL_I2CEx_ConfigAnalogFilter+0x8a>
 8001b84:	2302      	movs	r3, #2
 8001b86:	4618      	mov	r0, r3
 8001b88:	370c      	adds	r7, #12
 8001b8a:	46bd      	mov	sp, r7
 8001b8c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001b90:	4770      	bx	lr

08001b92 <HAL_I2CEx_ConfigDigitalFilter>:
 8001b92:	b480      	push	{r7}
 8001b94:	b085      	sub	sp, #20
 8001b96:	af00      	add	r7, sp, #0
 8001b98:	6078      	str	r0, [r7, #4]
 8001b9a:	6039      	str	r1, [r7, #0]
 8001b9c:	687b      	ldr	r3, [r7, #4]
 8001b9e:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 8001ba2:	b2db      	uxtb	r3, r3
 8001ba4:	2b20      	cmp	r3, #32
 8001ba6:	d139      	bne.n	8001c1c <HAL_I2CEx_ConfigDigitalFilter+0x8a>
 8001ba8:	687b      	ldr	r3, [r7, #4]
 8001baa:	f893 3040 	ldrb.w	r3, [r3, #64]	; 0x40
 8001bae:	2b01      	cmp	r3, #1
 8001bb0:	d101      	bne.n	8001bb6 <HAL_I2CEx_ConfigDigitalFilter+0x24>
 8001bb2:	2302      	movs	r3, #2
 8001bb4:	e033      	b.n	8001c1e <HAL_I2CEx_ConfigDigitalFilter+0x8c>
 8001bb6:	687b      	ldr	r3, [r7, #4]
 8001bb8:	2201      	movs	r2, #1
 8001bba:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 8001bbe:	687b      	ldr	r3, [r7, #4]
 8001bc0:	2224      	movs	r2, #36	; 0x24
 8001bc2:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8001bc6:	687b      	ldr	r3, [r7, #4]
 8001bc8:	681b      	ldr	r3, [r3, #0]
 8001bca:	681a      	ldr	r2, [r3, #0]
 8001bcc:	687b      	ldr	r3, [r7, #4]
 8001bce:	681b      	ldr	r3, [r3, #0]
 8001bd0:	f022 0201 	bic.w	r2, r2, #1
 8001bd4:	601a      	str	r2, [r3, #0]
 8001bd6:	687b      	ldr	r3, [r7, #4]
 8001bd8:	681b      	ldr	r3, [r3, #0]
 8001bda:	681b      	ldr	r3, [r3, #0]
 8001bdc:	60fb      	str	r3, [r7, #12]
 8001bde:	68fb      	ldr	r3, [r7, #12]
 8001be0:	f423 6370 	bic.w	r3, r3, #3840	; 0xf00
 8001be4:	60fb      	str	r3, [r7, #12]
 8001be6:	683b      	ldr	r3, [r7, #0]
 8001be8:	021b      	lsls	r3, r3, #8
 8001bea:	68fa      	ldr	r2, [r7, #12]
 8001bec:	4313      	orrs	r3, r2
 8001bee:	60fb      	str	r3, [r7, #12]
 8001bf0:	687b      	ldr	r3, [r7, #4]
 8001bf2:	681b      	ldr	r3, [r3, #0]
 8001bf4:	68fa      	ldr	r2, [r7, #12]
 8001bf6:	601a      	str	r2, [r3, #0]
 8001bf8:	687b      	ldr	r3, [r7, #4]
 8001bfa:	681b      	ldr	r3, [r3, #0]
 8001bfc:	681a      	ldr	r2, [r3, #0]
 8001bfe:	687b      	ldr	r3, [r7, #4]
 8001c00:	681b      	ldr	r3, [r3, #0]
 8001c02:	f042 0201 	orr.w	r2, r2, #1
 8001c06:	601a      	str	r2, [r3, #0]
 8001c08:	687b      	ldr	r3, [r7, #4]
 8001c0a:	2220      	movs	r2, #32
 8001c0c:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8001c10:	687b      	ldr	r3, [r7, #4]
 8001c12:	2200      	movs	r2, #0
 8001c14:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 8001c18:	2300      	movs	r3, #0
 8001c1a:	e000      	b.n	8001c1e <HAL_I2CEx_ConfigDigitalFilter+0x8c>
 8001c1c:	2302      	movs	r3, #2
 8001c1e:	4618      	mov	r0, r3
 8001c20:	3714      	adds	r7, #20
 8001c22:	46bd      	mov	sp, r7
 8001c24:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001c28:	4770      	bx	lr
	...

08001c2c <HAL_PWR_EnableBkUpAccess>:
 8001c2c:	b480      	push	{r7}
 8001c2e:	af00      	add	r7, sp, #0
 8001c30:	4b05      	ldr	r3, [pc, #20]	; (8001c48 <HAL_PWR_EnableBkUpAccess+0x1c>)
 8001c32:	681b      	ldr	r3, [r3, #0]
 8001c34:	4a04      	ldr	r2, [pc, #16]	; (8001c48 <HAL_PWR_EnableBkUpAccess+0x1c>)
 8001c36:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8001c3a:	6013      	str	r3, [r2, #0]
 8001c3c:	bf00      	nop
 8001c3e:	46bd      	mov	sp, r7
 8001c40:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001c44:	4770      	bx	lr
 8001c46:	bf00      	nop
 8001c48:	40007000 	.word	0x40007000

08001c4c <HAL_PWREx_GetVoltageRange>:
 8001c4c:	b480      	push	{r7}
 8001c4e:	af00      	add	r7, sp, #0
 8001c50:	4b04      	ldr	r3, [pc, #16]	; (8001c64 <HAL_PWREx_GetVoltageRange+0x18>)
 8001c52:	681b      	ldr	r3, [r3, #0]
 8001c54:	f403 63c0 	and.w	r3, r3, #1536	; 0x600
 8001c58:	4618      	mov	r0, r3
 8001c5a:	46bd      	mov	sp, r7
 8001c5c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001c60:	4770      	bx	lr
 8001c62:	bf00      	nop
 8001c64:	40007000 	.word	0x40007000

08001c68 <HAL_PWREx_ControlVoltageScaling>:
 8001c68:	b480      	push	{r7}
 8001c6a:	b085      	sub	sp, #20
 8001c6c:	af00      	add	r7, sp, #0
 8001c6e:	6078      	str	r0, [r7, #4]
 8001c70:	687b      	ldr	r3, [r7, #4]
 8001c72:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8001c76:	d130      	bne.n	8001cda <HAL_PWREx_ControlVoltageScaling+0x72>
 8001c78:	4b23      	ldr	r3, [pc, #140]	; (8001d08 <HAL_PWREx_ControlVoltageScaling+0xa0>)
 8001c7a:	681b      	ldr	r3, [r3, #0]
 8001c7c:	f403 63c0 	and.w	r3, r3, #1536	; 0x600
 8001c80:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8001c84:	d038      	beq.n	8001cf8 <HAL_PWREx_ControlVoltageScaling+0x90>
 8001c86:	4b20      	ldr	r3, [pc, #128]	; (8001d08 <HAL_PWREx_ControlVoltageScaling+0xa0>)
 8001c88:	681b      	ldr	r3, [r3, #0]
 8001c8a:	f423 63c0 	bic.w	r3, r3, #1536	; 0x600
 8001c8e:	4a1e      	ldr	r2, [pc, #120]	; (8001d08 <HAL_PWREx_ControlVoltageScaling+0xa0>)
 8001c90:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8001c94:	6013      	str	r3, [r2, #0]
 8001c96:	4b1d      	ldr	r3, [pc, #116]	; (8001d0c <HAL_PWREx_ControlVoltageScaling+0xa4>)
 8001c98:	681b      	ldr	r3, [r3, #0]
 8001c9a:	2232      	movs	r2, #50	; 0x32
 8001c9c:	fb02 f303 	mul.w	r3, r2, r3
 8001ca0:	4a1b      	ldr	r2, [pc, #108]	; (8001d10 <HAL_PWREx_ControlVoltageScaling+0xa8>)
 8001ca2:	fba2 2303 	umull	r2, r3, r2, r3
 8001ca6:	0c9b      	lsrs	r3, r3, #18
 8001ca8:	3301      	adds	r3, #1
 8001caa:	60fb      	str	r3, [r7, #12]
 8001cac:	e002      	b.n	8001cb4 <HAL_PWREx_ControlVoltageScaling+0x4c>
 8001cae:	68fb      	ldr	r3, [r7, #12]
 8001cb0:	3b01      	subs	r3, #1
 8001cb2:	60fb      	str	r3, [r7, #12]
 8001cb4:	4b14      	ldr	r3, [pc, #80]	; (8001d08 <HAL_PWREx_ControlVoltageScaling+0xa0>)
 8001cb6:	695b      	ldr	r3, [r3, #20]
 8001cb8:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 8001cbc:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8001cc0:	d102      	bne.n	8001cc8 <HAL_PWREx_ControlVoltageScaling+0x60>
 8001cc2:	68fb      	ldr	r3, [r7, #12]
 8001cc4:	2b00      	cmp	r3, #0
 8001cc6:	d1f2      	bne.n	8001cae <HAL_PWREx_ControlVoltageScaling+0x46>
 8001cc8:	4b0f      	ldr	r3, [pc, #60]	; (8001d08 <HAL_PWREx_ControlVoltageScaling+0xa0>)
 8001cca:	695b      	ldr	r3, [r3, #20]
 8001ccc:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 8001cd0:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8001cd4:	d110      	bne.n	8001cf8 <HAL_PWREx_ControlVoltageScaling+0x90>
 8001cd6:	2303      	movs	r3, #3
 8001cd8:	e00f      	b.n	8001cfa <HAL_PWREx_ControlVoltageScaling+0x92>
 8001cda:	4b0b      	ldr	r3, [pc, #44]	; (8001d08 <HAL_PWREx_ControlVoltageScaling+0xa0>)
 8001cdc:	681b      	ldr	r3, [r3, #0]
 8001cde:	f403 63c0 	and.w	r3, r3, #1536	; 0x600
 8001ce2:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8001ce6:	d007      	beq.n	8001cf8 <HAL_PWREx_ControlVoltageScaling+0x90>
 8001ce8:	4b07      	ldr	r3, [pc, #28]	; (8001d08 <HAL_PWREx_ControlVoltageScaling+0xa0>)
 8001cea:	681b      	ldr	r3, [r3, #0]
 8001cec:	f423 63c0 	bic.w	r3, r3, #1536	; 0x600
 8001cf0:	4a05      	ldr	r2, [pc, #20]	; (8001d08 <HAL_PWREx_ControlVoltageScaling+0xa0>)
 8001cf2:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 8001cf6:	6013      	str	r3, [r2, #0]
 8001cf8:	2300      	movs	r3, #0
 8001cfa:	4618      	mov	r0, r3
 8001cfc:	3714      	adds	r7, #20
 8001cfe:	46bd      	mov	sp, r7
 8001d00:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001d04:	4770      	bx	lr
 8001d06:	bf00      	nop
 8001d08:	40007000 	.word	0x40007000
 8001d0c:	20000008 	.word	0x20000008
 8001d10:	431bde83 	.word	0x431bde83

08001d14 <HAL_RCC_OscConfig>:
 8001d14:	b580      	push	{r7, lr}
 8001d16:	b088      	sub	sp, #32
 8001d18:	af00      	add	r7, sp, #0
 8001d1a:	6078      	str	r0, [r7, #4]
 8001d1c:	687b      	ldr	r3, [r7, #4]
 8001d1e:	2b00      	cmp	r3, #0
 8001d20:	d101      	bne.n	8001d26 <HAL_RCC_OscConfig+0x12>
 8001d22:	2301      	movs	r3, #1
 8001d24:	e3db      	b.n	80024de <HAL_RCC_OscConfig+0x7ca>
 8001d26:	4ba4      	ldr	r3, [pc, #656]	; (8001fb8 <HAL_RCC_OscConfig+0x2a4>)
 8001d28:	689b      	ldr	r3, [r3, #8]
 8001d2a:	f003 030c 	and.w	r3, r3, #12
 8001d2e:	61bb      	str	r3, [r7, #24]
 8001d30:	4ba1      	ldr	r3, [pc, #644]	; (8001fb8 <HAL_RCC_OscConfig+0x2a4>)
 8001d32:	68db      	ldr	r3, [r3, #12]
 8001d34:	f003 0303 	and.w	r3, r3, #3
 8001d38:	617b      	str	r3, [r7, #20]
 8001d3a:	687b      	ldr	r3, [r7, #4]
 8001d3c:	681b      	ldr	r3, [r3, #0]
 8001d3e:	f003 0310 	and.w	r3, r3, #16
 8001d42:	2b00      	cmp	r3, #0
 8001d44:	f000 80e1 	beq.w	8001f0a <HAL_RCC_OscConfig+0x1f6>
 8001d48:	69bb      	ldr	r3, [r7, #24]
 8001d4a:	2b00      	cmp	r3, #0
 8001d4c:	d007      	beq.n	8001d5e <HAL_RCC_OscConfig+0x4a>
 8001d4e:	69bb      	ldr	r3, [r7, #24]
 8001d50:	2b0c      	cmp	r3, #12
 8001d52:	f040 8088 	bne.w	8001e66 <HAL_RCC_OscConfig+0x152>
 8001d56:	697b      	ldr	r3, [r7, #20]
 8001d58:	2b01      	cmp	r3, #1
 8001d5a:	f040 8084 	bne.w	8001e66 <HAL_RCC_OscConfig+0x152>
 8001d5e:	4b96      	ldr	r3, [pc, #600]	; (8001fb8 <HAL_RCC_OscConfig+0x2a4>)
 8001d60:	681b      	ldr	r3, [r3, #0]
 8001d62:	f003 0302 	and.w	r3, r3, #2
 8001d66:	2b00      	cmp	r3, #0
 8001d68:	d005      	beq.n	8001d76 <HAL_RCC_OscConfig+0x62>
 8001d6a:	687b      	ldr	r3, [r7, #4]
 8001d6c:	699b      	ldr	r3, [r3, #24]
 8001d6e:	2b00      	cmp	r3, #0
 8001d70:	d101      	bne.n	8001d76 <HAL_RCC_OscConfig+0x62>
 8001d72:	2301      	movs	r3, #1
 8001d74:	e3b3      	b.n	80024de <HAL_RCC_OscConfig+0x7ca>
 8001d76:	687b      	ldr	r3, [r7, #4]
 8001d78:	6a1a      	ldr	r2, [r3, #32]
 8001d7a:	4b8f      	ldr	r3, [pc, #572]	; (8001fb8 <HAL_RCC_OscConfig+0x2a4>)
 8001d7c:	681b      	ldr	r3, [r3, #0]
 8001d7e:	f003 0308 	and.w	r3, r3, #8
 8001d82:	2b00      	cmp	r3, #0
 8001d84:	d004      	beq.n	8001d90 <HAL_RCC_OscConfig+0x7c>
 8001d86:	4b8c      	ldr	r3, [pc, #560]	; (8001fb8 <HAL_RCC_OscConfig+0x2a4>)
 8001d88:	681b      	ldr	r3, [r3, #0]
 8001d8a:	f003 03f0 	and.w	r3, r3, #240	; 0xf0
 8001d8e:	e005      	b.n	8001d9c <HAL_RCC_OscConfig+0x88>
 8001d90:	4b89      	ldr	r3, [pc, #548]	; (8001fb8 <HAL_RCC_OscConfig+0x2a4>)
 8001d92:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 8001d96:	091b      	lsrs	r3, r3, #4
 8001d98:	f003 03f0 	and.w	r3, r3, #240	; 0xf0
 8001d9c:	4293      	cmp	r3, r2
 8001d9e:	d223      	bcs.n	8001de8 <HAL_RCC_OscConfig+0xd4>
 8001da0:	687b      	ldr	r3, [r7, #4]
 8001da2:	6a1b      	ldr	r3, [r3, #32]
 8001da4:	4618      	mov	r0, r3
 8001da6:	f000 fd47 	bl	8002838 <RCC_SetFlashLatencyFromMSIRange>
 8001daa:	4603      	mov	r3, r0
 8001dac:	2b00      	cmp	r3, #0
 8001dae:	d001      	beq.n	8001db4 <HAL_RCC_OscConfig+0xa0>
 8001db0:	2301      	movs	r3, #1
 8001db2:	e394      	b.n	80024de <HAL_RCC_OscConfig+0x7ca>
 8001db4:	4b80      	ldr	r3, [pc, #512]	; (8001fb8 <HAL_RCC_OscConfig+0x2a4>)
 8001db6:	681b      	ldr	r3, [r3, #0]
 8001db8:	4a7f      	ldr	r2, [pc, #508]	; (8001fb8 <HAL_RCC_OscConfig+0x2a4>)
 8001dba:	f043 0308 	orr.w	r3, r3, #8
 8001dbe:	6013      	str	r3, [r2, #0]
 8001dc0:	4b7d      	ldr	r3, [pc, #500]	; (8001fb8 <HAL_RCC_OscConfig+0x2a4>)
 8001dc2:	681b      	ldr	r3, [r3, #0]
 8001dc4:	f023 02f0 	bic.w	r2, r3, #240	; 0xf0
 8001dc8:	687b      	ldr	r3, [r7, #4]
 8001dca:	6a1b      	ldr	r3, [r3, #32]
 8001dcc:	497a      	ldr	r1, [pc, #488]	; (8001fb8 <HAL_RCC_OscConfig+0x2a4>)
 8001dce:	4313      	orrs	r3, r2
 8001dd0:	600b      	str	r3, [r1, #0]
 8001dd2:	4b79      	ldr	r3, [pc, #484]	; (8001fb8 <HAL_RCC_OscConfig+0x2a4>)
 8001dd4:	685b      	ldr	r3, [r3, #4]
 8001dd6:	f423 427f 	bic.w	r2, r3, #65280	; 0xff00
 8001dda:	687b      	ldr	r3, [r7, #4]
 8001ddc:	69db      	ldr	r3, [r3, #28]
 8001dde:	021b      	lsls	r3, r3, #8
 8001de0:	4975      	ldr	r1, [pc, #468]	; (8001fb8 <HAL_RCC_OscConfig+0x2a4>)
 8001de2:	4313      	orrs	r3, r2
 8001de4:	604b      	str	r3, [r1, #4]
 8001de6:	e022      	b.n	8001e2e <HAL_RCC_OscConfig+0x11a>
 8001de8:	4b73      	ldr	r3, [pc, #460]	; (8001fb8 <HAL_RCC_OscConfig+0x2a4>)
 8001dea:	681b      	ldr	r3, [r3, #0]
 8001dec:	4a72      	ldr	r2, [pc, #456]	; (8001fb8 <HAL_RCC_OscConfig+0x2a4>)
 8001dee:	f043 0308 	orr.w	r3, r3, #8
 8001df2:	6013      	str	r3, [r2, #0]
 8001df4:	4b70      	ldr	r3, [pc, #448]	; (8001fb8 <HAL_RCC_OscConfig+0x2a4>)
 8001df6:	681b      	ldr	r3, [r3, #0]
 8001df8:	f023 02f0 	bic.w	r2, r3, #240	; 0xf0
 8001dfc:	687b      	ldr	r3, [r7, #4]
 8001dfe:	6a1b      	ldr	r3, [r3, #32]
 8001e00:	496d      	ldr	r1, [pc, #436]	; (8001fb8 <HAL_RCC_OscConfig+0x2a4>)
 8001e02:	4313      	orrs	r3, r2
 8001e04:	600b      	str	r3, [r1, #0]
 8001e06:	4b6c      	ldr	r3, [pc, #432]	; (8001fb8 <HAL_RCC_OscConfig+0x2a4>)
 8001e08:	685b      	ldr	r3, [r3, #4]
 8001e0a:	f423 427f 	bic.w	r2, r3, #65280	; 0xff00
 8001e0e:	687b      	ldr	r3, [r7, #4]
 8001e10:	69db      	ldr	r3, [r3, #28]
 8001e12:	021b      	lsls	r3, r3, #8
 8001e14:	4968      	ldr	r1, [pc, #416]	; (8001fb8 <HAL_RCC_OscConfig+0x2a4>)
 8001e16:	4313      	orrs	r3, r2
 8001e18:	604b      	str	r3, [r1, #4]
 8001e1a:	687b      	ldr	r3, [r7, #4]
 8001e1c:	6a1b      	ldr	r3, [r3, #32]
 8001e1e:	4618      	mov	r0, r3
 8001e20:	f000 fd0a 	bl	8002838 <RCC_SetFlashLatencyFromMSIRange>
 8001e24:	4603      	mov	r3, r0
 8001e26:	2b00      	cmp	r3, #0
 8001e28:	d001      	beq.n	8001e2e <HAL_RCC_OscConfig+0x11a>
 8001e2a:	2301      	movs	r3, #1
 8001e2c:	e357      	b.n	80024de <HAL_RCC_OscConfig+0x7ca>
 8001e2e:	f000 fc41 	bl	80026b4 <HAL_RCC_GetSysClockFreq>
 8001e32:	4601      	mov	r1, r0
 8001e34:	4b60      	ldr	r3, [pc, #384]	; (8001fb8 <HAL_RCC_OscConfig+0x2a4>)
 8001e36:	689b      	ldr	r3, [r3, #8]
 8001e38:	091b      	lsrs	r3, r3, #4
 8001e3a:	f003 030f 	and.w	r3, r3, #15
 8001e3e:	4a5f      	ldr	r2, [pc, #380]	; (8001fbc <HAL_RCC_OscConfig+0x2a8>)
 8001e40:	5cd3      	ldrb	r3, [r2, r3]
 8001e42:	f003 031f 	and.w	r3, r3, #31
 8001e46:	fa21 f303 	lsr.w	r3, r1, r3
 8001e4a:	4a5d      	ldr	r2, [pc, #372]	; (8001fc0 <HAL_RCC_OscConfig+0x2ac>)
 8001e4c:	6013      	str	r3, [r2, #0]
 8001e4e:	4b5d      	ldr	r3, [pc, #372]	; (8001fc4 <HAL_RCC_OscConfig+0x2b0>)
 8001e50:	681b      	ldr	r3, [r3, #0]
 8001e52:	4618      	mov	r0, r3
 8001e54:	f7ff f804 	bl	8000e60 <HAL_InitTick>
 8001e58:	4603      	mov	r3, r0
 8001e5a:	73fb      	strb	r3, [r7, #15]
 8001e5c:	7bfb      	ldrb	r3, [r7, #15]
 8001e5e:	2b00      	cmp	r3, #0
 8001e60:	d052      	beq.n	8001f08 <HAL_RCC_OscConfig+0x1f4>
 8001e62:	7bfb      	ldrb	r3, [r7, #15]
 8001e64:	e33b      	b.n	80024de <HAL_RCC_OscConfig+0x7ca>
 8001e66:	687b      	ldr	r3, [r7, #4]
 8001e68:	699b      	ldr	r3, [r3, #24]
 8001e6a:	2b00      	cmp	r3, #0
 8001e6c:	d032      	beq.n	8001ed4 <HAL_RCC_OscConfig+0x1c0>
 8001e6e:	4b52      	ldr	r3, [pc, #328]	; (8001fb8 <HAL_RCC_OscConfig+0x2a4>)
 8001e70:	681b      	ldr	r3, [r3, #0]
 8001e72:	4a51      	ldr	r2, [pc, #324]	; (8001fb8 <HAL_RCC_OscConfig+0x2a4>)
 8001e74:	f043 0301 	orr.w	r3, r3, #1
 8001e78:	6013      	str	r3, [r2, #0]
 8001e7a:	f7ff f83d 	bl	8000ef8 <HAL_GetTick>
 8001e7e:	6138      	str	r0, [r7, #16]
 8001e80:	e008      	b.n	8001e94 <HAL_RCC_OscConfig+0x180>
 8001e82:	f7ff f839 	bl	8000ef8 <HAL_GetTick>
 8001e86:	4602      	mov	r2, r0
 8001e88:	693b      	ldr	r3, [r7, #16]
 8001e8a:	1ad3      	subs	r3, r2, r3
 8001e8c:	2b02      	cmp	r3, #2
 8001e8e:	d901      	bls.n	8001e94 <HAL_RCC_OscConfig+0x180>
 8001e90:	2303      	movs	r3, #3
 8001e92:	e324      	b.n	80024de <HAL_RCC_OscConfig+0x7ca>
 8001e94:	4b48      	ldr	r3, [pc, #288]	; (8001fb8 <HAL_RCC_OscConfig+0x2a4>)
 8001e96:	681b      	ldr	r3, [r3, #0]
 8001e98:	f003 0302 	and.w	r3, r3, #2
 8001e9c:	2b00      	cmp	r3, #0
 8001e9e:	d0f0      	beq.n	8001e82 <HAL_RCC_OscConfig+0x16e>
 8001ea0:	4b45      	ldr	r3, [pc, #276]	; (8001fb8 <HAL_RCC_OscConfig+0x2a4>)
 8001ea2:	681b      	ldr	r3, [r3, #0]
 8001ea4:	4a44      	ldr	r2, [pc, #272]	; (8001fb8 <HAL_RCC_OscConfig+0x2a4>)
 8001ea6:	f043 0308 	orr.w	r3, r3, #8
 8001eaa:	6013      	str	r3, [r2, #0]
 8001eac:	4b42      	ldr	r3, [pc, #264]	; (8001fb8 <HAL_RCC_OscConfig+0x2a4>)
 8001eae:	681b      	ldr	r3, [r3, #0]
 8001eb0:	f023 02f0 	bic.w	r2, r3, #240	; 0xf0
 8001eb4:	687b      	ldr	r3, [r7, #4]
 8001eb6:	6a1b      	ldr	r3, [r3, #32]
 8001eb8:	493f      	ldr	r1, [pc, #252]	; (8001fb8 <HAL_RCC_OscConfig+0x2a4>)
 8001eba:	4313      	orrs	r3, r2
 8001ebc:	600b      	str	r3, [r1, #0]
 8001ebe:	4b3e      	ldr	r3, [pc, #248]	; (8001fb8 <HAL_RCC_OscConfig+0x2a4>)
 8001ec0:	685b      	ldr	r3, [r3, #4]
 8001ec2:	f423 427f 	bic.w	r2, r3, #65280	; 0xff00
 8001ec6:	687b      	ldr	r3, [r7, #4]
 8001ec8:	69db      	ldr	r3, [r3, #28]
 8001eca:	021b      	lsls	r3, r3, #8
 8001ecc:	493a      	ldr	r1, [pc, #232]	; (8001fb8 <HAL_RCC_OscConfig+0x2a4>)
 8001ece:	4313      	orrs	r3, r2
 8001ed0:	604b      	str	r3, [r1, #4]
 8001ed2:	e01a      	b.n	8001f0a <HAL_RCC_OscConfig+0x1f6>
 8001ed4:	4b38      	ldr	r3, [pc, #224]	; (8001fb8 <HAL_RCC_OscConfig+0x2a4>)
 8001ed6:	681b      	ldr	r3, [r3, #0]
 8001ed8:	4a37      	ldr	r2, [pc, #220]	; (8001fb8 <HAL_RCC_OscConfig+0x2a4>)
 8001eda:	f023 0301 	bic.w	r3, r3, #1
 8001ede:	6013      	str	r3, [r2, #0]
 8001ee0:	f7ff f80a 	bl	8000ef8 <HAL_GetTick>
 8001ee4:	6138      	str	r0, [r7, #16]
 8001ee6:	e008      	b.n	8001efa <HAL_RCC_OscConfig+0x1e6>
 8001ee8:	f7ff f806 	bl	8000ef8 <HAL_GetTick>
 8001eec:	4602      	mov	r2, r0
 8001eee:	693b      	ldr	r3, [r7, #16]
 8001ef0:	1ad3      	subs	r3, r2, r3
 8001ef2:	2b02      	cmp	r3, #2
 8001ef4:	d901      	bls.n	8001efa <HAL_RCC_OscConfig+0x1e6>
 8001ef6:	2303      	movs	r3, #3
 8001ef8:	e2f1      	b.n	80024de <HAL_RCC_OscConfig+0x7ca>
 8001efa:	4b2f      	ldr	r3, [pc, #188]	; (8001fb8 <HAL_RCC_OscConfig+0x2a4>)
 8001efc:	681b      	ldr	r3, [r3, #0]
 8001efe:	f003 0302 	and.w	r3, r3, #2
 8001f02:	2b00      	cmp	r3, #0
 8001f04:	d1f0      	bne.n	8001ee8 <HAL_RCC_OscConfig+0x1d4>
 8001f06:	e000      	b.n	8001f0a <HAL_RCC_OscConfig+0x1f6>
 8001f08:	bf00      	nop
 8001f0a:	687b      	ldr	r3, [r7, #4]
 8001f0c:	681b      	ldr	r3, [r3, #0]
 8001f0e:	f003 0301 	and.w	r3, r3, #1
 8001f12:	2b00      	cmp	r3, #0
 8001f14:	d074      	beq.n	8002000 <HAL_RCC_OscConfig+0x2ec>
 8001f16:	69bb      	ldr	r3, [r7, #24]
 8001f18:	2b08      	cmp	r3, #8
 8001f1a:	d005      	beq.n	8001f28 <HAL_RCC_OscConfig+0x214>
 8001f1c:	69bb      	ldr	r3, [r7, #24]
 8001f1e:	2b0c      	cmp	r3, #12
 8001f20:	d10e      	bne.n	8001f40 <HAL_RCC_OscConfig+0x22c>
 8001f22:	697b      	ldr	r3, [r7, #20]
 8001f24:	2b03      	cmp	r3, #3
 8001f26:	d10b      	bne.n	8001f40 <HAL_RCC_OscConfig+0x22c>
 8001f28:	4b23      	ldr	r3, [pc, #140]	; (8001fb8 <HAL_RCC_OscConfig+0x2a4>)
 8001f2a:	681b      	ldr	r3, [r3, #0]
 8001f2c:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8001f30:	2b00      	cmp	r3, #0
 8001f32:	d064      	beq.n	8001ffe <HAL_RCC_OscConfig+0x2ea>
 8001f34:	687b      	ldr	r3, [r7, #4]
 8001f36:	685b      	ldr	r3, [r3, #4]
 8001f38:	2b00      	cmp	r3, #0
 8001f3a:	d160      	bne.n	8001ffe <HAL_RCC_OscConfig+0x2ea>
 8001f3c:	2301      	movs	r3, #1
 8001f3e:	e2ce      	b.n	80024de <HAL_RCC_OscConfig+0x7ca>
 8001f40:	687b      	ldr	r3, [r7, #4]
 8001f42:	685b      	ldr	r3, [r3, #4]
 8001f44:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8001f48:	d106      	bne.n	8001f58 <HAL_RCC_OscConfig+0x244>
 8001f4a:	4b1b      	ldr	r3, [pc, #108]	; (8001fb8 <HAL_RCC_OscConfig+0x2a4>)
 8001f4c:	681b      	ldr	r3, [r3, #0]
 8001f4e:	4a1a      	ldr	r2, [pc, #104]	; (8001fb8 <HAL_RCC_OscConfig+0x2a4>)
 8001f50:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8001f54:	6013      	str	r3, [r2, #0]
 8001f56:	e01d      	b.n	8001f94 <HAL_RCC_OscConfig+0x280>
 8001f58:	687b      	ldr	r3, [r7, #4]
 8001f5a:	685b      	ldr	r3, [r3, #4]
 8001f5c:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 8001f60:	d10c      	bne.n	8001f7c <HAL_RCC_OscConfig+0x268>
 8001f62:	4b15      	ldr	r3, [pc, #84]	; (8001fb8 <HAL_RCC_OscConfig+0x2a4>)
 8001f64:	681b      	ldr	r3, [r3, #0]
 8001f66:	4a14      	ldr	r2, [pc, #80]	; (8001fb8 <HAL_RCC_OscConfig+0x2a4>)
 8001f68:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 8001f6c:	6013      	str	r3, [r2, #0]
 8001f6e:	4b12      	ldr	r3, [pc, #72]	; (8001fb8 <HAL_RCC_OscConfig+0x2a4>)
 8001f70:	681b      	ldr	r3, [r3, #0]
 8001f72:	4a11      	ldr	r2, [pc, #68]	; (8001fb8 <HAL_RCC_OscConfig+0x2a4>)
 8001f74:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8001f78:	6013      	str	r3, [r2, #0]
 8001f7a:	e00b      	b.n	8001f94 <HAL_RCC_OscConfig+0x280>
 8001f7c:	4b0e      	ldr	r3, [pc, #56]	; (8001fb8 <HAL_RCC_OscConfig+0x2a4>)
 8001f7e:	681b      	ldr	r3, [r3, #0]
 8001f80:	4a0d      	ldr	r2, [pc, #52]	; (8001fb8 <HAL_RCC_OscConfig+0x2a4>)
 8001f82:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8001f86:	6013      	str	r3, [r2, #0]
 8001f88:	4b0b      	ldr	r3, [pc, #44]	; (8001fb8 <HAL_RCC_OscConfig+0x2a4>)
 8001f8a:	681b      	ldr	r3, [r3, #0]
 8001f8c:	4a0a      	ldr	r2, [pc, #40]	; (8001fb8 <HAL_RCC_OscConfig+0x2a4>)
 8001f8e:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 8001f92:	6013      	str	r3, [r2, #0]
 8001f94:	687b      	ldr	r3, [r7, #4]
 8001f96:	685b      	ldr	r3, [r3, #4]
 8001f98:	2b00      	cmp	r3, #0
 8001f9a:	d01c      	beq.n	8001fd6 <HAL_RCC_OscConfig+0x2c2>
 8001f9c:	f7fe ffac 	bl	8000ef8 <HAL_GetTick>
 8001fa0:	6138      	str	r0, [r7, #16]
 8001fa2:	e011      	b.n	8001fc8 <HAL_RCC_OscConfig+0x2b4>
 8001fa4:	f7fe ffa8 	bl	8000ef8 <HAL_GetTick>
 8001fa8:	4602      	mov	r2, r0
 8001faa:	693b      	ldr	r3, [r7, #16]
 8001fac:	1ad3      	subs	r3, r2, r3
 8001fae:	2b64      	cmp	r3, #100	; 0x64
 8001fb0:	d90a      	bls.n	8001fc8 <HAL_RCC_OscConfig+0x2b4>
 8001fb2:	2303      	movs	r3, #3
 8001fb4:	e293      	b.n	80024de <HAL_RCC_OscConfig+0x7ca>
 8001fb6:	bf00      	nop
 8001fb8:	40021000 	.word	0x40021000
 8001fbc:	08004b4c 	.word	0x08004b4c
 8001fc0:	20000008 	.word	0x20000008
 8001fc4:	2000000c 	.word	0x2000000c
 8001fc8:	4bae      	ldr	r3, [pc, #696]	; (8002284 <HAL_RCC_OscConfig+0x570>)
 8001fca:	681b      	ldr	r3, [r3, #0]
 8001fcc:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8001fd0:	2b00      	cmp	r3, #0
 8001fd2:	d0e7      	beq.n	8001fa4 <HAL_RCC_OscConfig+0x290>
 8001fd4:	e014      	b.n	8002000 <HAL_RCC_OscConfig+0x2ec>
 8001fd6:	f7fe ff8f 	bl	8000ef8 <HAL_GetTick>
 8001fda:	6138      	str	r0, [r7, #16]
 8001fdc:	e008      	b.n	8001ff0 <HAL_RCC_OscConfig+0x2dc>
 8001fde:	f7fe ff8b 	bl	8000ef8 <HAL_GetTick>
 8001fe2:	4602      	mov	r2, r0
 8001fe4:	693b      	ldr	r3, [r7, #16]
 8001fe6:	1ad3      	subs	r3, r2, r3
 8001fe8:	2b64      	cmp	r3, #100	; 0x64
 8001fea:	d901      	bls.n	8001ff0 <HAL_RCC_OscConfig+0x2dc>
 8001fec:	2303      	movs	r3, #3
 8001fee:	e276      	b.n	80024de <HAL_RCC_OscConfig+0x7ca>
 8001ff0:	4ba4      	ldr	r3, [pc, #656]	; (8002284 <HAL_RCC_OscConfig+0x570>)
 8001ff2:	681b      	ldr	r3, [r3, #0]
 8001ff4:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8001ff8:	2b00      	cmp	r3, #0
 8001ffa:	d1f0      	bne.n	8001fde <HAL_RCC_OscConfig+0x2ca>
 8001ffc:	e000      	b.n	8002000 <HAL_RCC_OscConfig+0x2ec>
 8001ffe:	bf00      	nop
 8002000:	687b      	ldr	r3, [r7, #4]
 8002002:	681b      	ldr	r3, [r3, #0]
 8002004:	f003 0302 	and.w	r3, r3, #2
 8002008:	2b00      	cmp	r3, #0
 800200a:	d060      	beq.n	80020ce <HAL_RCC_OscConfig+0x3ba>
 800200c:	69bb      	ldr	r3, [r7, #24]
 800200e:	2b04      	cmp	r3, #4
 8002010:	d005      	beq.n	800201e <HAL_RCC_OscConfig+0x30a>
 8002012:	69bb      	ldr	r3, [r7, #24]
 8002014:	2b0c      	cmp	r3, #12
 8002016:	d119      	bne.n	800204c <HAL_RCC_OscConfig+0x338>
 8002018:	697b      	ldr	r3, [r7, #20]
 800201a:	2b02      	cmp	r3, #2
 800201c:	d116      	bne.n	800204c <HAL_RCC_OscConfig+0x338>
 800201e:	4b99      	ldr	r3, [pc, #612]	; (8002284 <HAL_RCC_OscConfig+0x570>)
 8002020:	681b      	ldr	r3, [r3, #0]
 8002022:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 8002026:	2b00      	cmp	r3, #0
 8002028:	d005      	beq.n	8002036 <HAL_RCC_OscConfig+0x322>
 800202a:	687b      	ldr	r3, [r7, #4]
 800202c:	68db      	ldr	r3, [r3, #12]
 800202e:	2b00      	cmp	r3, #0
 8002030:	d101      	bne.n	8002036 <HAL_RCC_OscConfig+0x322>
 8002032:	2301      	movs	r3, #1
 8002034:	e253      	b.n	80024de <HAL_RCC_OscConfig+0x7ca>
 8002036:	4b93      	ldr	r3, [pc, #588]	; (8002284 <HAL_RCC_OscConfig+0x570>)
 8002038:	685b      	ldr	r3, [r3, #4]
 800203a:	f023 52f8 	bic.w	r2, r3, #520093696	; 0x1f000000
 800203e:	687b      	ldr	r3, [r7, #4]
 8002040:	691b      	ldr	r3, [r3, #16]
 8002042:	061b      	lsls	r3, r3, #24
 8002044:	498f      	ldr	r1, [pc, #572]	; (8002284 <HAL_RCC_OscConfig+0x570>)
 8002046:	4313      	orrs	r3, r2
 8002048:	604b      	str	r3, [r1, #4]
 800204a:	e040      	b.n	80020ce <HAL_RCC_OscConfig+0x3ba>
 800204c:	687b      	ldr	r3, [r7, #4]
 800204e:	68db      	ldr	r3, [r3, #12]
 8002050:	2b00      	cmp	r3, #0
 8002052:	d023      	beq.n	800209c <HAL_RCC_OscConfig+0x388>
 8002054:	4b8b      	ldr	r3, [pc, #556]	; (8002284 <HAL_RCC_OscConfig+0x570>)
 8002056:	681b      	ldr	r3, [r3, #0]
 8002058:	4a8a      	ldr	r2, [pc, #552]	; (8002284 <HAL_RCC_OscConfig+0x570>)
 800205a:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800205e:	6013      	str	r3, [r2, #0]
 8002060:	f7fe ff4a 	bl	8000ef8 <HAL_GetTick>
 8002064:	6138      	str	r0, [r7, #16]
 8002066:	e008      	b.n	800207a <HAL_RCC_OscConfig+0x366>
 8002068:	f7fe ff46 	bl	8000ef8 <HAL_GetTick>
 800206c:	4602      	mov	r2, r0
 800206e:	693b      	ldr	r3, [r7, #16]
 8002070:	1ad3      	subs	r3, r2, r3
 8002072:	2b02      	cmp	r3, #2
 8002074:	d901      	bls.n	800207a <HAL_RCC_OscConfig+0x366>
 8002076:	2303      	movs	r3, #3
 8002078:	e231      	b.n	80024de <HAL_RCC_OscConfig+0x7ca>
 800207a:	4b82      	ldr	r3, [pc, #520]	; (8002284 <HAL_RCC_OscConfig+0x570>)
 800207c:	681b      	ldr	r3, [r3, #0]
 800207e:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 8002082:	2b00      	cmp	r3, #0
 8002084:	d0f0      	beq.n	8002068 <HAL_RCC_OscConfig+0x354>
 8002086:	4b7f      	ldr	r3, [pc, #508]	; (8002284 <HAL_RCC_OscConfig+0x570>)
 8002088:	685b      	ldr	r3, [r3, #4]
 800208a:	f023 52f8 	bic.w	r2, r3, #520093696	; 0x1f000000
 800208e:	687b      	ldr	r3, [r7, #4]
 8002090:	691b      	ldr	r3, [r3, #16]
 8002092:	061b      	lsls	r3, r3, #24
 8002094:	497b      	ldr	r1, [pc, #492]	; (8002284 <HAL_RCC_OscConfig+0x570>)
 8002096:	4313      	orrs	r3, r2
 8002098:	604b      	str	r3, [r1, #4]
 800209a:	e018      	b.n	80020ce <HAL_RCC_OscConfig+0x3ba>
 800209c:	4b79      	ldr	r3, [pc, #484]	; (8002284 <HAL_RCC_OscConfig+0x570>)
 800209e:	681b      	ldr	r3, [r3, #0]
 80020a0:	4a78      	ldr	r2, [pc, #480]	; (8002284 <HAL_RCC_OscConfig+0x570>)
 80020a2:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 80020a6:	6013      	str	r3, [r2, #0]
 80020a8:	f7fe ff26 	bl	8000ef8 <HAL_GetTick>
 80020ac:	6138      	str	r0, [r7, #16]
 80020ae:	e008      	b.n	80020c2 <HAL_RCC_OscConfig+0x3ae>
 80020b0:	f7fe ff22 	bl	8000ef8 <HAL_GetTick>
 80020b4:	4602      	mov	r2, r0
 80020b6:	693b      	ldr	r3, [r7, #16]
 80020b8:	1ad3      	subs	r3, r2, r3
 80020ba:	2b02      	cmp	r3, #2
 80020bc:	d901      	bls.n	80020c2 <HAL_RCC_OscConfig+0x3ae>
 80020be:	2303      	movs	r3, #3
 80020c0:	e20d      	b.n	80024de <HAL_RCC_OscConfig+0x7ca>
 80020c2:	4b70      	ldr	r3, [pc, #448]	; (8002284 <HAL_RCC_OscConfig+0x570>)
 80020c4:	681b      	ldr	r3, [r3, #0]
 80020c6:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 80020ca:	2b00      	cmp	r3, #0
 80020cc:	d1f0      	bne.n	80020b0 <HAL_RCC_OscConfig+0x39c>
 80020ce:	687b      	ldr	r3, [r7, #4]
 80020d0:	681b      	ldr	r3, [r3, #0]
 80020d2:	f003 0308 	and.w	r3, r3, #8
 80020d6:	2b00      	cmp	r3, #0
 80020d8:	d03c      	beq.n	8002154 <HAL_RCC_OscConfig+0x440>
 80020da:	687b      	ldr	r3, [r7, #4]
 80020dc:	695b      	ldr	r3, [r3, #20]
 80020de:	2b00      	cmp	r3, #0
 80020e0:	d01c      	beq.n	800211c <HAL_RCC_OscConfig+0x408>
 80020e2:	4b68      	ldr	r3, [pc, #416]	; (8002284 <HAL_RCC_OscConfig+0x570>)
 80020e4:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 80020e8:	4a66      	ldr	r2, [pc, #408]	; (8002284 <HAL_RCC_OscConfig+0x570>)
 80020ea:	f043 0301 	orr.w	r3, r3, #1
 80020ee:	f8c2 3094 	str.w	r3, [r2, #148]	; 0x94
 80020f2:	f7fe ff01 	bl	8000ef8 <HAL_GetTick>
 80020f6:	6138      	str	r0, [r7, #16]
 80020f8:	e008      	b.n	800210c <HAL_RCC_OscConfig+0x3f8>
 80020fa:	f7fe fefd 	bl	8000ef8 <HAL_GetTick>
 80020fe:	4602      	mov	r2, r0
 8002100:	693b      	ldr	r3, [r7, #16]
 8002102:	1ad3      	subs	r3, r2, r3
 8002104:	2b02      	cmp	r3, #2
 8002106:	d901      	bls.n	800210c <HAL_RCC_OscConfig+0x3f8>
 8002108:	2303      	movs	r3, #3
 800210a:	e1e8      	b.n	80024de <HAL_RCC_OscConfig+0x7ca>
 800210c:	4b5d      	ldr	r3, [pc, #372]	; (8002284 <HAL_RCC_OscConfig+0x570>)
 800210e:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 8002112:	f003 0302 	and.w	r3, r3, #2
 8002116:	2b00      	cmp	r3, #0
 8002118:	d0ef      	beq.n	80020fa <HAL_RCC_OscConfig+0x3e6>
 800211a:	e01b      	b.n	8002154 <HAL_RCC_OscConfig+0x440>
 800211c:	4b59      	ldr	r3, [pc, #356]	; (8002284 <HAL_RCC_OscConfig+0x570>)
 800211e:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 8002122:	4a58      	ldr	r2, [pc, #352]	; (8002284 <HAL_RCC_OscConfig+0x570>)
 8002124:	f023 0301 	bic.w	r3, r3, #1
 8002128:	f8c2 3094 	str.w	r3, [r2, #148]	; 0x94
 800212c:	f7fe fee4 	bl	8000ef8 <HAL_GetTick>
 8002130:	6138      	str	r0, [r7, #16]
 8002132:	e008      	b.n	8002146 <HAL_RCC_OscConfig+0x432>
 8002134:	f7fe fee0 	bl	8000ef8 <HAL_GetTick>
 8002138:	4602      	mov	r2, r0
 800213a:	693b      	ldr	r3, [r7, #16]
 800213c:	1ad3      	subs	r3, r2, r3
 800213e:	2b02      	cmp	r3, #2
 8002140:	d901      	bls.n	8002146 <HAL_RCC_OscConfig+0x432>
 8002142:	2303      	movs	r3, #3
 8002144:	e1cb      	b.n	80024de <HAL_RCC_OscConfig+0x7ca>
 8002146:	4b4f      	ldr	r3, [pc, #316]	; (8002284 <HAL_RCC_OscConfig+0x570>)
 8002148:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 800214c:	f003 0302 	and.w	r3, r3, #2
 8002150:	2b00      	cmp	r3, #0
 8002152:	d1ef      	bne.n	8002134 <HAL_RCC_OscConfig+0x420>
 8002154:	687b      	ldr	r3, [r7, #4]
 8002156:	681b      	ldr	r3, [r3, #0]
 8002158:	f003 0304 	and.w	r3, r3, #4
 800215c:	2b00      	cmp	r3, #0
 800215e:	f000 80a5 	beq.w	80022ac <HAL_RCC_OscConfig+0x598>
 8002162:	2300      	movs	r3, #0
 8002164:	77fb      	strb	r3, [r7, #31]
 8002166:	4b47      	ldr	r3, [pc, #284]	; (8002284 <HAL_RCC_OscConfig+0x570>)
 8002168:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 800216a:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800216e:	2b00      	cmp	r3, #0
 8002170:	d10d      	bne.n	800218e <HAL_RCC_OscConfig+0x47a>
 8002172:	4b44      	ldr	r3, [pc, #272]	; (8002284 <HAL_RCC_OscConfig+0x570>)
 8002174:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8002176:	4a43      	ldr	r2, [pc, #268]	; (8002284 <HAL_RCC_OscConfig+0x570>)
 8002178:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 800217c:	6593      	str	r3, [r2, #88]	; 0x58
 800217e:	4b41      	ldr	r3, [pc, #260]	; (8002284 <HAL_RCC_OscConfig+0x570>)
 8002180:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8002182:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8002186:	60bb      	str	r3, [r7, #8]
 8002188:	68bb      	ldr	r3, [r7, #8]
 800218a:	2301      	movs	r3, #1
 800218c:	77fb      	strb	r3, [r7, #31]
 800218e:	4b3e      	ldr	r3, [pc, #248]	; (8002288 <HAL_RCC_OscConfig+0x574>)
 8002190:	681b      	ldr	r3, [r3, #0]
 8002192:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8002196:	2b00      	cmp	r3, #0
 8002198:	d118      	bne.n	80021cc <HAL_RCC_OscConfig+0x4b8>
 800219a:	4b3b      	ldr	r3, [pc, #236]	; (8002288 <HAL_RCC_OscConfig+0x574>)
 800219c:	681b      	ldr	r3, [r3, #0]
 800219e:	4a3a      	ldr	r2, [pc, #232]	; (8002288 <HAL_RCC_OscConfig+0x574>)
 80021a0:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80021a4:	6013      	str	r3, [r2, #0]
 80021a6:	f7fe fea7 	bl	8000ef8 <HAL_GetTick>
 80021aa:	6138      	str	r0, [r7, #16]
 80021ac:	e008      	b.n	80021c0 <HAL_RCC_OscConfig+0x4ac>
 80021ae:	f7fe fea3 	bl	8000ef8 <HAL_GetTick>
 80021b2:	4602      	mov	r2, r0
 80021b4:	693b      	ldr	r3, [r7, #16]
 80021b6:	1ad3      	subs	r3, r2, r3
 80021b8:	2b02      	cmp	r3, #2
 80021ba:	d901      	bls.n	80021c0 <HAL_RCC_OscConfig+0x4ac>
 80021bc:	2303      	movs	r3, #3
 80021be:	e18e      	b.n	80024de <HAL_RCC_OscConfig+0x7ca>
 80021c0:	4b31      	ldr	r3, [pc, #196]	; (8002288 <HAL_RCC_OscConfig+0x574>)
 80021c2:	681b      	ldr	r3, [r3, #0]
 80021c4:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80021c8:	2b00      	cmp	r3, #0
 80021ca:	d0f0      	beq.n	80021ae <HAL_RCC_OscConfig+0x49a>
 80021cc:	687b      	ldr	r3, [r7, #4]
 80021ce:	689b      	ldr	r3, [r3, #8]
 80021d0:	2b01      	cmp	r3, #1
 80021d2:	d108      	bne.n	80021e6 <HAL_RCC_OscConfig+0x4d2>
 80021d4:	4b2b      	ldr	r3, [pc, #172]	; (8002284 <HAL_RCC_OscConfig+0x570>)
 80021d6:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 80021da:	4a2a      	ldr	r2, [pc, #168]	; (8002284 <HAL_RCC_OscConfig+0x570>)
 80021dc:	f043 0301 	orr.w	r3, r3, #1
 80021e0:	f8c2 3090 	str.w	r3, [r2, #144]	; 0x90
 80021e4:	e024      	b.n	8002230 <HAL_RCC_OscConfig+0x51c>
 80021e6:	687b      	ldr	r3, [r7, #4]
 80021e8:	689b      	ldr	r3, [r3, #8]
 80021ea:	2b05      	cmp	r3, #5
 80021ec:	d110      	bne.n	8002210 <HAL_RCC_OscConfig+0x4fc>
 80021ee:	4b25      	ldr	r3, [pc, #148]	; (8002284 <HAL_RCC_OscConfig+0x570>)
 80021f0:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 80021f4:	4a23      	ldr	r2, [pc, #140]	; (8002284 <HAL_RCC_OscConfig+0x570>)
 80021f6:	f043 0304 	orr.w	r3, r3, #4
 80021fa:	f8c2 3090 	str.w	r3, [r2, #144]	; 0x90
 80021fe:	4b21      	ldr	r3, [pc, #132]	; (8002284 <HAL_RCC_OscConfig+0x570>)
 8002200:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8002204:	4a1f      	ldr	r2, [pc, #124]	; (8002284 <HAL_RCC_OscConfig+0x570>)
 8002206:	f043 0301 	orr.w	r3, r3, #1
 800220a:	f8c2 3090 	str.w	r3, [r2, #144]	; 0x90
 800220e:	e00f      	b.n	8002230 <HAL_RCC_OscConfig+0x51c>
 8002210:	4b1c      	ldr	r3, [pc, #112]	; (8002284 <HAL_RCC_OscConfig+0x570>)
 8002212:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8002216:	4a1b      	ldr	r2, [pc, #108]	; (8002284 <HAL_RCC_OscConfig+0x570>)
 8002218:	f023 0301 	bic.w	r3, r3, #1
 800221c:	f8c2 3090 	str.w	r3, [r2, #144]	; 0x90
 8002220:	4b18      	ldr	r3, [pc, #96]	; (8002284 <HAL_RCC_OscConfig+0x570>)
 8002222:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8002226:	4a17      	ldr	r2, [pc, #92]	; (8002284 <HAL_RCC_OscConfig+0x570>)
 8002228:	f023 0304 	bic.w	r3, r3, #4
 800222c:	f8c2 3090 	str.w	r3, [r2, #144]	; 0x90
 8002230:	687b      	ldr	r3, [r7, #4]
 8002232:	689b      	ldr	r3, [r3, #8]
 8002234:	2b00      	cmp	r3, #0
 8002236:	d016      	beq.n	8002266 <HAL_RCC_OscConfig+0x552>
 8002238:	f7fe fe5e 	bl	8000ef8 <HAL_GetTick>
 800223c:	6138      	str	r0, [r7, #16]
 800223e:	e00a      	b.n	8002256 <HAL_RCC_OscConfig+0x542>
 8002240:	f7fe fe5a 	bl	8000ef8 <HAL_GetTick>
 8002244:	4602      	mov	r2, r0
 8002246:	693b      	ldr	r3, [r7, #16]
 8002248:	1ad3      	subs	r3, r2, r3
 800224a:	f241 3288 	movw	r2, #5000	; 0x1388
 800224e:	4293      	cmp	r3, r2
 8002250:	d901      	bls.n	8002256 <HAL_RCC_OscConfig+0x542>
 8002252:	2303      	movs	r3, #3
 8002254:	e143      	b.n	80024de <HAL_RCC_OscConfig+0x7ca>
 8002256:	4b0b      	ldr	r3, [pc, #44]	; (8002284 <HAL_RCC_OscConfig+0x570>)
 8002258:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 800225c:	f003 0302 	and.w	r3, r3, #2
 8002260:	2b00      	cmp	r3, #0
 8002262:	d0ed      	beq.n	8002240 <HAL_RCC_OscConfig+0x52c>
 8002264:	e019      	b.n	800229a <HAL_RCC_OscConfig+0x586>
 8002266:	f7fe fe47 	bl	8000ef8 <HAL_GetTick>
 800226a:	6138      	str	r0, [r7, #16]
 800226c:	e00e      	b.n	800228c <HAL_RCC_OscConfig+0x578>
 800226e:	f7fe fe43 	bl	8000ef8 <HAL_GetTick>
 8002272:	4602      	mov	r2, r0
 8002274:	693b      	ldr	r3, [r7, #16]
 8002276:	1ad3      	subs	r3, r2, r3
 8002278:	f241 3288 	movw	r2, #5000	; 0x1388
 800227c:	4293      	cmp	r3, r2
 800227e:	d905      	bls.n	800228c <HAL_RCC_OscConfig+0x578>
 8002280:	2303      	movs	r3, #3
 8002282:	e12c      	b.n	80024de <HAL_RCC_OscConfig+0x7ca>
 8002284:	40021000 	.word	0x40021000
 8002288:	40007000 	.word	0x40007000
 800228c:	4b96      	ldr	r3, [pc, #600]	; (80024e8 <HAL_RCC_OscConfig+0x7d4>)
 800228e:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8002292:	f003 0302 	and.w	r3, r3, #2
 8002296:	2b00      	cmp	r3, #0
 8002298:	d1e9      	bne.n	800226e <HAL_RCC_OscConfig+0x55a>
 800229a:	7ffb      	ldrb	r3, [r7, #31]
 800229c:	2b01      	cmp	r3, #1
 800229e:	d105      	bne.n	80022ac <HAL_RCC_OscConfig+0x598>
 80022a0:	4b91      	ldr	r3, [pc, #580]	; (80024e8 <HAL_RCC_OscConfig+0x7d4>)
 80022a2:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 80022a4:	4a90      	ldr	r2, [pc, #576]	; (80024e8 <HAL_RCC_OscConfig+0x7d4>)
 80022a6:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 80022aa:	6593      	str	r3, [r2, #88]	; 0x58
 80022ac:	687b      	ldr	r3, [r7, #4]
 80022ae:	681b      	ldr	r3, [r3, #0]
 80022b0:	f003 0320 	and.w	r3, r3, #32
 80022b4:	2b00      	cmp	r3, #0
 80022b6:	d03c      	beq.n	8002332 <HAL_RCC_OscConfig+0x61e>
 80022b8:	687b      	ldr	r3, [r7, #4]
 80022ba:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80022bc:	2b00      	cmp	r3, #0
 80022be:	d01c      	beq.n	80022fa <HAL_RCC_OscConfig+0x5e6>
 80022c0:	4b89      	ldr	r3, [pc, #548]	; (80024e8 <HAL_RCC_OscConfig+0x7d4>)
 80022c2:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
 80022c6:	4a88      	ldr	r2, [pc, #544]	; (80024e8 <HAL_RCC_OscConfig+0x7d4>)
 80022c8:	f043 0301 	orr.w	r3, r3, #1
 80022cc:	f8c2 3098 	str.w	r3, [r2, #152]	; 0x98
 80022d0:	f7fe fe12 	bl	8000ef8 <HAL_GetTick>
 80022d4:	6138      	str	r0, [r7, #16]
 80022d6:	e008      	b.n	80022ea <HAL_RCC_OscConfig+0x5d6>
 80022d8:	f7fe fe0e 	bl	8000ef8 <HAL_GetTick>
 80022dc:	4602      	mov	r2, r0
 80022de:	693b      	ldr	r3, [r7, #16]
 80022e0:	1ad3      	subs	r3, r2, r3
 80022e2:	2b02      	cmp	r3, #2
 80022e4:	d901      	bls.n	80022ea <HAL_RCC_OscConfig+0x5d6>
 80022e6:	2303      	movs	r3, #3
 80022e8:	e0f9      	b.n	80024de <HAL_RCC_OscConfig+0x7ca>
 80022ea:	4b7f      	ldr	r3, [pc, #508]	; (80024e8 <HAL_RCC_OscConfig+0x7d4>)
 80022ec:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
 80022f0:	f003 0302 	and.w	r3, r3, #2
 80022f4:	2b00      	cmp	r3, #0
 80022f6:	d0ef      	beq.n	80022d8 <HAL_RCC_OscConfig+0x5c4>
 80022f8:	e01b      	b.n	8002332 <HAL_RCC_OscConfig+0x61e>
 80022fa:	4b7b      	ldr	r3, [pc, #492]	; (80024e8 <HAL_RCC_OscConfig+0x7d4>)
 80022fc:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
 8002300:	4a79      	ldr	r2, [pc, #484]	; (80024e8 <HAL_RCC_OscConfig+0x7d4>)
 8002302:	f023 0301 	bic.w	r3, r3, #1
 8002306:	f8c2 3098 	str.w	r3, [r2, #152]	; 0x98
 800230a:	f7fe fdf5 	bl	8000ef8 <HAL_GetTick>
 800230e:	6138      	str	r0, [r7, #16]
 8002310:	e008      	b.n	8002324 <HAL_RCC_OscConfig+0x610>
 8002312:	f7fe fdf1 	bl	8000ef8 <HAL_GetTick>
 8002316:	4602      	mov	r2, r0
 8002318:	693b      	ldr	r3, [r7, #16]
 800231a:	1ad3      	subs	r3, r2, r3
 800231c:	2b02      	cmp	r3, #2
 800231e:	d901      	bls.n	8002324 <HAL_RCC_OscConfig+0x610>
 8002320:	2303      	movs	r3, #3
 8002322:	e0dc      	b.n	80024de <HAL_RCC_OscConfig+0x7ca>
 8002324:	4b70      	ldr	r3, [pc, #448]	; (80024e8 <HAL_RCC_OscConfig+0x7d4>)
 8002326:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
 800232a:	f003 0302 	and.w	r3, r3, #2
 800232e:	2b00      	cmp	r3, #0
 8002330:	d1ef      	bne.n	8002312 <HAL_RCC_OscConfig+0x5fe>
 8002332:	687b      	ldr	r3, [r7, #4]
 8002334:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8002336:	2b00      	cmp	r3, #0
 8002338:	f000 80d0 	beq.w	80024dc <HAL_RCC_OscConfig+0x7c8>
 800233c:	69bb      	ldr	r3, [r7, #24]
 800233e:	2b0c      	cmp	r3, #12
 8002340:	f000 808d 	beq.w	800245e <HAL_RCC_OscConfig+0x74a>
 8002344:	687b      	ldr	r3, [r7, #4]
 8002346:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8002348:	2b02      	cmp	r3, #2
 800234a:	d15a      	bne.n	8002402 <HAL_RCC_OscConfig+0x6ee>
 800234c:	4b66      	ldr	r3, [pc, #408]	; (80024e8 <HAL_RCC_OscConfig+0x7d4>)
 800234e:	681b      	ldr	r3, [r3, #0]
 8002350:	4a65      	ldr	r2, [pc, #404]	; (80024e8 <HAL_RCC_OscConfig+0x7d4>)
 8002352:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
 8002356:	6013      	str	r3, [r2, #0]
 8002358:	f7fe fdce 	bl	8000ef8 <HAL_GetTick>
 800235c:	6138      	str	r0, [r7, #16]
 800235e:	e008      	b.n	8002372 <HAL_RCC_OscConfig+0x65e>
 8002360:	f7fe fdca 	bl	8000ef8 <HAL_GetTick>
 8002364:	4602      	mov	r2, r0
 8002366:	693b      	ldr	r3, [r7, #16]
 8002368:	1ad3      	subs	r3, r2, r3
 800236a:	2b02      	cmp	r3, #2
 800236c:	d901      	bls.n	8002372 <HAL_RCC_OscConfig+0x65e>
 800236e:	2303      	movs	r3, #3
 8002370:	e0b5      	b.n	80024de <HAL_RCC_OscConfig+0x7ca>
 8002372:	4b5d      	ldr	r3, [pc, #372]	; (80024e8 <HAL_RCC_OscConfig+0x7d4>)
 8002374:	681b      	ldr	r3, [r3, #0]
 8002376:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 800237a:	2b00      	cmp	r3, #0
 800237c:	d1f0      	bne.n	8002360 <HAL_RCC_OscConfig+0x64c>
 800237e:	4b5a      	ldr	r3, [pc, #360]	; (80024e8 <HAL_RCC_OscConfig+0x7d4>)
 8002380:	68da      	ldr	r2, [r3, #12]
 8002382:	4b5a      	ldr	r3, [pc, #360]	; (80024ec <HAL_RCC_OscConfig+0x7d8>)
 8002384:	4013      	ands	r3, r2
 8002386:	687a      	ldr	r2, [r7, #4]
 8002388:	6ad1      	ldr	r1, [r2, #44]	; 0x2c
 800238a:	687a      	ldr	r2, [r7, #4]
 800238c:	6b12      	ldr	r2, [r2, #48]	; 0x30
 800238e:	3a01      	subs	r2, #1
 8002390:	0112      	lsls	r2, r2, #4
 8002392:	4311      	orrs	r1, r2
 8002394:	687a      	ldr	r2, [r7, #4]
 8002396:	6b52      	ldr	r2, [r2, #52]	; 0x34
 8002398:	0212      	lsls	r2, r2, #8
 800239a:	4311      	orrs	r1, r2
 800239c:	687a      	ldr	r2, [r7, #4]
 800239e:	6bd2      	ldr	r2, [r2, #60]	; 0x3c
 80023a0:	0852      	lsrs	r2, r2, #1
 80023a2:	3a01      	subs	r2, #1
 80023a4:	0552      	lsls	r2, r2, #21
 80023a6:	4311      	orrs	r1, r2
 80023a8:	687a      	ldr	r2, [r7, #4]
 80023aa:	6c12      	ldr	r2, [r2, #64]	; 0x40
 80023ac:	0852      	lsrs	r2, r2, #1
 80023ae:	3a01      	subs	r2, #1
 80023b0:	0652      	lsls	r2, r2, #25
 80023b2:	4311      	orrs	r1, r2
 80023b4:	687a      	ldr	r2, [r7, #4]
 80023b6:	6b92      	ldr	r2, [r2, #56]	; 0x38
 80023b8:	06d2      	lsls	r2, r2, #27
 80023ba:	430a      	orrs	r2, r1
 80023bc:	494a      	ldr	r1, [pc, #296]	; (80024e8 <HAL_RCC_OscConfig+0x7d4>)
 80023be:	4313      	orrs	r3, r2
 80023c0:	60cb      	str	r3, [r1, #12]
 80023c2:	4b49      	ldr	r3, [pc, #292]	; (80024e8 <HAL_RCC_OscConfig+0x7d4>)
 80023c4:	681b      	ldr	r3, [r3, #0]
 80023c6:	4a48      	ldr	r2, [pc, #288]	; (80024e8 <HAL_RCC_OscConfig+0x7d4>)
 80023c8:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 80023cc:	6013      	str	r3, [r2, #0]
 80023ce:	4b46      	ldr	r3, [pc, #280]	; (80024e8 <HAL_RCC_OscConfig+0x7d4>)
 80023d0:	68db      	ldr	r3, [r3, #12]
 80023d2:	4a45      	ldr	r2, [pc, #276]	; (80024e8 <HAL_RCC_OscConfig+0x7d4>)
 80023d4:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 80023d8:	60d3      	str	r3, [r2, #12]
 80023da:	f7fe fd8d 	bl	8000ef8 <HAL_GetTick>
 80023de:	6138      	str	r0, [r7, #16]
 80023e0:	e008      	b.n	80023f4 <HAL_RCC_OscConfig+0x6e0>
 80023e2:	f7fe fd89 	bl	8000ef8 <HAL_GetTick>
 80023e6:	4602      	mov	r2, r0
 80023e8:	693b      	ldr	r3, [r7, #16]
 80023ea:	1ad3      	subs	r3, r2, r3
 80023ec:	2b02      	cmp	r3, #2
 80023ee:	d901      	bls.n	80023f4 <HAL_RCC_OscConfig+0x6e0>
 80023f0:	2303      	movs	r3, #3
 80023f2:	e074      	b.n	80024de <HAL_RCC_OscConfig+0x7ca>
 80023f4:	4b3c      	ldr	r3, [pc, #240]	; (80024e8 <HAL_RCC_OscConfig+0x7d4>)
 80023f6:	681b      	ldr	r3, [r3, #0]
 80023f8:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 80023fc:	2b00      	cmp	r3, #0
 80023fe:	d0f0      	beq.n	80023e2 <HAL_RCC_OscConfig+0x6ce>
 8002400:	e06c      	b.n	80024dc <HAL_RCC_OscConfig+0x7c8>
 8002402:	4b39      	ldr	r3, [pc, #228]	; (80024e8 <HAL_RCC_OscConfig+0x7d4>)
 8002404:	681b      	ldr	r3, [r3, #0]
 8002406:	4a38      	ldr	r2, [pc, #224]	; (80024e8 <HAL_RCC_OscConfig+0x7d4>)
 8002408:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
 800240c:	6013      	str	r3, [r2, #0]
 800240e:	4b36      	ldr	r3, [pc, #216]	; (80024e8 <HAL_RCC_OscConfig+0x7d4>)
 8002410:	681b      	ldr	r3, [r3, #0]
 8002412:	f003 6300 	and.w	r3, r3, #134217728	; 0x8000000
 8002416:	2b00      	cmp	r3, #0
 8002418:	d105      	bne.n	8002426 <HAL_RCC_OscConfig+0x712>
 800241a:	4b33      	ldr	r3, [pc, #204]	; (80024e8 <HAL_RCC_OscConfig+0x7d4>)
 800241c:	68db      	ldr	r3, [r3, #12]
 800241e:	4a32      	ldr	r2, [pc, #200]	; (80024e8 <HAL_RCC_OscConfig+0x7d4>)
 8002420:	f023 0303 	bic.w	r3, r3, #3
 8002424:	60d3      	str	r3, [r2, #12]
 8002426:	4b30      	ldr	r3, [pc, #192]	; (80024e8 <HAL_RCC_OscConfig+0x7d4>)
 8002428:	68db      	ldr	r3, [r3, #12]
 800242a:	4a2f      	ldr	r2, [pc, #188]	; (80024e8 <HAL_RCC_OscConfig+0x7d4>)
 800242c:	f023 7388 	bic.w	r3, r3, #17825792	; 0x1100000
 8002430:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8002434:	60d3      	str	r3, [r2, #12]
 8002436:	f7fe fd5f 	bl	8000ef8 <HAL_GetTick>
 800243a:	6138      	str	r0, [r7, #16]
 800243c:	e008      	b.n	8002450 <HAL_RCC_OscConfig+0x73c>
 800243e:	f7fe fd5b 	bl	8000ef8 <HAL_GetTick>
 8002442:	4602      	mov	r2, r0
 8002444:	693b      	ldr	r3, [r7, #16]
 8002446:	1ad3      	subs	r3, r2, r3
 8002448:	2b02      	cmp	r3, #2
 800244a:	d901      	bls.n	8002450 <HAL_RCC_OscConfig+0x73c>
 800244c:	2303      	movs	r3, #3
 800244e:	e046      	b.n	80024de <HAL_RCC_OscConfig+0x7ca>
 8002450:	4b25      	ldr	r3, [pc, #148]	; (80024e8 <HAL_RCC_OscConfig+0x7d4>)
 8002452:	681b      	ldr	r3, [r3, #0]
 8002454:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8002458:	2b00      	cmp	r3, #0
 800245a:	d1f0      	bne.n	800243e <HAL_RCC_OscConfig+0x72a>
 800245c:	e03e      	b.n	80024dc <HAL_RCC_OscConfig+0x7c8>
 800245e:	687b      	ldr	r3, [r7, #4]
 8002460:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8002462:	2b01      	cmp	r3, #1
 8002464:	d101      	bne.n	800246a <HAL_RCC_OscConfig+0x756>
 8002466:	2301      	movs	r3, #1
 8002468:	e039      	b.n	80024de <HAL_RCC_OscConfig+0x7ca>
 800246a:	4b1f      	ldr	r3, [pc, #124]	; (80024e8 <HAL_RCC_OscConfig+0x7d4>)
 800246c:	68db      	ldr	r3, [r3, #12]
 800246e:	617b      	str	r3, [r7, #20]
 8002470:	697b      	ldr	r3, [r7, #20]
 8002472:	f003 0203 	and.w	r2, r3, #3
 8002476:	687b      	ldr	r3, [r7, #4]
 8002478:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800247a:	429a      	cmp	r2, r3
 800247c:	d12c      	bne.n	80024d8 <HAL_RCC_OscConfig+0x7c4>
 800247e:	697b      	ldr	r3, [r7, #20]
 8002480:	f003 0270 	and.w	r2, r3, #112	; 0x70
 8002484:	687b      	ldr	r3, [r7, #4]
 8002486:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002488:	3b01      	subs	r3, #1
 800248a:	011b      	lsls	r3, r3, #4
 800248c:	429a      	cmp	r2, r3
 800248e:	d123      	bne.n	80024d8 <HAL_RCC_OscConfig+0x7c4>
 8002490:	697b      	ldr	r3, [r7, #20]
 8002492:	f403 42fe 	and.w	r2, r3, #32512	; 0x7f00
 8002496:	687b      	ldr	r3, [r7, #4]
 8002498:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800249a:	021b      	lsls	r3, r3, #8
 800249c:	429a      	cmp	r2, r3
 800249e:	d11b      	bne.n	80024d8 <HAL_RCC_OscConfig+0x7c4>
 80024a0:	697b      	ldr	r3, [r7, #20]
 80024a2:	f003 4278 	and.w	r2, r3, #4160749568	; 0xf8000000
 80024a6:	687b      	ldr	r3, [r7, #4]
 80024a8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80024aa:	06db      	lsls	r3, r3, #27
 80024ac:	429a      	cmp	r2, r3
 80024ae:	d113      	bne.n	80024d8 <HAL_RCC_OscConfig+0x7c4>
 80024b0:	697b      	ldr	r3, [r7, #20]
 80024b2:	f403 02c0 	and.w	r2, r3, #6291456	; 0x600000
 80024b6:	687b      	ldr	r3, [r7, #4]
 80024b8:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80024ba:	085b      	lsrs	r3, r3, #1
 80024bc:	3b01      	subs	r3, #1
 80024be:	055b      	lsls	r3, r3, #21
 80024c0:	429a      	cmp	r2, r3
 80024c2:	d109      	bne.n	80024d8 <HAL_RCC_OscConfig+0x7c4>
 80024c4:	697b      	ldr	r3, [r7, #20]
 80024c6:	f003 62c0 	and.w	r2, r3, #100663296	; 0x6000000
 80024ca:	687b      	ldr	r3, [r7, #4]
 80024cc:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80024ce:	085b      	lsrs	r3, r3, #1
 80024d0:	3b01      	subs	r3, #1
 80024d2:	065b      	lsls	r3, r3, #25
 80024d4:	429a      	cmp	r2, r3
 80024d6:	d001      	beq.n	80024dc <HAL_RCC_OscConfig+0x7c8>
 80024d8:	2301      	movs	r3, #1
 80024da:	e000      	b.n	80024de <HAL_RCC_OscConfig+0x7ca>
 80024dc:	2300      	movs	r3, #0
 80024de:	4618      	mov	r0, r3
 80024e0:	3720      	adds	r7, #32
 80024e2:	46bd      	mov	sp, r7
 80024e4:	bd80      	pop	{r7, pc}
 80024e6:	bf00      	nop
 80024e8:	40021000 	.word	0x40021000
 80024ec:	019d808c 	.word	0x019d808c

080024f0 <HAL_RCC_ClockConfig>:
 80024f0:	b580      	push	{r7, lr}
 80024f2:	b084      	sub	sp, #16
 80024f4:	af00      	add	r7, sp, #0
 80024f6:	6078      	str	r0, [r7, #4]
 80024f8:	6039      	str	r1, [r7, #0]
 80024fa:	687b      	ldr	r3, [r7, #4]
 80024fc:	2b00      	cmp	r3, #0
 80024fe:	d101      	bne.n	8002504 <HAL_RCC_ClockConfig+0x14>
 8002500:	2301      	movs	r3, #1
 8002502:	e0c8      	b.n	8002696 <HAL_RCC_ClockConfig+0x1a6>
 8002504:	4b66      	ldr	r3, [pc, #408]	; (80026a0 <HAL_RCC_ClockConfig+0x1b0>)
 8002506:	681b      	ldr	r3, [r3, #0]
 8002508:	f003 0307 	and.w	r3, r3, #7
 800250c:	683a      	ldr	r2, [r7, #0]
 800250e:	429a      	cmp	r2, r3
 8002510:	d910      	bls.n	8002534 <HAL_RCC_ClockConfig+0x44>
 8002512:	4b63      	ldr	r3, [pc, #396]	; (80026a0 <HAL_RCC_ClockConfig+0x1b0>)
 8002514:	681b      	ldr	r3, [r3, #0]
 8002516:	f023 0207 	bic.w	r2, r3, #7
 800251a:	4961      	ldr	r1, [pc, #388]	; (80026a0 <HAL_RCC_ClockConfig+0x1b0>)
 800251c:	683b      	ldr	r3, [r7, #0]
 800251e:	4313      	orrs	r3, r2
 8002520:	600b      	str	r3, [r1, #0]
 8002522:	4b5f      	ldr	r3, [pc, #380]	; (80026a0 <HAL_RCC_ClockConfig+0x1b0>)
 8002524:	681b      	ldr	r3, [r3, #0]
 8002526:	f003 0307 	and.w	r3, r3, #7
 800252a:	683a      	ldr	r2, [r7, #0]
 800252c:	429a      	cmp	r2, r3
 800252e:	d001      	beq.n	8002534 <HAL_RCC_ClockConfig+0x44>
 8002530:	2301      	movs	r3, #1
 8002532:	e0b0      	b.n	8002696 <HAL_RCC_ClockConfig+0x1a6>
 8002534:	687b      	ldr	r3, [r7, #4]
 8002536:	681b      	ldr	r3, [r3, #0]
 8002538:	f003 0301 	and.w	r3, r3, #1
 800253c:	2b00      	cmp	r3, #0
 800253e:	d04c      	beq.n	80025da <HAL_RCC_ClockConfig+0xea>
 8002540:	687b      	ldr	r3, [r7, #4]
 8002542:	685b      	ldr	r3, [r3, #4]
 8002544:	2b03      	cmp	r3, #3
 8002546:	d107      	bne.n	8002558 <HAL_RCC_ClockConfig+0x68>
 8002548:	4b56      	ldr	r3, [pc, #344]	; (80026a4 <HAL_RCC_ClockConfig+0x1b4>)
 800254a:	681b      	ldr	r3, [r3, #0]
 800254c:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8002550:	2b00      	cmp	r3, #0
 8002552:	d121      	bne.n	8002598 <HAL_RCC_ClockConfig+0xa8>
 8002554:	2301      	movs	r3, #1
 8002556:	e09e      	b.n	8002696 <HAL_RCC_ClockConfig+0x1a6>
 8002558:	687b      	ldr	r3, [r7, #4]
 800255a:	685b      	ldr	r3, [r3, #4]
 800255c:	2b02      	cmp	r3, #2
 800255e:	d107      	bne.n	8002570 <HAL_RCC_ClockConfig+0x80>
 8002560:	4b50      	ldr	r3, [pc, #320]	; (80026a4 <HAL_RCC_ClockConfig+0x1b4>)
 8002562:	681b      	ldr	r3, [r3, #0]
 8002564:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8002568:	2b00      	cmp	r3, #0
 800256a:	d115      	bne.n	8002598 <HAL_RCC_ClockConfig+0xa8>
 800256c:	2301      	movs	r3, #1
 800256e:	e092      	b.n	8002696 <HAL_RCC_ClockConfig+0x1a6>
 8002570:	687b      	ldr	r3, [r7, #4]
 8002572:	685b      	ldr	r3, [r3, #4]
 8002574:	2b00      	cmp	r3, #0
 8002576:	d107      	bne.n	8002588 <HAL_RCC_ClockConfig+0x98>
 8002578:	4b4a      	ldr	r3, [pc, #296]	; (80026a4 <HAL_RCC_ClockConfig+0x1b4>)
 800257a:	681b      	ldr	r3, [r3, #0]
 800257c:	f003 0302 	and.w	r3, r3, #2
 8002580:	2b00      	cmp	r3, #0
 8002582:	d109      	bne.n	8002598 <HAL_RCC_ClockConfig+0xa8>
 8002584:	2301      	movs	r3, #1
 8002586:	e086      	b.n	8002696 <HAL_RCC_ClockConfig+0x1a6>
 8002588:	4b46      	ldr	r3, [pc, #280]	; (80026a4 <HAL_RCC_ClockConfig+0x1b4>)
 800258a:	681b      	ldr	r3, [r3, #0]
 800258c:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 8002590:	2b00      	cmp	r3, #0
 8002592:	d101      	bne.n	8002598 <HAL_RCC_ClockConfig+0xa8>
 8002594:	2301      	movs	r3, #1
 8002596:	e07e      	b.n	8002696 <HAL_RCC_ClockConfig+0x1a6>
 8002598:	4b42      	ldr	r3, [pc, #264]	; (80026a4 <HAL_RCC_ClockConfig+0x1b4>)
 800259a:	689b      	ldr	r3, [r3, #8]
 800259c:	f023 0203 	bic.w	r2, r3, #3
 80025a0:	687b      	ldr	r3, [r7, #4]
 80025a2:	685b      	ldr	r3, [r3, #4]
 80025a4:	493f      	ldr	r1, [pc, #252]	; (80026a4 <HAL_RCC_ClockConfig+0x1b4>)
 80025a6:	4313      	orrs	r3, r2
 80025a8:	608b      	str	r3, [r1, #8]
 80025aa:	f7fe fca5 	bl	8000ef8 <HAL_GetTick>
 80025ae:	60f8      	str	r0, [r7, #12]
 80025b0:	e00a      	b.n	80025c8 <HAL_RCC_ClockConfig+0xd8>
 80025b2:	f7fe fca1 	bl	8000ef8 <HAL_GetTick>
 80025b6:	4602      	mov	r2, r0
 80025b8:	68fb      	ldr	r3, [r7, #12]
 80025ba:	1ad3      	subs	r3, r2, r3
 80025bc:	f241 3288 	movw	r2, #5000	; 0x1388
 80025c0:	4293      	cmp	r3, r2
 80025c2:	d901      	bls.n	80025c8 <HAL_RCC_ClockConfig+0xd8>
 80025c4:	2303      	movs	r3, #3
 80025c6:	e066      	b.n	8002696 <HAL_RCC_ClockConfig+0x1a6>
 80025c8:	4b36      	ldr	r3, [pc, #216]	; (80026a4 <HAL_RCC_ClockConfig+0x1b4>)
 80025ca:	689b      	ldr	r3, [r3, #8]
 80025cc:	f003 020c 	and.w	r2, r3, #12
 80025d0:	687b      	ldr	r3, [r7, #4]
 80025d2:	685b      	ldr	r3, [r3, #4]
 80025d4:	009b      	lsls	r3, r3, #2
 80025d6:	429a      	cmp	r2, r3
 80025d8:	d1eb      	bne.n	80025b2 <HAL_RCC_ClockConfig+0xc2>
 80025da:	687b      	ldr	r3, [r7, #4]
 80025dc:	681b      	ldr	r3, [r3, #0]
 80025de:	f003 0302 	and.w	r3, r3, #2
 80025e2:	2b00      	cmp	r3, #0
 80025e4:	d008      	beq.n	80025f8 <HAL_RCC_ClockConfig+0x108>
 80025e6:	4b2f      	ldr	r3, [pc, #188]	; (80026a4 <HAL_RCC_ClockConfig+0x1b4>)
 80025e8:	689b      	ldr	r3, [r3, #8]
 80025ea:	f023 02f0 	bic.w	r2, r3, #240	; 0xf0
 80025ee:	687b      	ldr	r3, [r7, #4]
 80025f0:	689b      	ldr	r3, [r3, #8]
 80025f2:	492c      	ldr	r1, [pc, #176]	; (80026a4 <HAL_RCC_ClockConfig+0x1b4>)
 80025f4:	4313      	orrs	r3, r2
 80025f6:	608b      	str	r3, [r1, #8]
 80025f8:	4b29      	ldr	r3, [pc, #164]	; (80026a0 <HAL_RCC_ClockConfig+0x1b0>)
 80025fa:	681b      	ldr	r3, [r3, #0]
 80025fc:	f003 0307 	and.w	r3, r3, #7
 8002600:	683a      	ldr	r2, [r7, #0]
 8002602:	429a      	cmp	r2, r3
 8002604:	d210      	bcs.n	8002628 <HAL_RCC_ClockConfig+0x138>
 8002606:	4b26      	ldr	r3, [pc, #152]	; (80026a0 <HAL_RCC_ClockConfig+0x1b0>)
 8002608:	681b      	ldr	r3, [r3, #0]
 800260a:	f023 0207 	bic.w	r2, r3, #7
 800260e:	4924      	ldr	r1, [pc, #144]	; (80026a0 <HAL_RCC_ClockConfig+0x1b0>)
 8002610:	683b      	ldr	r3, [r7, #0]
 8002612:	4313      	orrs	r3, r2
 8002614:	600b      	str	r3, [r1, #0]
 8002616:	4b22      	ldr	r3, [pc, #136]	; (80026a0 <HAL_RCC_ClockConfig+0x1b0>)
 8002618:	681b      	ldr	r3, [r3, #0]
 800261a:	f003 0307 	and.w	r3, r3, #7
 800261e:	683a      	ldr	r2, [r7, #0]
 8002620:	429a      	cmp	r2, r3
 8002622:	d001      	beq.n	8002628 <HAL_RCC_ClockConfig+0x138>
 8002624:	2301      	movs	r3, #1
 8002626:	e036      	b.n	8002696 <HAL_RCC_ClockConfig+0x1a6>
 8002628:	687b      	ldr	r3, [r7, #4]
 800262a:	681b      	ldr	r3, [r3, #0]
 800262c:	f003 0304 	and.w	r3, r3, #4
 8002630:	2b00      	cmp	r3, #0
 8002632:	d008      	beq.n	8002646 <HAL_RCC_ClockConfig+0x156>
 8002634:	4b1b      	ldr	r3, [pc, #108]	; (80026a4 <HAL_RCC_ClockConfig+0x1b4>)
 8002636:	689b      	ldr	r3, [r3, #8]
 8002638:	f423 62e0 	bic.w	r2, r3, #1792	; 0x700
 800263c:	687b      	ldr	r3, [r7, #4]
 800263e:	68db      	ldr	r3, [r3, #12]
 8002640:	4918      	ldr	r1, [pc, #96]	; (80026a4 <HAL_RCC_ClockConfig+0x1b4>)
 8002642:	4313      	orrs	r3, r2
 8002644:	608b      	str	r3, [r1, #8]
 8002646:	687b      	ldr	r3, [r7, #4]
 8002648:	681b      	ldr	r3, [r3, #0]
 800264a:	f003 0308 	and.w	r3, r3, #8
 800264e:	2b00      	cmp	r3, #0
 8002650:	d009      	beq.n	8002666 <HAL_RCC_ClockConfig+0x176>
 8002652:	4b14      	ldr	r3, [pc, #80]	; (80026a4 <HAL_RCC_ClockConfig+0x1b4>)
 8002654:	689b      	ldr	r3, [r3, #8]
 8002656:	f423 5260 	bic.w	r2, r3, #14336	; 0x3800
 800265a:	687b      	ldr	r3, [r7, #4]
 800265c:	691b      	ldr	r3, [r3, #16]
 800265e:	00db      	lsls	r3, r3, #3
 8002660:	4910      	ldr	r1, [pc, #64]	; (80026a4 <HAL_RCC_ClockConfig+0x1b4>)
 8002662:	4313      	orrs	r3, r2
 8002664:	608b      	str	r3, [r1, #8]
 8002666:	f000 f825 	bl	80026b4 <HAL_RCC_GetSysClockFreq>
 800266a:	4601      	mov	r1, r0
 800266c:	4b0d      	ldr	r3, [pc, #52]	; (80026a4 <HAL_RCC_ClockConfig+0x1b4>)
 800266e:	689b      	ldr	r3, [r3, #8]
 8002670:	091b      	lsrs	r3, r3, #4
 8002672:	f003 030f 	and.w	r3, r3, #15
 8002676:	4a0c      	ldr	r2, [pc, #48]	; (80026a8 <HAL_RCC_ClockConfig+0x1b8>)
 8002678:	5cd3      	ldrb	r3, [r2, r3]
 800267a:	f003 031f 	and.w	r3, r3, #31
 800267e:	fa21 f303 	lsr.w	r3, r1, r3
 8002682:	4a0a      	ldr	r2, [pc, #40]	; (80026ac <HAL_RCC_ClockConfig+0x1bc>)
 8002684:	6013      	str	r3, [r2, #0]
 8002686:	4b0a      	ldr	r3, [pc, #40]	; (80026b0 <HAL_RCC_ClockConfig+0x1c0>)
 8002688:	681b      	ldr	r3, [r3, #0]
 800268a:	4618      	mov	r0, r3
 800268c:	f7fe fbe8 	bl	8000e60 <HAL_InitTick>
 8002690:	4603      	mov	r3, r0
 8002692:	72fb      	strb	r3, [r7, #11]
 8002694:	7afb      	ldrb	r3, [r7, #11]
 8002696:	4618      	mov	r0, r3
 8002698:	3710      	adds	r7, #16
 800269a:	46bd      	mov	sp, r7
 800269c:	bd80      	pop	{r7, pc}
 800269e:	bf00      	nop
 80026a0:	40022000 	.word	0x40022000
 80026a4:	40021000 	.word	0x40021000
 80026a8:	08004b4c 	.word	0x08004b4c
 80026ac:	20000008 	.word	0x20000008
 80026b0:	2000000c 	.word	0x2000000c

080026b4 <HAL_RCC_GetSysClockFreq>:
 80026b4:	b480      	push	{r7}
 80026b6:	b089      	sub	sp, #36	; 0x24
 80026b8:	af00      	add	r7, sp, #0
 80026ba:	2300      	movs	r3, #0
 80026bc:	61fb      	str	r3, [r7, #28]
 80026be:	2300      	movs	r3, #0
 80026c0:	61bb      	str	r3, [r7, #24]
 80026c2:	4b3d      	ldr	r3, [pc, #244]	; (80027b8 <HAL_RCC_GetSysClockFreq+0x104>)
 80026c4:	689b      	ldr	r3, [r3, #8]
 80026c6:	f003 030c 	and.w	r3, r3, #12
 80026ca:	613b      	str	r3, [r7, #16]
 80026cc:	4b3a      	ldr	r3, [pc, #232]	; (80027b8 <HAL_RCC_GetSysClockFreq+0x104>)
 80026ce:	68db      	ldr	r3, [r3, #12]
 80026d0:	f003 0303 	and.w	r3, r3, #3
 80026d4:	60fb      	str	r3, [r7, #12]
 80026d6:	693b      	ldr	r3, [r7, #16]
 80026d8:	2b00      	cmp	r3, #0
 80026da:	d005      	beq.n	80026e8 <HAL_RCC_GetSysClockFreq+0x34>
 80026dc:	693b      	ldr	r3, [r7, #16]
 80026de:	2b0c      	cmp	r3, #12
 80026e0:	d121      	bne.n	8002726 <HAL_RCC_GetSysClockFreq+0x72>
 80026e2:	68fb      	ldr	r3, [r7, #12]
 80026e4:	2b01      	cmp	r3, #1
 80026e6:	d11e      	bne.n	8002726 <HAL_RCC_GetSysClockFreq+0x72>
 80026e8:	4b33      	ldr	r3, [pc, #204]	; (80027b8 <HAL_RCC_GetSysClockFreq+0x104>)
 80026ea:	681b      	ldr	r3, [r3, #0]
 80026ec:	f003 0308 	and.w	r3, r3, #8
 80026f0:	2b00      	cmp	r3, #0
 80026f2:	d107      	bne.n	8002704 <HAL_RCC_GetSysClockFreq+0x50>
 80026f4:	4b30      	ldr	r3, [pc, #192]	; (80027b8 <HAL_RCC_GetSysClockFreq+0x104>)
 80026f6:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 80026fa:	0a1b      	lsrs	r3, r3, #8
 80026fc:	f003 030f 	and.w	r3, r3, #15
 8002700:	61fb      	str	r3, [r7, #28]
 8002702:	e005      	b.n	8002710 <HAL_RCC_GetSysClockFreq+0x5c>
 8002704:	4b2c      	ldr	r3, [pc, #176]	; (80027b8 <HAL_RCC_GetSysClockFreq+0x104>)
 8002706:	681b      	ldr	r3, [r3, #0]
 8002708:	091b      	lsrs	r3, r3, #4
 800270a:	f003 030f 	and.w	r3, r3, #15
 800270e:	61fb      	str	r3, [r7, #28]
 8002710:	4a2a      	ldr	r2, [pc, #168]	; (80027bc <HAL_RCC_GetSysClockFreq+0x108>)
 8002712:	69fb      	ldr	r3, [r7, #28]
 8002714:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8002718:	61fb      	str	r3, [r7, #28]
 800271a:	693b      	ldr	r3, [r7, #16]
 800271c:	2b00      	cmp	r3, #0
 800271e:	d10d      	bne.n	800273c <HAL_RCC_GetSysClockFreq+0x88>
 8002720:	69fb      	ldr	r3, [r7, #28]
 8002722:	61bb      	str	r3, [r7, #24]
 8002724:	e00a      	b.n	800273c <HAL_RCC_GetSysClockFreq+0x88>
 8002726:	693b      	ldr	r3, [r7, #16]
 8002728:	2b04      	cmp	r3, #4
 800272a:	d102      	bne.n	8002732 <HAL_RCC_GetSysClockFreq+0x7e>
 800272c:	4b24      	ldr	r3, [pc, #144]	; (80027c0 <HAL_RCC_GetSysClockFreq+0x10c>)
 800272e:	61bb      	str	r3, [r7, #24]
 8002730:	e004      	b.n	800273c <HAL_RCC_GetSysClockFreq+0x88>
 8002732:	693b      	ldr	r3, [r7, #16]
 8002734:	2b08      	cmp	r3, #8
 8002736:	d101      	bne.n	800273c <HAL_RCC_GetSysClockFreq+0x88>
 8002738:	4b22      	ldr	r3, [pc, #136]	; (80027c4 <HAL_RCC_GetSysClockFreq+0x110>)
 800273a:	61bb      	str	r3, [r7, #24]
 800273c:	693b      	ldr	r3, [r7, #16]
 800273e:	2b0c      	cmp	r3, #12
 8002740:	d133      	bne.n	80027aa <HAL_RCC_GetSysClockFreq+0xf6>
 8002742:	4b1d      	ldr	r3, [pc, #116]	; (80027b8 <HAL_RCC_GetSysClockFreq+0x104>)
 8002744:	68db      	ldr	r3, [r3, #12]
 8002746:	f003 0303 	and.w	r3, r3, #3
 800274a:	60bb      	str	r3, [r7, #8]
 800274c:	68bb      	ldr	r3, [r7, #8]
 800274e:	2b02      	cmp	r3, #2
 8002750:	d002      	beq.n	8002758 <HAL_RCC_GetSysClockFreq+0xa4>
 8002752:	2b03      	cmp	r3, #3
 8002754:	d003      	beq.n	800275e <HAL_RCC_GetSysClockFreq+0xaa>
 8002756:	e005      	b.n	8002764 <HAL_RCC_GetSysClockFreq+0xb0>
 8002758:	4b19      	ldr	r3, [pc, #100]	; (80027c0 <HAL_RCC_GetSysClockFreq+0x10c>)
 800275a:	617b      	str	r3, [r7, #20]
 800275c:	e005      	b.n	800276a <HAL_RCC_GetSysClockFreq+0xb6>
 800275e:	4b19      	ldr	r3, [pc, #100]	; (80027c4 <HAL_RCC_GetSysClockFreq+0x110>)
 8002760:	617b      	str	r3, [r7, #20]
 8002762:	e002      	b.n	800276a <HAL_RCC_GetSysClockFreq+0xb6>
 8002764:	69fb      	ldr	r3, [r7, #28]
 8002766:	617b      	str	r3, [r7, #20]
 8002768:	bf00      	nop
 800276a:	4b13      	ldr	r3, [pc, #76]	; (80027b8 <HAL_RCC_GetSysClockFreq+0x104>)
 800276c:	68db      	ldr	r3, [r3, #12]
 800276e:	091b      	lsrs	r3, r3, #4
 8002770:	f003 0307 	and.w	r3, r3, #7
 8002774:	3301      	adds	r3, #1
 8002776:	607b      	str	r3, [r7, #4]
 8002778:	4b0f      	ldr	r3, [pc, #60]	; (80027b8 <HAL_RCC_GetSysClockFreq+0x104>)
 800277a:	68db      	ldr	r3, [r3, #12]
 800277c:	0a1b      	lsrs	r3, r3, #8
 800277e:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 8002782:	697a      	ldr	r2, [r7, #20]
 8002784:	fb02 f203 	mul.w	r2, r2, r3
 8002788:	687b      	ldr	r3, [r7, #4]
 800278a:	fbb2 f3f3 	udiv	r3, r2, r3
 800278e:	617b      	str	r3, [r7, #20]
 8002790:	4b09      	ldr	r3, [pc, #36]	; (80027b8 <HAL_RCC_GetSysClockFreq+0x104>)
 8002792:	68db      	ldr	r3, [r3, #12]
 8002794:	0e5b      	lsrs	r3, r3, #25
 8002796:	f003 0303 	and.w	r3, r3, #3
 800279a:	3301      	adds	r3, #1
 800279c:	005b      	lsls	r3, r3, #1
 800279e:	603b      	str	r3, [r7, #0]
 80027a0:	697a      	ldr	r2, [r7, #20]
 80027a2:	683b      	ldr	r3, [r7, #0]
 80027a4:	fbb2 f3f3 	udiv	r3, r2, r3
 80027a8:	61bb      	str	r3, [r7, #24]
 80027aa:	69bb      	ldr	r3, [r7, #24]
 80027ac:	4618      	mov	r0, r3
 80027ae:	3724      	adds	r7, #36	; 0x24
 80027b0:	46bd      	mov	sp, r7
 80027b2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80027b6:	4770      	bx	lr
 80027b8:	40021000 	.word	0x40021000
 80027bc:	08004b64 	.word	0x08004b64
 80027c0:	00f42400 	.word	0x00f42400
 80027c4:	007a1200 	.word	0x007a1200

080027c8 <HAL_RCC_GetHCLKFreq>:
 80027c8:	b480      	push	{r7}
 80027ca:	af00      	add	r7, sp, #0
 80027cc:	4b03      	ldr	r3, [pc, #12]	; (80027dc <HAL_RCC_GetHCLKFreq+0x14>)
 80027ce:	681b      	ldr	r3, [r3, #0]
 80027d0:	4618      	mov	r0, r3
 80027d2:	46bd      	mov	sp, r7
 80027d4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80027d8:	4770      	bx	lr
 80027da:	bf00      	nop
 80027dc:	20000008 	.word	0x20000008

080027e0 <HAL_RCC_GetPCLK1Freq>:
 80027e0:	b580      	push	{r7, lr}
 80027e2:	af00      	add	r7, sp, #0
 80027e4:	f7ff fff0 	bl	80027c8 <HAL_RCC_GetHCLKFreq>
 80027e8:	4601      	mov	r1, r0
 80027ea:	4b06      	ldr	r3, [pc, #24]	; (8002804 <HAL_RCC_GetPCLK1Freq+0x24>)
 80027ec:	689b      	ldr	r3, [r3, #8]
 80027ee:	0a1b      	lsrs	r3, r3, #8
 80027f0:	f003 0307 	and.w	r3, r3, #7
 80027f4:	4a04      	ldr	r2, [pc, #16]	; (8002808 <HAL_RCC_GetPCLK1Freq+0x28>)
 80027f6:	5cd3      	ldrb	r3, [r2, r3]
 80027f8:	f003 031f 	and.w	r3, r3, #31
 80027fc:	fa21 f303 	lsr.w	r3, r1, r3
 8002800:	4618      	mov	r0, r3
 8002802:	bd80      	pop	{r7, pc}
 8002804:	40021000 	.word	0x40021000
 8002808:	08004b5c 	.word	0x08004b5c

0800280c <HAL_RCC_GetPCLK2Freq>:
 800280c:	b580      	push	{r7, lr}
 800280e:	af00      	add	r7, sp, #0
 8002810:	f7ff ffda 	bl	80027c8 <HAL_RCC_GetHCLKFreq>
 8002814:	4601      	mov	r1, r0
 8002816:	4b06      	ldr	r3, [pc, #24]	; (8002830 <HAL_RCC_GetPCLK2Freq+0x24>)
 8002818:	689b      	ldr	r3, [r3, #8]
 800281a:	0adb      	lsrs	r3, r3, #11
 800281c:	f003 0307 	and.w	r3, r3, #7
 8002820:	4a04      	ldr	r2, [pc, #16]	; (8002834 <HAL_RCC_GetPCLK2Freq+0x28>)
 8002822:	5cd3      	ldrb	r3, [r2, r3]
 8002824:	f003 031f 	and.w	r3, r3, #31
 8002828:	fa21 f303 	lsr.w	r3, r1, r3
 800282c:	4618      	mov	r0, r3
 800282e:	bd80      	pop	{r7, pc}
 8002830:	40021000 	.word	0x40021000
 8002834:	08004b5c 	.word	0x08004b5c

08002838 <RCC_SetFlashLatencyFromMSIRange>:
 8002838:	b580      	push	{r7, lr}
 800283a:	b086      	sub	sp, #24
 800283c:	af00      	add	r7, sp, #0
 800283e:	6078      	str	r0, [r7, #4]
 8002840:	2300      	movs	r3, #0
 8002842:	613b      	str	r3, [r7, #16]
 8002844:	4b2a      	ldr	r3, [pc, #168]	; (80028f0 <RCC_SetFlashLatencyFromMSIRange+0xb8>)
 8002846:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8002848:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800284c:	2b00      	cmp	r3, #0
 800284e:	d003      	beq.n	8002858 <RCC_SetFlashLatencyFromMSIRange+0x20>
 8002850:	f7ff f9fc 	bl	8001c4c <HAL_PWREx_GetVoltageRange>
 8002854:	6178      	str	r0, [r7, #20]
 8002856:	e014      	b.n	8002882 <RCC_SetFlashLatencyFromMSIRange+0x4a>
 8002858:	4b25      	ldr	r3, [pc, #148]	; (80028f0 <RCC_SetFlashLatencyFromMSIRange+0xb8>)
 800285a:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 800285c:	4a24      	ldr	r2, [pc, #144]	; (80028f0 <RCC_SetFlashLatencyFromMSIRange+0xb8>)
 800285e:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8002862:	6593      	str	r3, [r2, #88]	; 0x58
 8002864:	4b22      	ldr	r3, [pc, #136]	; (80028f0 <RCC_SetFlashLatencyFromMSIRange+0xb8>)
 8002866:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8002868:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800286c:	60fb      	str	r3, [r7, #12]
 800286e:	68fb      	ldr	r3, [r7, #12]
 8002870:	f7ff f9ec 	bl	8001c4c <HAL_PWREx_GetVoltageRange>
 8002874:	6178      	str	r0, [r7, #20]
 8002876:	4b1e      	ldr	r3, [pc, #120]	; (80028f0 <RCC_SetFlashLatencyFromMSIRange+0xb8>)
 8002878:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 800287a:	4a1d      	ldr	r2, [pc, #116]	; (80028f0 <RCC_SetFlashLatencyFromMSIRange+0xb8>)
 800287c:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 8002880:	6593      	str	r3, [r2, #88]	; 0x58
 8002882:	697b      	ldr	r3, [r7, #20]
 8002884:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8002888:	d10b      	bne.n	80028a2 <RCC_SetFlashLatencyFromMSIRange+0x6a>
 800288a:	687b      	ldr	r3, [r7, #4]
 800288c:	2b80      	cmp	r3, #128	; 0x80
 800288e:	d919      	bls.n	80028c4 <RCC_SetFlashLatencyFromMSIRange+0x8c>
 8002890:	687b      	ldr	r3, [r7, #4]
 8002892:	2ba0      	cmp	r3, #160	; 0xa0
 8002894:	d902      	bls.n	800289c <RCC_SetFlashLatencyFromMSIRange+0x64>
 8002896:	2302      	movs	r3, #2
 8002898:	613b      	str	r3, [r7, #16]
 800289a:	e013      	b.n	80028c4 <RCC_SetFlashLatencyFromMSIRange+0x8c>
 800289c:	2301      	movs	r3, #1
 800289e:	613b      	str	r3, [r7, #16]
 80028a0:	e010      	b.n	80028c4 <RCC_SetFlashLatencyFromMSIRange+0x8c>
 80028a2:	687b      	ldr	r3, [r7, #4]
 80028a4:	2b80      	cmp	r3, #128	; 0x80
 80028a6:	d902      	bls.n	80028ae <RCC_SetFlashLatencyFromMSIRange+0x76>
 80028a8:	2303      	movs	r3, #3
 80028aa:	613b      	str	r3, [r7, #16]
 80028ac:	e00a      	b.n	80028c4 <RCC_SetFlashLatencyFromMSIRange+0x8c>
 80028ae:	687b      	ldr	r3, [r7, #4]
 80028b0:	2b80      	cmp	r3, #128	; 0x80
 80028b2:	d102      	bne.n	80028ba <RCC_SetFlashLatencyFromMSIRange+0x82>
 80028b4:	2302      	movs	r3, #2
 80028b6:	613b      	str	r3, [r7, #16]
 80028b8:	e004      	b.n	80028c4 <RCC_SetFlashLatencyFromMSIRange+0x8c>
 80028ba:	687b      	ldr	r3, [r7, #4]
 80028bc:	2b70      	cmp	r3, #112	; 0x70
 80028be:	d101      	bne.n	80028c4 <RCC_SetFlashLatencyFromMSIRange+0x8c>
 80028c0:	2301      	movs	r3, #1
 80028c2:	613b      	str	r3, [r7, #16]
 80028c4:	4b0b      	ldr	r3, [pc, #44]	; (80028f4 <RCC_SetFlashLatencyFromMSIRange+0xbc>)
 80028c6:	681b      	ldr	r3, [r3, #0]
 80028c8:	f023 0207 	bic.w	r2, r3, #7
 80028cc:	4909      	ldr	r1, [pc, #36]	; (80028f4 <RCC_SetFlashLatencyFromMSIRange+0xbc>)
 80028ce:	693b      	ldr	r3, [r7, #16]
 80028d0:	4313      	orrs	r3, r2
 80028d2:	600b      	str	r3, [r1, #0]
 80028d4:	4b07      	ldr	r3, [pc, #28]	; (80028f4 <RCC_SetFlashLatencyFromMSIRange+0xbc>)
 80028d6:	681b      	ldr	r3, [r3, #0]
 80028d8:	f003 0307 	and.w	r3, r3, #7
 80028dc:	693a      	ldr	r2, [r7, #16]
 80028de:	429a      	cmp	r2, r3
 80028e0:	d001      	beq.n	80028e6 <RCC_SetFlashLatencyFromMSIRange+0xae>
 80028e2:	2301      	movs	r3, #1
 80028e4:	e000      	b.n	80028e8 <RCC_SetFlashLatencyFromMSIRange+0xb0>
 80028e6:	2300      	movs	r3, #0
 80028e8:	4618      	mov	r0, r3
 80028ea:	3718      	adds	r7, #24
 80028ec:	46bd      	mov	sp, r7
 80028ee:	bd80      	pop	{r7, pc}
 80028f0:	40021000 	.word	0x40021000
 80028f4:	40022000 	.word	0x40022000

080028f8 <HAL_RCCEx_PeriphCLKConfig>:
 80028f8:	b580      	push	{r7, lr}
 80028fa:	b086      	sub	sp, #24
 80028fc:	af00      	add	r7, sp, #0
 80028fe:	6078      	str	r0, [r7, #4]
 8002900:	2300      	movs	r3, #0
 8002902:	74fb      	strb	r3, [r7, #19]
 8002904:	2300      	movs	r3, #0
 8002906:	74bb      	strb	r3, [r7, #18]
 8002908:	687b      	ldr	r3, [r7, #4]
 800290a:	681b      	ldr	r3, [r3, #0]
 800290c:	f403 6300 	and.w	r3, r3, #2048	; 0x800
 8002910:	2b00      	cmp	r3, #0
 8002912:	d02f      	beq.n	8002974 <HAL_RCCEx_PeriphCLKConfig+0x7c>
 8002914:	687b      	ldr	r3, [r7, #4]
 8002916:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8002918:	f5b3 0f00 	cmp.w	r3, #8388608	; 0x800000
 800291c:	d005      	beq.n	800292a <HAL_RCCEx_PeriphCLKConfig+0x32>
 800291e:	f5b3 0f40 	cmp.w	r3, #12582912	; 0xc00000
 8002922:	d015      	beq.n	8002950 <HAL_RCCEx_PeriphCLKConfig+0x58>
 8002924:	2b00      	cmp	r3, #0
 8002926:	d007      	beq.n	8002938 <HAL_RCCEx_PeriphCLKConfig+0x40>
 8002928:	e00f      	b.n	800294a <HAL_RCCEx_PeriphCLKConfig+0x52>
 800292a:	4bac      	ldr	r3, [pc, #688]	; (8002bdc <HAL_RCCEx_PeriphCLKConfig+0x2e4>)
 800292c:	68db      	ldr	r3, [r3, #12]
 800292e:	4aab      	ldr	r2, [pc, #684]	; (8002bdc <HAL_RCCEx_PeriphCLKConfig+0x2e4>)
 8002930:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8002934:	60d3      	str	r3, [r2, #12]
 8002936:	e00c      	b.n	8002952 <HAL_RCCEx_PeriphCLKConfig+0x5a>
 8002938:	687b      	ldr	r3, [r7, #4]
 800293a:	3304      	adds	r3, #4
 800293c:	2100      	movs	r1, #0
 800293e:	4618      	mov	r0, r3
 8002940:	f000 f9dc 	bl	8002cfc <RCCEx_PLLSAI1_Config>
 8002944:	4603      	mov	r3, r0
 8002946:	74fb      	strb	r3, [r7, #19]
 8002948:	e003      	b.n	8002952 <HAL_RCCEx_PeriphCLKConfig+0x5a>
 800294a:	2301      	movs	r3, #1
 800294c:	74fb      	strb	r3, [r7, #19]
 800294e:	e000      	b.n	8002952 <HAL_RCCEx_PeriphCLKConfig+0x5a>
 8002950:	bf00      	nop
 8002952:	7cfb      	ldrb	r3, [r7, #19]
 8002954:	2b00      	cmp	r3, #0
 8002956:	d10b      	bne.n	8002970 <HAL_RCCEx_PeriphCLKConfig+0x78>
 8002958:	4ba0      	ldr	r3, [pc, #640]	; (8002bdc <HAL_RCCEx_PeriphCLKConfig+0x2e4>)
 800295a:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 800295e:	f423 0240 	bic.w	r2, r3, #12582912	; 0xc00000
 8002962:	687b      	ldr	r3, [r7, #4]
 8002964:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8002966:	499d      	ldr	r1, [pc, #628]	; (8002bdc <HAL_RCCEx_PeriphCLKConfig+0x2e4>)
 8002968:	4313      	orrs	r3, r2
 800296a:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
 800296e:	e001      	b.n	8002974 <HAL_RCCEx_PeriphCLKConfig+0x7c>
 8002970:	7cfb      	ldrb	r3, [r7, #19]
 8002972:	74bb      	strb	r3, [r7, #18]
 8002974:	687b      	ldr	r3, [r7, #4]
 8002976:	681b      	ldr	r3, [r3, #0]
 8002978:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 800297c:	2b00      	cmp	r3, #0
 800297e:	f000 8099 	beq.w	8002ab4 <HAL_RCCEx_PeriphCLKConfig+0x1bc>
 8002982:	2300      	movs	r3, #0
 8002984:	747b      	strb	r3, [r7, #17]
 8002986:	4b95      	ldr	r3, [pc, #596]	; (8002bdc <HAL_RCCEx_PeriphCLKConfig+0x2e4>)
 8002988:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 800298a:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800298e:	2b00      	cmp	r3, #0
 8002990:	d101      	bne.n	8002996 <HAL_RCCEx_PeriphCLKConfig+0x9e>
 8002992:	2301      	movs	r3, #1
 8002994:	e000      	b.n	8002998 <HAL_RCCEx_PeriphCLKConfig+0xa0>
 8002996:	2300      	movs	r3, #0
 8002998:	2b00      	cmp	r3, #0
 800299a:	d00d      	beq.n	80029b8 <HAL_RCCEx_PeriphCLKConfig+0xc0>
 800299c:	4b8f      	ldr	r3, [pc, #572]	; (8002bdc <HAL_RCCEx_PeriphCLKConfig+0x2e4>)
 800299e:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 80029a0:	4a8e      	ldr	r2, [pc, #568]	; (8002bdc <HAL_RCCEx_PeriphCLKConfig+0x2e4>)
 80029a2:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 80029a6:	6593      	str	r3, [r2, #88]	; 0x58
 80029a8:	4b8c      	ldr	r3, [pc, #560]	; (8002bdc <HAL_RCCEx_PeriphCLKConfig+0x2e4>)
 80029aa:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 80029ac:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80029b0:	60bb      	str	r3, [r7, #8]
 80029b2:	68bb      	ldr	r3, [r7, #8]
 80029b4:	2301      	movs	r3, #1
 80029b6:	747b      	strb	r3, [r7, #17]
 80029b8:	4b89      	ldr	r3, [pc, #548]	; (8002be0 <HAL_RCCEx_PeriphCLKConfig+0x2e8>)
 80029ba:	681b      	ldr	r3, [r3, #0]
 80029bc:	4a88      	ldr	r2, [pc, #544]	; (8002be0 <HAL_RCCEx_PeriphCLKConfig+0x2e8>)
 80029be:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80029c2:	6013      	str	r3, [r2, #0]
 80029c4:	f7fe fa98 	bl	8000ef8 <HAL_GetTick>
 80029c8:	60f8      	str	r0, [r7, #12]
 80029ca:	e009      	b.n	80029e0 <HAL_RCCEx_PeriphCLKConfig+0xe8>
 80029cc:	f7fe fa94 	bl	8000ef8 <HAL_GetTick>
 80029d0:	4602      	mov	r2, r0
 80029d2:	68fb      	ldr	r3, [r7, #12]
 80029d4:	1ad3      	subs	r3, r2, r3
 80029d6:	2b02      	cmp	r3, #2
 80029d8:	d902      	bls.n	80029e0 <HAL_RCCEx_PeriphCLKConfig+0xe8>
 80029da:	2303      	movs	r3, #3
 80029dc:	74fb      	strb	r3, [r7, #19]
 80029de:	e005      	b.n	80029ec <HAL_RCCEx_PeriphCLKConfig+0xf4>
 80029e0:	4b7f      	ldr	r3, [pc, #508]	; (8002be0 <HAL_RCCEx_PeriphCLKConfig+0x2e8>)
 80029e2:	681b      	ldr	r3, [r3, #0]
 80029e4:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80029e8:	2b00      	cmp	r3, #0
 80029ea:	d0ef      	beq.n	80029cc <HAL_RCCEx_PeriphCLKConfig+0xd4>
 80029ec:	7cfb      	ldrb	r3, [r7, #19]
 80029ee:	2b00      	cmp	r3, #0
 80029f0:	d155      	bne.n	8002a9e <HAL_RCCEx_PeriphCLKConfig+0x1a6>
 80029f2:	4b7a      	ldr	r3, [pc, #488]	; (8002bdc <HAL_RCCEx_PeriphCLKConfig+0x2e4>)
 80029f4:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 80029f8:	f403 7340 	and.w	r3, r3, #768	; 0x300
 80029fc:	617b      	str	r3, [r7, #20]
 80029fe:	697b      	ldr	r3, [r7, #20]
 8002a00:	2b00      	cmp	r3, #0
 8002a02:	d01e      	beq.n	8002a42 <HAL_RCCEx_PeriphCLKConfig+0x14a>
 8002a04:	687b      	ldr	r3, [r7, #4]
 8002a06:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8002a08:	697a      	ldr	r2, [r7, #20]
 8002a0a:	429a      	cmp	r2, r3
 8002a0c:	d019      	beq.n	8002a42 <HAL_RCCEx_PeriphCLKConfig+0x14a>
 8002a0e:	4b73      	ldr	r3, [pc, #460]	; (8002bdc <HAL_RCCEx_PeriphCLKConfig+0x2e4>)
 8002a10:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8002a14:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8002a18:	617b      	str	r3, [r7, #20]
 8002a1a:	4b70      	ldr	r3, [pc, #448]	; (8002bdc <HAL_RCCEx_PeriphCLKConfig+0x2e4>)
 8002a1c:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8002a20:	4a6e      	ldr	r2, [pc, #440]	; (8002bdc <HAL_RCCEx_PeriphCLKConfig+0x2e4>)
 8002a22:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8002a26:	f8c2 3090 	str.w	r3, [r2, #144]	; 0x90
 8002a2a:	4b6c      	ldr	r3, [pc, #432]	; (8002bdc <HAL_RCCEx_PeriphCLKConfig+0x2e4>)
 8002a2c:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8002a30:	4a6a      	ldr	r2, [pc, #424]	; (8002bdc <HAL_RCCEx_PeriphCLKConfig+0x2e4>)
 8002a32:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8002a36:	f8c2 3090 	str.w	r3, [r2, #144]	; 0x90
 8002a3a:	4a68      	ldr	r2, [pc, #416]	; (8002bdc <HAL_RCCEx_PeriphCLKConfig+0x2e4>)
 8002a3c:	697b      	ldr	r3, [r7, #20]
 8002a3e:	f8c2 3090 	str.w	r3, [r2, #144]	; 0x90
 8002a42:	697b      	ldr	r3, [r7, #20]
 8002a44:	f003 0301 	and.w	r3, r3, #1
 8002a48:	2b00      	cmp	r3, #0
 8002a4a:	d016      	beq.n	8002a7a <HAL_RCCEx_PeriphCLKConfig+0x182>
 8002a4c:	f7fe fa54 	bl	8000ef8 <HAL_GetTick>
 8002a50:	60f8      	str	r0, [r7, #12]
 8002a52:	e00b      	b.n	8002a6c <HAL_RCCEx_PeriphCLKConfig+0x174>
 8002a54:	f7fe fa50 	bl	8000ef8 <HAL_GetTick>
 8002a58:	4602      	mov	r2, r0
 8002a5a:	68fb      	ldr	r3, [r7, #12]
 8002a5c:	1ad3      	subs	r3, r2, r3
 8002a5e:	f241 3288 	movw	r2, #5000	; 0x1388
 8002a62:	4293      	cmp	r3, r2
 8002a64:	d902      	bls.n	8002a6c <HAL_RCCEx_PeriphCLKConfig+0x174>
 8002a66:	2303      	movs	r3, #3
 8002a68:	74fb      	strb	r3, [r7, #19]
 8002a6a:	e006      	b.n	8002a7a <HAL_RCCEx_PeriphCLKConfig+0x182>
 8002a6c:	4b5b      	ldr	r3, [pc, #364]	; (8002bdc <HAL_RCCEx_PeriphCLKConfig+0x2e4>)
 8002a6e:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8002a72:	f003 0302 	and.w	r3, r3, #2
 8002a76:	2b00      	cmp	r3, #0
 8002a78:	d0ec      	beq.n	8002a54 <HAL_RCCEx_PeriphCLKConfig+0x15c>
 8002a7a:	7cfb      	ldrb	r3, [r7, #19]
 8002a7c:	2b00      	cmp	r3, #0
 8002a7e:	d10b      	bne.n	8002a98 <HAL_RCCEx_PeriphCLKConfig+0x1a0>
 8002a80:	4b56      	ldr	r3, [pc, #344]	; (8002bdc <HAL_RCCEx_PeriphCLKConfig+0x2e4>)
 8002a82:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8002a86:	f423 7240 	bic.w	r2, r3, #768	; 0x300
 8002a8a:	687b      	ldr	r3, [r7, #4]
 8002a8c:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8002a8e:	4953      	ldr	r1, [pc, #332]	; (8002bdc <HAL_RCCEx_PeriphCLKConfig+0x2e4>)
 8002a90:	4313      	orrs	r3, r2
 8002a92:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
 8002a96:	e004      	b.n	8002aa2 <HAL_RCCEx_PeriphCLKConfig+0x1aa>
 8002a98:	7cfb      	ldrb	r3, [r7, #19]
 8002a9a:	74bb      	strb	r3, [r7, #18]
 8002a9c:	e001      	b.n	8002aa2 <HAL_RCCEx_PeriphCLKConfig+0x1aa>
 8002a9e:	7cfb      	ldrb	r3, [r7, #19]
 8002aa0:	74bb      	strb	r3, [r7, #18]
 8002aa2:	7c7b      	ldrb	r3, [r7, #17]
 8002aa4:	2b01      	cmp	r3, #1
 8002aa6:	d105      	bne.n	8002ab4 <HAL_RCCEx_PeriphCLKConfig+0x1bc>
 8002aa8:	4b4c      	ldr	r3, [pc, #304]	; (8002bdc <HAL_RCCEx_PeriphCLKConfig+0x2e4>)
 8002aaa:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8002aac:	4a4b      	ldr	r2, [pc, #300]	; (8002bdc <HAL_RCCEx_PeriphCLKConfig+0x2e4>)
 8002aae:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 8002ab2:	6593      	str	r3, [r2, #88]	; 0x58
 8002ab4:	687b      	ldr	r3, [r7, #4]
 8002ab6:	681b      	ldr	r3, [r3, #0]
 8002ab8:	f003 0301 	and.w	r3, r3, #1
 8002abc:	2b00      	cmp	r3, #0
 8002abe:	d00a      	beq.n	8002ad6 <HAL_RCCEx_PeriphCLKConfig+0x1de>
 8002ac0:	4b46      	ldr	r3, [pc, #280]	; (8002bdc <HAL_RCCEx_PeriphCLKConfig+0x2e4>)
 8002ac2:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8002ac6:	f023 0203 	bic.w	r2, r3, #3
 8002aca:	687b      	ldr	r3, [r7, #4]
 8002acc:	6a1b      	ldr	r3, [r3, #32]
 8002ace:	4943      	ldr	r1, [pc, #268]	; (8002bdc <HAL_RCCEx_PeriphCLKConfig+0x2e4>)
 8002ad0:	4313      	orrs	r3, r2
 8002ad2:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
 8002ad6:	687b      	ldr	r3, [r7, #4]
 8002ad8:	681b      	ldr	r3, [r3, #0]
 8002ada:	f003 0302 	and.w	r3, r3, #2
 8002ade:	2b00      	cmp	r3, #0
 8002ae0:	d00a      	beq.n	8002af8 <HAL_RCCEx_PeriphCLKConfig+0x200>
 8002ae2:	4b3e      	ldr	r3, [pc, #248]	; (8002bdc <HAL_RCCEx_PeriphCLKConfig+0x2e4>)
 8002ae4:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8002ae8:	f023 020c 	bic.w	r2, r3, #12
 8002aec:	687b      	ldr	r3, [r7, #4]
 8002aee:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002af0:	493a      	ldr	r1, [pc, #232]	; (8002bdc <HAL_RCCEx_PeriphCLKConfig+0x2e4>)
 8002af2:	4313      	orrs	r3, r2
 8002af4:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
 8002af8:	687b      	ldr	r3, [r7, #4]
 8002afa:	681b      	ldr	r3, [r3, #0]
 8002afc:	f003 0320 	and.w	r3, r3, #32
 8002b00:	2b00      	cmp	r3, #0
 8002b02:	d00a      	beq.n	8002b1a <HAL_RCCEx_PeriphCLKConfig+0x222>
 8002b04:	4b35      	ldr	r3, [pc, #212]	; (8002bdc <HAL_RCCEx_PeriphCLKConfig+0x2e4>)
 8002b06:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8002b0a:	f423 6240 	bic.w	r2, r3, #3072	; 0xc00
 8002b0e:	687b      	ldr	r3, [r7, #4]
 8002b10:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8002b12:	4932      	ldr	r1, [pc, #200]	; (8002bdc <HAL_RCCEx_PeriphCLKConfig+0x2e4>)
 8002b14:	4313      	orrs	r3, r2
 8002b16:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
 8002b1a:	687b      	ldr	r3, [r7, #4]
 8002b1c:	681b      	ldr	r3, [r3, #0]
 8002b1e:	f403 7300 	and.w	r3, r3, #512	; 0x200
 8002b22:	2b00      	cmp	r3, #0
 8002b24:	d00a      	beq.n	8002b3c <HAL_RCCEx_PeriphCLKConfig+0x244>
 8002b26:	4b2d      	ldr	r3, [pc, #180]	; (8002bdc <HAL_RCCEx_PeriphCLKConfig+0x2e4>)
 8002b28:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8002b2c:	f423 2240 	bic.w	r2, r3, #786432	; 0xc0000
 8002b30:	687b      	ldr	r3, [r7, #4]
 8002b32:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8002b34:	4929      	ldr	r1, [pc, #164]	; (8002bdc <HAL_RCCEx_PeriphCLKConfig+0x2e4>)
 8002b36:	4313      	orrs	r3, r2
 8002b38:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
 8002b3c:	687b      	ldr	r3, [r7, #4]
 8002b3e:	681b      	ldr	r3, [r3, #0]
 8002b40:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 8002b44:	2b00      	cmp	r3, #0
 8002b46:	d00a      	beq.n	8002b5e <HAL_RCCEx_PeriphCLKConfig+0x266>
 8002b48:	4b24      	ldr	r3, [pc, #144]	; (8002bdc <HAL_RCCEx_PeriphCLKConfig+0x2e4>)
 8002b4a:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8002b4e:	f423 1240 	bic.w	r2, r3, #3145728	; 0x300000
 8002b52:	687b      	ldr	r3, [r7, #4]
 8002b54:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8002b56:	4921      	ldr	r1, [pc, #132]	; (8002bdc <HAL_RCCEx_PeriphCLKConfig+0x2e4>)
 8002b58:	4313      	orrs	r3, r2
 8002b5a:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
 8002b5e:	687b      	ldr	r3, [r7, #4]
 8002b60:	681b      	ldr	r3, [r3, #0]
 8002b62:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8002b66:	2b00      	cmp	r3, #0
 8002b68:	d00a      	beq.n	8002b80 <HAL_RCCEx_PeriphCLKConfig+0x288>
 8002b6a:	4b1c      	ldr	r3, [pc, #112]	; (8002bdc <HAL_RCCEx_PeriphCLKConfig+0x2e4>)
 8002b6c:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8002b70:	f423 5240 	bic.w	r2, r3, #12288	; 0x3000
 8002b74:	687b      	ldr	r3, [r7, #4]
 8002b76:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8002b78:	4918      	ldr	r1, [pc, #96]	; (8002bdc <HAL_RCCEx_PeriphCLKConfig+0x2e4>)
 8002b7a:	4313      	orrs	r3, r2
 8002b7c:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
 8002b80:	687b      	ldr	r3, [r7, #4]
 8002b82:	681b      	ldr	r3, [r3, #0]
 8002b84:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8002b88:	2b00      	cmp	r3, #0
 8002b8a:	d00a      	beq.n	8002ba2 <HAL_RCCEx_PeriphCLKConfig+0x2aa>
 8002b8c:	4b13      	ldr	r3, [pc, #76]	; (8002bdc <HAL_RCCEx_PeriphCLKConfig+0x2e4>)
 8002b8e:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8002b92:	f423 3240 	bic.w	r2, r3, #196608	; 0x30000
 8002b96:	687b      	ldr	r3, [r7, #4]
 8002b98:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002b9a:	4910      	ldr	r1, [pc, #64]	; (8002bdc <HAL_RCCEx_PeriphCLKConfig+0x2e4>)
 8002b9c:	4313      	orrs	r3, r2
 8002b9e:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
 8002ba2:	687b      	ldr	r3, [r7, #4]
 8002ba4:	681b      	ldr	r3, [r3, #0]
 8002ba6:	f403 5300 	and.w	r3, r3, #8192	; 0x2000
 8002baa:	2b00      	cmp	r3, #0
 8002bac:	d02c      	beq.n	8002c08 <HAL_RCCEx_PeriphCLKConfig+0x310>
 8002bae:	4b0b      	ldr	r3, [pc, #44]	; (8002bdc <HAL_RCCEx_PeriphCLKConfig+0x2e4>)
 8002bb0:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8002bb4:	f023 6240 	bic.w	r2, r3, #201326592	; 0xc000000
 8002bb8:	687b      	ldr	r3, [r7, #4]
 8002bba:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002bbc:	4907      	ldr	r1, [pc, #28]	; (8002bdc <HAL_RCCEx_PeriphCLKConfig+0x2e4>)
 8002bbe:	4313      	orrs	r3, r2
 8002bc0:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
 8002bc4:	687b      	ldr	r3, [r7, #4]
 8002bc6:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002bc8:	f1b3 6f00 	cmp.w	r3, #134217728	; 0x8000000
 8002bcc:	d10a      	bne.n	8002be4 <HAL_RCCEx_PeriphCLKConfig+0x2ec>
 8002bce:	4b03      	ldr	r3, [pc, #12]	; (8002bdc <HAL_RCCEx_PeriphCLKConfig+0x2e4>)
 8002bd0:	68db      	ldr	r3, [r3, #12]
 8002bd2:	4a02      	ldr	r2, [pc, #8]	; (8002bdc <HAL_RCCEx_PeriphCLKConfig+0x2e4>)
 8002bd4:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8002bd8:	60d3      	str	r3, [r2, #12]
 8002bda:	e015      	b.n	8002c08 <HAL_RCCEx_PeriphCLKConfig+0x310>
 8002bdc:	40021000 	.word	0x40021000
 8002be0:	40007000 	.word	0x40007000
 8002be4:	687b      	ldr	r3, [r7, #4]
 8002be6:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002be8:	f1b3 6f80 	cmp.w	r3, #67108864	; 0x4000000
 8002bec:	d10c      	bne.n	8002c08 <HAL_RCCEx_PeriphCLKConfig+0x310>
 8002bee:	687b      	ldr	r3, [r7, #4]
 8002bf0:	3304      	adds	r3, #4
 8002bf2:	2101      	movs	r1, #1
 8002bf4:	4618      	mov	r0, r3
 8002bf6:	f000 f881 	bl	8002cfc <RCCEx_PLLSAI1_Config>
 8002bfa:	4603      	mov	r3, r0
 8002bfc:	74fb      	strb	r3, [r7, #19]
 8002bfe:	7cfb      	ldrb	r3, [r7, #19]
 8002c00:	2b00      	cmp	r3, #0
 8002c02:	d001      	beq.n	8002c08 <HAL_RCCEx_PeriphCLKConfig+0x310>
 8002c04:	7cfb      	ldrb	r3, [r7, #19]
 8002c06:	74bb      	strb	r3, [r7, #18]
 8002c08:	687b      	ldr	r3, [r7, #4]
 8002c0a:	681b      	ldr	r3, [r3, #0]
 8002c0c:	f403 2380 	and.w	r3, r3, #262144	; 0x40000
 8002c10:	2b00      	cmp	r3, #0
 8002c12:	d028      	beq.n	8002c66 <HAL_RCCEx_PeriphCLKConfig+0x36e>
 8002c14:	4b30      	ldr	r3, [pc, #192]	; (8002cd8 <HAL_RCCEx_PeriphCLKConfig+0x3e0>)
 8002c16:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8002c1a:	f023 6240 	bic.w	r2, r3, #201326592	; 0xc000000
 8002c1e:	687b      	ldr	r3, [r7, #4]
 8002c20:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8002c22:	492d      	ldr	r1, [pc, #180]	; (8002cd8 <HAL_RCCEx_PeriphCLKConfig+0x3e0>)
 8002c24:	4313      	orrs	r3, r2
 8002c26:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
 8002c2a:	687b      	ldr	r3, [r7, #4]
 8002c2c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8002c2e:	f1b3 6f00 	cmp.w	r3, #134217728	; 0x8000000
 8002c32:	d106      	bne.n	8002c42 <HAL_RCCEx_PeriphCLKConfig+0x34a>
 8002c34:	4b28      	ldr	r3, [pc, #160]	; (8002cd8 <HAL_RCCEx_PeriphCLKConfig+0x3e0>)
 8002c36:	68db      	ldr	r3, [r3, #12]
 8002c38:	4a27      	ldr	r2, [pc, #156]	; (8002cd8 <HAL_RCCEx_PeriphCLKConfig+0x3e0>)
 8002c3a:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8002c3e:	60d3      	str	r3, [r2, #12]
 8002c40:	e011      	b.n	8002c66 <HAL_RCCEx_PeriphCLKConfig+0x36e>
 8002c42:	687b      	ldr	r3, [r7, #4]
 8002c44:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8002c46:	f1b3 6f80 	cmp.w	r3, #67108864	; 0x4000000
 8002c4a:	d10c      	bne.n	8002c66 <HAL_RCCEx_PeriphCLKConfig+0x36e>
 8002c4c:	687b      	ldr	r3, [r7, #4]
 8002c4e:	3304      	adds	r3, #4
 8002c50:	2101      	movs	r1, #1
 8002c52:	4618      	mov	r0, r3
 8002c54:	f000 f852 	bl	8002cfc <RCCEx_PLLSAI1_Config>
 8002c58:	4603      	mov	r3, r0
 8002c5a:	74fb      	strb	r3, [r7, #19]
 8002c5c:	7cfb      	ldrb	r3, [r7, #19]
 8002c5e:	2b00      	cmp	r3, #0
 8002c60:	d001      	beq.n	8002c66 <HAL_RCCEx_PeriphCLKConfig+0x36e>
 8002c62:	7cfb      	ldrb	r3, [r7, #19]
 8002c64:	74bb      	strb	r3, [r7, #18]
 8002c66:	687b      	ldr	r3, [r7, #4]
 8002c68:	681b      	ldr	r3, [r3, #0]
 8002c6a:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 8002c6e:	2b00      	cmp	r3, #0
 8002c70:	d01c      	beq.n	8002cac <HAL_RCCEx_PeriphCLKConfig+0x3b4>
 8002c72:	4b19      	ldr	r3, [pc, #100]	; (8002cd8 <HAL_RCCEx_PeriphCLKConfig+0x3e0>)
 8002c74:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8002c78:	f023 5240 	bic.w	r2, r3, #805306368	; 0x30000000
 8002c7c:	687b      	ldr	r3, [r7, #4]
 8002c7e:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8002c80:	4915      	ldr	r1, [pc, #84]	; (8002cd8 <HAL_RCCEx_PeriphCLKConfig+0x3e0>)
 8002c82:	4313      	orrs	r3, r2
 8002c84:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
 8002c88:	687b      	ldr	r3, [r7, #4]
 8002c8a:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8002c8c:	f1b3 5f80 	cmp.w	r3, #268435456	; 0x10000000
 8002c90:	d10c      	bne.n	8002cac <HAL_RCCEx_PeriphCLKConfig+0x3b4>
 8002c92:	687b      	ldr	r3, [r7, #4]
 8002c94:	3304      	adds	r3, #4
 8002c96:	2102      	movs	r1, #2
 8002c98:	4618      	mov	r0, r3
 8002c9a:	f000 f82f 	bl	8002cfc <RCCEx_PLLSAI1_Config>
 8002c9e:	4603      	mov	r3, r0
 8002ca0:	74fb      	strb	r3, [r7, #19]
 8002ca2:	7cfb      	ldrb	r3, [r7, #19]
 8002ca4:	2b00      	cmp	r3, #0
 8002ca6:	d001      	beq.n	8002cac <HAL_RCCEx_PeriphCLKConfig+0x3b4>
 8002ca8:	7cfb      	ldrb	r3, [r7, #19]
 8002caa:	74bb      	strb	r3, [r7, #18]
 8002cac:	687b      	ldr	r3, [r7, #4]
 8002cae:	681b      	ldr	r3, [r3, #0]
 8002cb0:	f403 4300 	and.w	r3, r3, #32768	; 0x8000
 8002cb4:	2b00      	cmp	r3, #0
 8002cb6:	d00a      	beq.n	8002cce <HAL_RCCEx_PeriphCLKConfig+0x3d6>
 8002cb8:	4b07      	ldr	r3, [pc, #28]	; (8002cd8 <HAL_RCCEx_PeriphCLKConfig+0x3e0>)
 8002cba:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8002cbe:	f023 4280 	bic.w	r2, r3, #1073741824	; 0x40000000
 8002cc2:	687b      	ldr	r3, [r7, #4]
 8002cc4:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8002cc6:	4904      	ldr	r1, [pc, #16]	; (8002cd8 <HAL_RCCEx_PeriphCLKConfig+0x3e0>)
 8002cc8:	4313      	orrs	r3, r2
 8002cca:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
 8002cce:	7cbb      	ldrb	r3, [r7, #18]
 8002cd0:	4618      	mov	r0, r3
 8002cd2:	3718      	adds	r7, #24
 8002cd4:	46bd      	mov	sp, r7
 8002cd6:	bd80      	pop	{r7, pc}
 8002cd8:	40021000 	.word	0x40021000

08002cdc <HAL_RCCEx_EnableMSIPLLMode>:
 8002cdc:	b480      	push	{r7}
 8002cde:	af00      	add	r7, sp, #0
 8002ce0:	4b05      	ldr	r3, [pc, #20]	; (8002cf8 <HAL_RCCEx_EnableMSIPLLMode+0x1c>)
 8002ce2:	681b      	ldr	r3, [r3, #0]
 8002ce4:	4a04      	ldr	r2, [pc, #16]	; (8002cf8 <HAL_RCCEx_EnableMSIPLLMode+0x1c>)
 8002ce6:	f043 0304 	orr.w	r3, r3, #4
 8002cea:	6013      	str	r3, [r2, #0]
 8002cec:	bf00      	nop
 8002cee:	46bd      	mov	sp, r7
 8002cf0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002cf4:	4770      	bx	lr
 8002cf6:	bf00      	nop
 8002cf8:	40021000 	.word	0x40021000

08002cfc <RCCEx_PLLSAI1_Config>:
 8002cfc:	b580      	push	{r7, lr}
 8002cfe:	b084      	sub	sp, #16
 8002d00:	af00      	add	r7, sp, #0
 8002d02:	6078      	str	r0, [r7, #4]
 8002d04:	6039      	str	r1, [r7, #0]
 8002d06:	2300      	movs	r3, #0
 8002d08:	73fb      	strb	r3, [r7, #15]
 8002d0a:	4b73      	ldr	r3, [pc, #460]	; (8002ed8 <RCCEx_PLLSAI1_Config+0x1dc>)
 8002d0c:	68db      	ldr	r3, [r3, #12]
 8002d0e:	f003 0303 	and.w	r3, r3, #3
 8002d12:	2b00      	cmp	r3, #0
 8002d14:	d018      	beq.n	8002d48 <RCCEx_PLLSAI1_Config+0x4c>
 8002d16:	4b70      	ldr	r3, [pc, #448]	; (8002ed8 <RCCEx_PLLSAI1_Config+0x1dc>)
 8002d18:	68db      	ldr	r3, [r3, #12]
 8002d1a:	f003 0203 	and.w	r2, r3, #3
 8002d1e:	687b      	ldr	r3, [r7, #4]
 8002d20:	681b      	ldr	r3, [r3, #0]
 8002d22:	429a      	cmp	r2, r3
 8002d24:	d10d      	bne.n	8002d42 <RCCEx_PLLSAI1_Config+0x46>
 8002d26:	687b      	ldr	r3, [r7, #4]
 8002d28:	681b      	ldr	r3, [r3, #0]
 8002d2a:	2b00      	cmp	r3, #0
 8002d2c:	d009      	beq.n	8002d42 <RCCEx_PLLSAI1_Config+0x46>
 8002d2e:	4b6a      	ldr	r3, [pc, #424]	; (8002ed8 <RCCEx_PLLSAI1_Config+0x1dc>)
 8002d30:	68db      	ldr	r3, [r3, #12]
 8002d32:	091b      	lsrs	r3, r3, #4
 8002d34:	f003 0307 	and.w	r3, r3, #7
 8002d38:	1c5a      	adds	r2, r3, #1
 8002d3a:	687b      	ldr	r3, [r7, #4]
 8002d3c:	685b      	ldr	r3, [r3, #4]
 8002d3e:	429a      	cmp	r2, r3
 8002d40:	d044      	beq.n	8002dcc <RCCEx_PLLSAI1_Config+0xd0>
 8002d42:	2301      	movs	r3, #1
 8002d44:	73fb      	strb	r3, [r7, #15]
 8002d46:	e041      	b.n	8002dcc <RCCEx_PLLSAI1_Config+0xd0>
 8002d48:	687b      	ldr	r3, [r7, #4]
 8002d4a:	681b      	ldr	r3, [r3, #0]
 8002d4c:	2b02      	cmp	r3, #2
 8002d4e:	d00c      	beq.n	8002d6a <RCCEx_PLLSAI1_Config+0x6e>
 8002d50:	2b03      	cmp	r3, #3
 8002d52:	d013      	beq.n	8002d7c <RCCEx_PLLSAI1_Config+0x80>
 8002d54:	2b01      	cmp	r3, #1
 8002d56:	d120      	bne.n	8002d9a <RCCEx_PLLSAI1_Config+0x9e>
 8002d58:	4b5f      	ldr	r3, [pc, #380]	; (8002ed8 <RCCEx_PLLSAI1_Config+0x1dc>)
 8002d5a:	681b      	ldr	r3, [r3, #0]
 8002d5c:	f003 0302 	and.w	r3, r3, #2
 8002d60:	2b00      	cmp	r3, #0
 8002d62:	d11d      	bne.n	8002da0 <RCCEx_PLLSAI1_Config+0xa4>
 8002d64:	2301      	movs	r3, #1
 8002d66:	73fb      	strb	r3, [r7, #15]
 8002d68:	e01a      	b.n	8002da0 <RCCEx_PLLSAI1_Config+0xa4>
 8002d6a:	4b5b      	ldr	r3, [pc, #364]	; (8002ed8 <RCCEx_PLLSAI1_Config+0x1dc>)
 8002d6c:	681b      	ldr	r3, [r3, #0]
 8002d6e:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 8002d72:	2b00      	cmp	r3, #0
 8002d74:	d116      	bne.n	8002da4 <RCCEx_PLLSAI1_Config+0xa8>
 8002d76:	2301      	movs	r3, #1
 8002d78:	73fb      	strb	r3, [r7, #15]
 8002d7a:	e013      	b.n	8002da4 <RCCEx_PLLSAI1_Config+0xa8>
 8002d7c:	4b56      	ldr	r3, [pc, #344]	; (8002ed8 <RCCEx_PLLSAI1_Config+0x1dc>)
 8002d7e:	681b      	ldr	r3, [r3, #0]
 8002d80:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8002d84:	2b00      	cmp	r3, #0
 8002d86:	d10f      	bne.n	8002da8 <RCCEx_PLLSAI1_Config+0xac>
 8002d88:	4b53      	ldr	r3, [pc, #332]	; (8002ed8 <RCCEx_PLLSAI1_Config+0x1dc>)
 8002d8a:	681b      	ldr	r3, [r3, #0]
 8002d8c:	f403 2380 	and.w	r3, r3, #262144	; 0x40000
 8002d90:	2b00      	cmp	r3, #0
 8002d92:	d109      	bne.n	8002da8 <RCCEx_PLLSAI1_Config+0xac>
 8002d94:	2301      	movs	r3, #1
 8002d96:	73fb      	strb	r3, [r7, #15]
 8002d98:	e006      	b.n	8002da8 <RCCEx_PLLSAI1_Config+0xac>
 8002d9a:	2301      	movs	r3, #1
 8002d9c:	73fb      	strb	r3, [r7, #15]
 8002d9e:	e004      	b.n	8002daa <RCCEx_PLLSAI1_Config+0xae>
 8002da0:	bf00      	nop
 8002da2:	e002      	b.n	8002daa <RCCEx_PLLSAI1_Config+0xae>
 8002da4:	bf00      	nop
 8002da6:	e000      	b.n	8002daa <RCCEx_PLLSAI1_Config+0xae>
 8002da8:	bf00      	nop
 8002daa:	7bfb      	ldrb	r3, [r7, #15]
 8002dac:	2b00      	cmp	r3, #0
 8002dae:	d10d      	bne.n	8002dcc <RCCEx_PLLSAI1_Config+0xd0>
 8002db0:	4b49      	ldr	r3, [pc, #292]	; (8002ed8 <RCCEx_PLLSAI1_Config+0x1dc>)
 8002db2:	68db      	ldr	r3, [r3, #12]
 8002db4:	f023 0273 	bic.w	r2, r3, #115	; 0x73
 8002db8:	687b      	ldr	r3, [r7, #4]
 8002dba:	6819      	ldr	r1, [r3, #0]
 8002dbc:	687b      	ldr	r3, [r7, #4]
 8002dbe:	685b      	ldr	r3, [r3, #4]
 8002dc0:	3b01      	subs	r3, #1
 8002dc2:	011b      	lsls	r3, r3, #4
 8002dc4:	430b      	orrs	r3, r1
 8002dc6:	4944      	ldr	r1, [pc, #272]	; (8002ed8 <RCCEx_PLLSAI1_Config+0x1dc>)
 8002dc8:	4313      	orrs	r3, r2
 8002dca:	60cb      	str	r3, [r1, #12]
 8002dcc:	7bfb      	ldrb	r3, [r7, #15]
 8002dce:	2b00      	cmp	r3, #0
 8002dd0:	d17c      	bne.n	8002ecc <RCCEx_PLLSAI1_Config+0x1d0>
 8002dd2:	4b41      	ldr	r3, [pc, #260]	; (8002ed8 <RCCEx_PLLSAI1_Config+0x1dc>)
 8002dd4:	681b      	ldr	r3, [r3, #0]
 8002dd6:	4a40      	ldr	r2, [pc, #256]	; (8002ed8 <RCCEx_PLLSAI1_Config+0x1dc>)
 8002dd8:	f023 6380 	bic.w	r3, r3, #67108864	; 0x4000000
 8002ddc:	6013      	str	r3, [r2, #0]
 8002dde:	f7fe f88b 	bl	8000ef8 <HAL_GetTick>
 8002de2:	60b8      	str	r0, [r7, #8]
 8002de4:	e009      	b.n	8002dfa <RCCEx_PLLSAI1_Config+0xfe>
 8002de6:	f7fe f887 	bl	8000ef8 <HAL_GetTick>
 8002dea:	4602      	mov	r2, r0
 8002dec:	68bb      	ldr	r3, [r7, #8]
 8002dee:	1ad3      	subs	r3, r2, r3
 8002df0:	2b02      	cmp	r3, #2
 8002df2:	d902      	bls.n	8002dfa <RCCEx_PLLSAI1_Config+0xfe>
 8002df4:	2303      	movs	r3, #3
 8002df6:	73fb      	strb	r3, [r7, #15]
 8002df8:	e005      	b.n	8002e06 <RCCEx_PLLSAI1_Config+0x10a>
 8002dfa:	4b37      	ldr	r3, [pc, #220]	; (8002ed8 <RCCEx_PLLSAI1_Config+0x1dc>)
 8002dfc:	681b      	ldr	r3, [r3, #0]
 8002dfe:	f003 6300 	and.w	r3, r3, #134217728	; 0x8000000
 8002e02:	2b00      	cmp	r3, #0
 8002e04:	d1ef      	bne.n	8002de6 <RCCEx_PLLSAI1_Config+0xea>
 8002e06:	7bfb      	ldrb	r3, [r7, #15]
 8002e08:	2b00      	cmp	r3, #0
 8002e0a:	d15f      	bne.n	8002ecc <RCCEx_PLLSAI1_Config+0x1d0>
 8002e0c:	683b      	ldr	r3, [r7, #0]
 8002e0e:	2b00      	cmp	r3, #0
 8002e10:	d110      	bne.n	8002e34 <RCCEx_PLLSAI1_Config+0x138>
 8002e12:	4b31      	ldr	r3, [pc, #196]	; (8002ed8 <RCCEx_PLLSAI1_Config+0x1dc>)
 8002e14:	691b      	ldr	r3, [r3, #16]
 8002e16:	f023 4378 	bic.w	r3, r3, #4160749568	; 0xf8000000
 8002e1a:	f423 43fe 	bic.w	r3, r3, #32512	; 0x7f00
 8002e1e:	687a      	ldr	r2, [r7, #4]
 8002e20:	6892      	ldr	r2, [r2, #8]
 8002e22:	0211      	lsls	r1, r2, #8
 8002e24:	687a      	ldr	r2, [r7, #4]
 8002e26:	68d2      	ldr	r2, [r2, #12]
 8002e28:	06d2      	lsls	r2, r2, #27
 8002e2a:	430a      	orrs	r2, r1
 8002e2c:	492a      	ldr	r1, [pc, #168]	; (8002ed8 <RCCEx_PLLSAI1_Config+0x1dc>)
 8002e2e:	4313      	orrs	r3, r2
 8002e30:	610b      	str	r3, [r1, #16]
 8002e32:	e027      	b.n	8002e84 <RCCEx_PLLSAI1_Config+0x188>
 8002e34:	683b      	ldr	r3, [r7, #0]
 8002e36:	2b01      	cmp	r3, #1
 8002e38:	d112      	bne.n	8002e60 <RCCEx_PLLSAI1_Config+0x164>
 8002e3a:	4b27      	ldr	r3, [pc, #156]	; (8002ed8 <RCCEx_PLLSAI1_Config+0x1dc>)
 8002e3c:	691b      	ldr	r3, [r3, #16]
 8002e3e:	f423 03c0 	bic.w	r3, r3, #6291456	; 0x600000
 8002e42:	f423 43fe 	bic.w	r3, r3, #32512	; 0x7f00
 8002e46:	687a      	ldr	r2, [r7, #4]
 8002e48:	6892      	ldr	r2, [r2, #8]
 8002e4a:	0211      	lsls	r1, r2, #8
 8002e4c:	687a      	ldr	r2, [r7, #4]
 8002e4e:	6912      	ldr	r2, [r2, #16]
 8002e50:	0852      	lsrs	r2, r2, #1
 8002e52:	3a01      	subs	r2, #1
 8002e54:	0552      	lsls	r2, r2, #21
 8002e56:	430a      	orrs	r2, r1
 8002e58:	491f      	ldr	r1, [pc, #124]	; (8002ed8 <RCCEx_PLLSAI1_Config+0x1dc>)
 8002e5a:	4313      	orrs	r3, r2
 8002e5c:	610b      	str	r3, [r1, #16]
 8002e5e:	e011      	b.n	8002e84 <RCCEx_PLLSAI1_Config+0x188>
 8002e60:	4b1d      	ldr	r3, [pc, #116]	; (8002ed8 <RCCEx_PLLSAI1_Config+0x1dc>)
 8002e62:	691b      	ldr	r3, [r3, #16]
 8002e64:	f023 63c0 	bic.w	r3, r3, #100663296	; 0x6000000
 8002e68:	f423 43fe 	bic.w	r3, r3, #32512	; 0x7f00
 8002e6c:	687a      	ldr	r2, [r7, #4]
 8002e6e:	6892      	ldr	r2, [r2, #8]
 8002e70:	0211      	lsls	r1, r2, #8
 8002e72:	687a      	ldr	r2, [r7, #4]
 8002e74:	6952      	ldr	r2, [r2, #20]
 8002e76:	0852      	lsrs	r2, r2, #1
 8002e78:	3a01      	subs	r2, #1
 8002e7a:	0652      	lsls	r2, r2, #25
 8002e7c:	430a      	orrs	r2, r1
 8002e7e:	4916      	ldr	r1, [pc, #88]	; (8002ed8 <RCCEx_PLLSAI1_Config+0x1dc>)
 8002e80:	4313      	orrs	r3, r2
 8002e82:	610b      	str	r3, [r1, #16]
 8002e84:	4b14      	ldr	r3, [pc, #80]	; (8002ed8 <RCCEx_PLLSAI1_Config+0x1dc>)
 8002e86:	681b      	ldr	r3, [r3, #0]
 8002e88:	4a13      	ldr	r2, [pc, #76]	; (8002ed8 <RCCEx_PLLSAI1_Config+0x1dc>)
 8002e8a:	f043 6380 	orr.w	r3, r3, #67108864	; 0x4000000
 8002e8e:	6013      	str	r3, [r2, #0]
 8002e90:	f7fe f832 	bl	8000ef8 <HAL_GetTick>
 8002e94:	60b8      	str	r0, [r7, #8]
 8002e96:	e009      	b.n	8002eac <RCCEx_PLLSAI1_Config+0x1b0>
 8002e98:	f7fe f82e 	bl	8000ef8 <HAL_GetTick>
 8002e9c:	4602      	mov	r2, r0
 8002e9e:	68bb      	ldr	r3, [r7, #8]
 8002ea0:	1ad3      	subs	r3, r2, r3
 8002ea2:	2b02      	cmp	r3, #2
 8002ea4:	d902      	bls.n	8002eac <RCCEx_PLLSAI1_Config+0x1b0>
 8002ea6:	2303      	movs	r3, #3
 8002ea8:	73fb      	strb	r3, [r7, #15]
 8002eaa:	e005      	b.n	8002eb8 <RCCEx_PLLSAI1_Config+0x1bc>
 8002eac:	4b0a      	ldr	r3, [pc, #40]	; (8002ed8 <RCCEx_PLLSAI1_Config+0x1dc>)
 8002eae:	681b      	ldr	r3, [r3, #0]
 8002eb0:	f003 6300 	and.w	r3, r3, #134217728	; 0x8000000
 8002eb4:	2b00      	cmp	r3, #0
 8002eb6:	d0ef      	beq.n	8002e98 <RCCEx_PLLSAI1_Config+0x19c>
 8002eb8:	7bfb      	ldrb	r3, [r7, #15]
 8002eba:	2b00      	cmp	r3, #0
 8002ebc:	d106      	bne.n	8002ecc <RCCEx_PLLSAI1_Config+0x1d0>
 8002ebe:	4b06      	ldr	r3, [pc, #24]	; (8002ed8 <RCCEx_PLLSAI1_Config+0x1dc>)
 8002ec0:	691a      	ldr	r2, [r3, #16]
 8002ec2:	687b      	ldr	r3, [r7, #4]
 8002ec4:	699b      	ldr	r3, [r3, #24]
 8002ec6:	4904      	ldr	r1, [pc, #16]	; (8002ed8 <RCCEx_PLLSAI1_Config+0x1dc>)
 8002ec8:	4313      	orrs	r3, r2
 8002eca:	610b      	str	r3, [r1, #16]
 8002ecc:	7bfb      	ldrb	r3, [r7, #15]
 8002ece:	4618      	mov	r0, r3
 8002ed0:	3710      	adds	r7, #16
 8002ed2:	46bd      	mov	sp, r7
 8002ed4:	bd80      	pop	{r7, pc}
 8002ed6:	bf00      	nop
 8002ed8:	40021000 	.word	0x40021000

08002edc <HAL_UART_Init>:
 8002edc:	b580      	push	{r7, lr}
 8002ede:	b082      	sub	sp, #8
 8002ee0:	af00      	add	r7, sp, #0
 8002ee2:	6078      	str	r0, [r7, #4]
 8002ee4:	687b      	ldr	r3, [r7, #4]
 8002ee6:	2b00      	cmp	r3, #0
 8002ee8:	d101      	bne.n	8002eee <HAL_UART_Init+0x12>
 8002eea:	2301      	movs	r3, #1
 8002eec:	e040      	b.n	8002f70 <HAL_UART_Init+0x94>
 8002eee:	687b      	ldr	r3, [r7, #4]
 8002ef0:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8002ef2:	2b00      	cmp	r3, #0
 8002ef4:	d106      	bne.n	8002f04 <HAL_UART_Init+0x28>
 8002ef6:	687b      	ldr	r3, [r7, #4]
 8002ef8:	2200      	movs	r2, #0
 8002efa:	f883 2070 	strb.w	r2, [r3, #112]	; 0x70
 8002efe:	6878      	ldr	r0, [r7, #4]
 8002f00:	f7fd feb4 	bl	8000c6c <HAL_UART_MspInit>
 8002f04:	687b      	ldr	r3, [r7, #4]
 8002f06:	2224      	movs	r2, #36	; 0x24
 8002f08:	675a      	str	r2, [r3, #116]	; 0x74
 8002f0a:	687b      	ldr	r3, [r7, #4]
 8002f0c:	681b      	ldr	r3, [r3, #0]
 8002f0e:	681a      	ldr	r2, [r3, #0]
 8002f10:	687b      	ldr	r3, [r7, #4]
 8002f12:	681b      	ldr	r3, [r3, #0]
 8002f14:	f022 0201 	bic.w	r2, r2, #1
 8002f18:	601a      	str	r2, [r3, #0]
 8002f1a:	6878      	ldr	r0, [r7, #4]
 8002f1c:	f000 f82c 	bl	8002f78 <UART_SetConfig>
 8002f20:	4603      	mov	r3, r0
 8002f22:	2b01      	cmp	r3, #1
 8002f24:	d101      	bne.n	8002f2a <HAL_UART_Init+0x4e>
 8002f26:	2301      	movs	r3, #1
 8002f28:	e022      	b.n	8002f70 <HAL_UART_Init+0x94>
 8002f2a:	687b      	ldr	r3, [r7, #4]
 8002f2c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002f2e:	2b00      	cmp	r3, #0
 8002f30:	d002      	beq.n	8002f38 <HAL_UART_Init+0x5c>
 8002f32:	6878      	ldr	r0, [r7, #4]
 8002f34:	f000 faea 	bl	800350c <UART_AdvFeatureConfig>
 8002f38:	687b      	ldr	r3, [r7, #4]
 8002f3a:	681b      	ldr	r3, [r3, #0]
 8002f3c:	685a      	ldr	r2, [r3, #4]
 8002f3e:	687b      	ldr	r3, [r7, #4]
 8002f40:	681b      	ldr	r3, [r3, #0]
 8002f42:	f422 4290 	bic.w	r2, r2, #18432	; 0x4800
 8002f46:	605a      	str	r2, [r3, #4]
 8002f48:	687b      	ldr	r3, [r7, #4]
 8002f4a:	681b      	ldr	r3, [r3, #0]
 8002f4c:	689a      	ldr	r2, [r3, #8]
 8002f4e:	687b      	ldr	r3, [r7, #4]
 8002f50:	681b      	ldr	r3, [r3, #0]
 8002f52:	f022 022a 	bic.w	r2, r2, #42	; 0x2a
 8002f56:	609a      	str	r2, [r3, #8]
 8002f58:	687b      	ldr	r3, [r7, #4]
 8002f5a:	681b      	ldr	r3, [r3, #0]
 8002f5c:	681a      	ldr	r2, [r3, #0]
 8002f5e:	687b      	ldr	r3, [r7, #4]
 8002f60:	681b      	ldr	r3, [r3, #0]
 8002f62:	f042 0201 	orr.w	r2, r2, #1
 8002f66:	601a      	str	r2, [r3, #0]
 8002f68:	6878      	ldr	r0, [r7, #4]
 8002f6a:	f000 fb71 	bl	8003650 <UART_CheckIdleState>
 8002f6e:	4603      	mov	r3, r0
 8002f70:	4618      	mov	r0, r3
 8002f72:	3708      	adds	r7, #8
 8002f74:	46bd      	mov	sp, r7
 8002f76:	bd80      	pop	{r7, pc}

08002f78 <UART_SetConfig>:
 8002f78:	e92d 4890 	stmdb	sp!, {r4, r7, fp, lr}
 8002f7c:	b088      	sub	sp, #32
 8002f7e:	af00      	add	r7, sp, #0
 8002f80:	6078      	str	r0, [r7, #4]
 8002f82:	2300      	movs	r3, #0
 8002f84:	617b      	str	r3, [r7, #20]
 8002f86:	2300      	movs	r3, #0
 8002f88:	74fb      	strb	r3, [r7, #19]
 8002f8a:	2300      	movs	r3, #0
 8002f8c:	60fb      	str	r3, [r7, #12]
 8002f8e:	687b      	ldr	r3, [r7, #4]
 8002f90:	689a      	ldr	r2, [r3, #8]
 8002f92:	687b      	ldr	r3, [r7, #4]
 8002f94:	691b      	ldr	r3, [r3, #16]
 8002f96:	431a      	orrs	r2, r3
 8002f98:	687b      	ldr	r3, [r7, #4]
 8002f9a:	695b      	ldr	r3, [r3, #20]
 8002f9c:	431a      	orrs	r2, r3
 8002f9e:	687b      	ldr	r3, [r7, #4]
 8002fa0:	69db      	ldr	r3, [r3, #28]
 8002fa2:	4313      	orrs	r3, r2
 8002fa4:	61fb      	str	r3, [r7, #28]
 8002fa6:	687b      	ldr	r3, [r7, #4]
 8002fa8:	681b      	ldr	r3, [r3, #0]
 8002faa:	681a      	ldr	r2, [r3, #0]
 8002fac:	4bbc      	ldr	r3, [pc, #752]	; (80032a0 <UART_SetConfig+0x328>)
 8002fae:	4013      	ands	r3, r2
 8002fb0:	687a      	ldr	r2, [r7, #4]
 8002fb2:	6812      	ldr	r2, [r2, #0]
 8002fb4:	69f9      	ldr	r1, [r7, #28]
 8002fb6:	430b      	orrs	r3, r1
 8002fb8:	6013      	str	r3, [r2, #0]
 8002fba:	687b      	ldr	r3, [r7, #4]
 8002fbc:	681b      	ldr	r3, [r3, #0]
 8002fbe:	685b      	ldr	r3, [r3, #4]
 8002fc0:	f423 5140 	bic.w	r1, r3, #12288	; 0x3000
 8002fc4:	687b      	ldr	r3, [r7, #4]
 8002fc6:	68da      	ldr	r2, [r3, #12]
 8002fc8:	687b      	ldr	r3, [r7, #4]
 8002fca:	681b      	ldr	r3, [r3, #0]
 8002fcc:	430a      	orrs	r2, r1
 8002fce:	605a      	str	r2, [r3, #4]
 8002fd0:	687b      	ldr	r3, [r7, #4]
 8002fd2:	699b      	ldr	r3, [r3, #24]
 8002fd4:	61fb      	str	r3, [r7, #28]
 8002fd6:	687b      	ldr	r3, [r7, #4]
 8002fd8:	681b      	ldr	r3, [r3, #0]
 8002fda:	4ab2      	ldr	r2, [pc, #712]	; (80032a4 <UART_SetConfig+0x32c>)
 8002fdc:	4293      	cmp	r3, r2
 8002fde:	d004      	beq.n	8002fea <UART_SetConfig+0x72>
 8002fe0:	687b      	ldr	r3, [r7, #4]
 8002fe2:	6a1b      	ldr	r3, [r3, #32]
 8002fe4:	69fa      	ldr	r2, [r7, #28]
 8002fe6:	4313      	orrs	r3, r2
 8002fe8:	61fb      	str	r3, [r7, #28]
 8002fea:	687b      	ldr	r3, [r7, #4]
 8002fec:	681b      	ldr	r3, [r3, #0]
 8002fee:	689b      	ldr	r3, [r3, #8]
 8002ff0:	f423 6130 	bic.w	r1, r3, #2816	; 0xb00
 8002ff4:	687b      	ldr	r3, [r7, #4]
 8002ff6:	681b      	ldr	r3, [r3, #0]
 8002ff8:	69fa      	ldr	r2, [r7, #28]
 8002ffa:	430a      	orrs	r2, r1
 8002ffc:	609a      	str	r2, [r3, #8]
 8002ffe:	687b      	ldr	r3, [r7, #4]
 8003000:	681b      	ldr	r3, [r3, #0]
 8003002:	4aa9      	ldr	r2, [pc, #676]	; (80032a8 <UART_SetConfig+0x330>)
 8003004:	4293      	cmp	r3, r2
 8003006:	d121      	bne.n	800304c <UART_SetConfig+0xd4>
 8003008:	4ba8      	ldr	r3, [pc, #672]	; (80032ac <UART_SetConfig+0x334>)
 800300a:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 800300e:	f003 0303 	and.w	r3, r3, #3
 8003012:	2b03      	cmp	r3, #3
 8003014:	d816      	bhi.n	8003044 <UART_SetConfig+0xcc>
 8003016:	a201      	add	r2, pc, #4	; (adr r2, 800301c <UART_SetConfig+0xa4>)
 8003018:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800301c:	0800302d 	.word	0x0800302d
 8003020:	08003039 	.word	0x08003039
 8003024:	08003033 	.word	0x08003033
 8003028:	0800303f 	.word	0x0800303f
 800302c:	2301      	movs	r3, #1
 800302e:	76fb      	strb	r3, [r7, #27]
 8003030:	e072      	b.n	8003118 <UART_SetConfig+0x1a0>
 8003032:	2302      	movs	r3, #2
 8003034:	76fb      	strb	r3, [r7, #27]
 8003036:	e06f      	b.n	8003118 <UART_SetConfig+0x1a0>
 8003038:	2304      	movs	r3, #4
 800303a:	76fb      	strb	r3, [r7, #27]
 800303c:	e06c      	b.n	8003118 <UART_SetConfig+0x1a0>
 800303e:	2308      	movs	r3, #8
 8003040:	76fb      	strb	r3, [r7, #27]
 8003042:	e069      	b.n	8003118 <UART_SetConfig+0x1a0>
 8003044:	2310      	movs	r3, #16
 8003046:	76fb      	strb	r3, [r7, #27]
 8003048:	bf00      	nop
 800304a:	e065      	b.n	8003118 <UART_SetConfig+0x1a0>
 800304c:	687b      	ldr	r3, [r7, #4]
 800304e:	681b      	ldr	r3, [r3, #0]
 8003050:	4a97      	ldr	r2, [pc, #604]	; (80032b0 <UART_SetConfig+0x338>)
 8003052:	4293      	cmp	r3, r2
 8003054:	d134      	bne.n	80030c0 <UART_SetConfig+0x148>
 8003056:	4b95      	ldr	r3, [pc, #596]	; (80032ac <UART_SetConfig+0x334>)
 8003058:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 800305c:	f003 030c 	and.w	r3, r3, #12
 8003060:	2b0c      	cmp	r3, #12
 8003062:	d829      	bhi.n	80030b8 <UART_SetConfig+0x140>
 8003064:	a201      	add	r2, pc, #4	; (adr r2, 800306c <UART_SetConfig+0xf4>)
 8003066:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800306a:	bf00      	nop
 800306c:	080030a1 	.word	0x080030a1
 8003070:	080030b9 	.word	0x080030b9
 8003074:	080030b9 	.word	0x080030b9
 8003078:	080030b9 	.word	0x080030b9
 800307c:	080030ad 	.word	0x080030ad
 8003080:	080030b9 	.word	0x080030b9
 8003084:	080030b9 	.word	0x080030b9
 8003088:	080030b9 	.word	0x080030b9
 800308c:	080030a7 	.word	0x080030a7
 8003090:	080030b9 	.word	0x080030b9
 8003094:	080030b9 	.word	0x080030b9
 8003098:	080030b9 	.word	0x080030b9
 800309c:	080030b3 	.word	0x080030b3
 80030a0:	2300      	movs	r3, #0
 80030a2:	76fb      	strb	r3, [r7, #27]
 80030a4:	e038      	b.n	8003118 <UART_SetConfig+0x1a0>
 80030a6:	2302      	movs	r3, #2
 80030a8:	76fb      	strb	r3, [r7, #27]
 80030aa:	e035      	b.n	8003118 <UART_SetConfig+0x1a0>
 80030ac:	2304      	movs	r3, #4
 80030ae:	76fb      	strb	r3, [r7, #27]
 80030b0:	e032      	b.n	8003118 <UART_SetConfig+0x1a0>
 80030b2:	2308      	movs	r3, #8
 80030b4:	76fb      	strb	r3, [r7, #27]
 80030b6:	e02f      	b.n	8003118 <UART_SetConfig+0x1a0>
 80030b8:	2310      	movs	r3, #16
 80030ba:	76fb      	strb	r3, [r7, #27]
 80030bc:	bf00      	nop
 80030be:	e02b      	b.n	8003118 <UART_SetConfig+0x1a0>
 80030c0:	687b      	ldr	r3, [r7, #4]
 80030c2:	681b      	ldr	r3, [r3, #0]
 80030c4:	4a77      	ldr	r2, [pc, #476]	; (80032a4 <UART_SetConfig+0x32c>)
 80030c6:	4293      	cmp	r3, r2
 80030c8:	d124      	bne.n	8003114 <UART_SetConfig+0x19c>
 80030ca:	4b78      	ldr	r3, [pc, #480]	; (80032ac <UART_SetConfig+0x334>)
 80030cc:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 80030d0:	f403 6340 	and.w	r3, r3, #3072	; 0xc00
 80030d4:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 80030d8:	d012      	beq.n	8003100 <UART_SetConfig+0x188>
 80030da:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 80030de:	d802      	bhi.n	80030e6 <UART_SetConfig+0x16e>
 80030e0:	2b00      	cmp	r3, #0
 80030e2:	d007      	beq.n	80030f4 <UART_SetConfig+0x17c>
 80030e4:	e012      	b.n	800310c <UART_SetConfig+0x194>
 80030e6:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 80030ea:	d006      	beq.n	80030fa <UART_SetConfig+0x182>
 80030ec:	f5b3 6f40 	cmp.w	r3, #3072	; 0xc00
 80030f0:	d009      	beq.n	8003106 <UART_SetConfig+0x18e>
 80030f2:	e00b      	b.n	800310c <UART_SetConfig+0x194>
 80030f4:	2300      	movs	r3, #0
 80030f6:	76fb      	strb	r3, [r7, #27]
 80030f8:	e00e      	b.n	8003118 <UART_SetConfig+0x1a0>
 80030fa:	2302      	movs	r3, #2
 80030fc:	76fb      	strb	r3, [r7, #27]
 80030fe:	e00b      	b.n	8003118 <UART_SetConfig+0x1a0>
 8003100:	2304      	movs	r3, #4
 8003102:	76fb      	strb	r3, [r7, #27]
 8003104:	e008      	b.n	8003118 <UART_SetConfig+0x1a0>
 8003106:	2308      	movs	r3, #8
 8003108:	76fb      	strb	r3, [r7, #27]
 800310a:	e005      	b.n	8003118 <UART_SetConfig+0x1a0>
 800310c:	2310      	movs	r3, #16
 800310e:	76fb      	strb	r3, [r7, #27]
 8003110:	bf00      	nop
 8003112:	e001      	b.n	8003118 <UART_SetConfig+0x1a0>
 8003114:	2310      	movs	r3, #16
 8003116:	76fb      	strb	r3, [r7, #27]
 8003118:	687b      	ldr	r3, [r7, #4]
 800311a:	681b      	ldr	r3, [r3, #0]
 800311c:	4a61      	ldr	r2, [pc, #388]	; (80032a4 <UART_SetConfig+0x32c>)
 800311e:	4293      	cmp	r3, r2
 8003120:	f040 80f4 	bne.w	800330c <UART_SetConfig+0x394>
 8003124:	7efb      	ldrb	r3, [r7, #27]
 8003126:	2b08      	cmp	r3, #8
 8003128:	d823      	bhi.n	8003172 <UART_SetConfig+0x1fa>
 800312a:	a201      	add	r2, pc, #4	; (adr r2, 8003130 <UART_SetConfig+0x1b8>)
 800312c:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8003130:	08003155 	.word	0x08003155
 8003134:	08003173 	.word	0x08003173
 8003138:	0800315d 	.word	0x0800315d
 800313c:	08003173 	.word	0x08003173
 8003140:	08003163 	.word	0x08003163
 8003144:	08003173 	.word	0x08003173
 8003148:	08003173 	.word	0x08003173
 800314c:	08003173 	.word	0x08003173
 8003150:	0800316b 	.word	0x0800316b
 8003154:	f7ff fb44 	bl	80027e0 <HAL_RCC_GetPCLK1Freq>
 8003158:	60f8      	str	r0, [r7, #12]
 800315a:	e00d      	b.n	8003178 <UART_SetConfig+0x200>
 800315c:	4b55      	ldr	r3, [pc, #340]	; (80032b4 <UART_SetConfig+0x33c>)
 800315e:	60fb      	str	r3, [r7, #12]
 8003160:	e00a      	b.n	8003178 <UART_SetConfig+0x200>
 8003162:	f7ff faa7 	bl	80026b4 <HAL_RCC_GetSysClockFreq>
 8003166:	60f8      	str	r0, [r7, #12]
 8003168:	e006      	b.n	8003178 <UART_SetConfig+0x200>
 800316a:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 800316e:	60fb      	str	r3, [r7, #12]
 8003170:	e002      	b.n	8003178 <UART_SetConfig+0x200>
 8003172:	2301      	movs	r3, #1
 8003174:	74fb      	strb	r3, [r7, #19]
 8003176:	bf00      	nop
 8003178:	68fb      	ldr	r3, [r7, #12]
 800317a:	2b00      	cmp	r3, #0
 800317c:	f000 81b9 	beq.w	80034f2 <UART_SetConfig+0x57a>
 8003180:	687b      	ldr	r3, [r7, #4]
 8003182:	685a      	ldr	r2, [r3, #4]
 8003184:	4613      	mov	r3, r2
 8003186:	005b      	lsls	r3, r3, #1
 8003188:	4413      	add	r3, r2
 800318a:	68fa      	ldr	r2, [r7, #12]
 800318c:	429a      	cmp	r2, r3
 800318e:	d305      	bcc.n	800319c <UART_SetConfig+0x224>
 8003190:	687b      	ldr	r3, [r7, #4]
 8003192:	685b      	ldr	r3, [r3, #4]
 8003194:	031b      	lsls	r3, r3, #12
 8003196:	68fa      	ldr	r2, [r7, #12]
 8003198:	429a      	cmp	r2, r3
 800319a:	d902      	bls.n	80031a2 <UART_SetConfig+0x22a>
 800319c:	2301      	movs	r3, #1
 800319e:	74fb      	strb	r3, [r7, #19]
 80031a0:	e1a7      	b.n	80034f2 <UART_SetConfig+0x57a>
 80031a2:	7efb      	ldrb	r3, [r7, #27]
 80031a4:	2b08      	cmp	r3, #8
 80031a6:	f200 809e 	bhi.w	80032e6 <UART_SetConfig+0x36e>
 80031aa:	a201      	add	r2, pc, #4	; (adr r2, 80031b0 <UART_SetConfig+0x238>)
 80031ac:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80031b0:	080031d5 	.word	0x080031d5
 80031b4:	080032e7 	.word	0x080032e7
 80031b8:	08003221 	.word	0x08003221
 80031bc:	080032e7 	.word	0x080032e7
 80031c0:	08003255 	.word	0x08003255
 80031c4:	080032e7 	.word	0x080032e7
 80031c8:	080032e7 	.word	0x080032e7
 80031cc:	080032e7 	.word	0x080032e7
 80031d0:	080032bd 	.word	0x080032bd
 80031d4:	f7ff fb04 	bl	80027e0 <HAL_RCC_GetPCLK1Freq>
 80031d8:	4603      	mov	r3, r0
 80031da:	4619      	mov	r1, r3
 80031dc:	f04f 0200 	mov.w	r2, #0
 80031e0:	f04f 0300 	mov.w	r3, #0
 80031e4:	f04f 0400 	mov.w	r4, #0
 80031e8:	0214      	lsls	r4, r2, #8
 80031ea:	ea44 6411 	orr.w	r4, r4, r1, lsr #24
 80031ee:	020b      	lsls	r3, r1, #8
 80031f0:	687a      	ldr	r2, [r7, #4]
 80031f2:	6852      	ldr	r2, [r2, #4]
 80031f4:	0852      	lsrs	r2, r2, #1
 80031f6:	4611      	mov	r1, r2
 80031f8:	f04f 0200 	mov.w	r2, #0
 80031fc:	eb13 0b01 	adds.w	fp, r3, r1
 8003200:	eb44 0c02 	adc.w	ip, r4, r2
 8003204:	4658      	mov	r0, fp
 8003206:	4661      	mov	r1, ip
 8003208:	687b      	ldr	r3, [r7, #4]
 800320a:	685b      	ldr	r3, [r3, #4]
 800320c:	f04f 0400 	mov.w	r4, #0
 8003210:	461a      	mov	r2, r3
 8003212:	4623      	mov	r3, r4
 8003214:	f7fc ffda 	bl	80001cc <__aeabi_uldivmod>
 8003218:	4603      	mov	r3, r0
 800321a:	460c      	mov	r4, r1
 800321c:	617b      	str	r3, [r7, #20]
 800321e:	e065      	b.n	80032ec <UART_SetConfig+0x374>
 8003220:	687b      	ldr	r3, [r7, #4]
 8003222:	685b      	ldr	r3, [r3, #4]
 8003224:	085b      	lsrs	r3, r3, #1
 8003226:	f04f 0400 	mov.w	r4, #0
 800322a:	4923      	ldr	r1, [pc, #140]	; (80032b8 <UART_SetConfig+0x340>)
 800322c:	f04f 0200 	mov.w	r2, #0
 8003230:	eb13 0b01 	adds.w	fp, r3, r1
 8003234:	eb44 0c02 	adc.w	ip, r4, r2
 8003238:	4658      	mov	r0, fp
 800323a:	4661      	mov	r1, ip
 800323c:	687b      	ldr	r3, [r7, #4]
 800323e:	685b      	ldr	r3, [r3, #4]
 8003240:	f04f 0400 	mov.w	r4, #0
 8003244:	461a      	mov	r2, r3
 8003246:	4623      	mov	r3, r4
 8003248:	f7fc ffc0 	bl	80001cc <__aeabi_uldivmod>
 800324c:	4603      	mov	r3, r0
 800324e:	460c      	mov	r4, r1
 8003250:	617b      	str	r3, [r7, #20]
 8003252:	e04b      	b.n	80032ec <UART_SetConfig+0x374>
 8003254:	f7ff fa2e 	bl	80026b4 <HAL_RCC_GetSysClockFreq>
 8003258:	4603      	mov	r3, r0
 800325a:	4619      	mov	r1, r3
 800325c:	f04f 0200 	mov.w	r2, #0
 8003260:	f04f 0300 	mov.w	r3, #0
 8003264:	f04f 0400 	mov.w	r4, #0
 8003268:	0214      	lsls	r4, r2, #8
 800326a:	ea44 6411 	orr.w	r4, r4, r1, lsr #24
 800326e:	020b      	lsls	r3, r1, #8
 8003270:	687a      	ldr	r2, [r7, #4]
 8003272:	6852      	ldr	r2, [r2, #4]
 8003274:	0852      	lsrs	r2, r2, #1
 8003276:	4611      	mov	r1, r2
 8003278:	f04f 0200 	mov.w	r2, #0
 800327c:	eb13 0b01 	adds.w	fp, r3, r1
 8003280:	eb44 0c02 	adc.w	ip, r4, r2
 8003284:	4658      	mov	r0, fp
 8003286:	4661      	mov	r1, ip
 8003288:	687b      	ldr	r3, [r7, #4]
 800328a:	685b      	ldr	r3, [r3, #4]
 800328c:	f04f 0400 	mov.w	r4, #0
 8003290:	461a      	mov	r2, r3
 8003292:	4623      	mov	r3, r4
 8003294:	f7fc ff9a 	bl	80001cc <__aeabi_uldivmod>
 8003298:	4603      	mov	r3, r0
 800329a:	460c      	mov	r4, r1
 800329c:	617b      	str	r3, [r7, #20]
 800329e:	e025      	b.n	80032ec <UART_SetConfig+0x374>
 80032a0:	efff69f3 	.word	0xefff69f3
 80032a4:	40008000 	.word	0x40008000
 80032a8:	40013800 	.word	0x40013800
 80032ac:	40021000 	.word	0x40021000
 80032b0:	40004400 	.word	0x40004400
 80032b4:	00f42400 	.word	0x00f42400
 80032b8:	f4240000 	.word	0xf4240000
 80032bc:	687b      	ldr	r3, [r7, #4]
 80032be:	685b      	ldr	r3, [r3, #4]
 80032c0:	085b      	lsrs	r3, r3, #1
 80032c2:	f04f 0400 	mov.w	r4, #0
 80032c6:	f513 0000 	adds.w	r0, r3, #8388608	; 0x800000
 80032ca:	f144 0100 	adc.w	r1, r4, #0
 80032ce:	687b      	ldr	r3, [r7, #4]
 80032d0:	685b      	ldr	r3, [r3, #4]
 80032d2:	f04f 0400 	mov.w	r4, #0
 80032d6:	461a      	mov	r2, r3
 80032d8:	4623      	mov	r3, r4
 80032da:	f7fc ff77 	bl	80001cc <__aeabi_uldivmod>
 80032de:	4603      	mov	r3, r0
 80032e0:	460c      	mov	r4, r1
 80032e2:	617b      	str	r3, [r7, #20]
 80032e4:	e002      	b.n	80032ec <UART_SetConfig+0x374>
 80032e6:	2301      	movs	r3, #1
 80032e8:	74fb      	strb	r3, [r7, #19]
 80032ea:	bf00      	nop
 80032ec:	697b      	ldr	r3, [r7, #20]
 80032ee:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 80032f2:	d308      	bcc.n	8003306 <UART_SetConfig+0x38e>
 80032f4:	697b      	ldr	r3, [r7, #20]
 80032f6:	f5b3 1f80 	cmp.w	r3, #1048576	; 0x100000
 80032fa:	d204      	bcs.n	8003306 <UART_SetConfig+0x38e>
 80032fc:	687b      	ldr	r3, [r7, #4]
 80032fe:	681b      	ldr	r3, [r3, #0]
 8003300:	697a      	ldr	r2, [r7, #20]
 8003302:	60da      	str	r2, [r3, #12]
 8003304:	e0f5      	b.n	80034f2 <UART_SetConfig+0x57a>
 8003306:	2301      	movs	r3, #1
 8003308:	74fb      	strb	r3, [r7, #19]
 800330a:	e0f2      	b.n	80034f2 <UART_SetConfig+0x57a>
 800330c:	687b      	ldr	r3, [r7, #4]
 800330e:	69db      	ldr	r3, [r3, #28]
 8003310:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 8003314:	d17f      	bne.n	8003416 <UART_SetConfig+0x49e>
 8003316:	7efb      	ldrb	r3, [r7, #27]
 8003318:	2b08      	cmp	r3, #8
 800331a:	d85c      	bhi.n	80033d6 <UART_SetConfig+0x45e>
 800331c:	a201      	add	r2, pc, #4	; (adr r2, 8003324 <UART_SetConfig+0x3ac>)
 800331e:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8003322:	bf00      	nop
 8003324:	08003349 	.word	0x08003349
 8003328:	08003367 	.word	0x08003367
 800332c:	08003385 	.word	0x08003385
 8003330:	080033d7 	.word	0x080033d7
 8003334:	080033a1 	.word	0x080033a1
 8003338:	080033d7 	.word	0x080033d7
 800333c:	080033d7 	.word	0x080033d7
 8003340:	080033d7 	.word	0x080033d7
 8003344:	080033bf 	.word	0x080033bf
 8003348:	f7ff fa4a 	bl	80027e0 <HAL_RCC_GetPCLK1Freq>
 800334c:	4603      	mov	r3, r0
 800334e:	005a      	lsls	r2, r3, #1
 8003350:	687b      	ldr	r3, [r7, #4]
 8003352:	685b      	ldr	r3, [r3, #4]
 8003354:	085b      	lsrs	r3, r3, #1
 8003356:	441a      	add	r2, r3
 8003358:	687b      	ldr	r3, [r7, #4]
 800335a:	685b      	ldr	r3, [r3, #4]
 800335c:	fbb2 f3f3 	udiv	r3, r2, r3
 8003360:	b29b      	uxth	r3, r3
 8003362:	617b      	str	r3, [r7, #20]
 8003364:	e03a      	b.n	80033dc <UART_SetConfig+0x464>
 8003366:	f7ff fa51 	bl	800280c <HAL_RCC_GetPCLK2Freq>
 800336a:	4603      	mov	r3, r0
 800336c:	005a      	lsls	r2, r3, #1
 800336e:	687b      	ldr	r3, [r7, #4]
 8003370:	685b      	ldr	r3, [r3, #4]
 8003372:	085b      	lsrs	r3, r3, #1
 8003374:	441a      	add	r2, r3
 8003376:	687b      	ldr	r3, [r7, #4]
 8003378:	685b      	ldr	r3, [r3, #4]
 800337a:	fbb2 f3f3 	udiv	r3, r2, r3
 800337e:	b29b      	uxth	r3, r3
 8003380:	617b      	str	r3, [r7, #20]
 8003382:	e02b      	b.n	80033dc <UART_SetConfig+0x464>
 8003384:	687b      	ldr	r3, [r7, #4]
 8003386:	685b      	ldr	r3, [r3, #4]
 8003388:	085b      	lsrs	r3, r3, #1
 800338a:	f103 73f4 	add.w	r3, r3, #31981568	; 0x1e80000
 800338e:	f503 4390 	add.w	r3, r3, #18432	; 0x4800
 8003392:	687a      	ldr	r2, [r7, #4]
 8003394:	6852      	ldr	r2, [r2, #4]
 8003396:	fbb3 f3f2 	udiv	r3, r3, r2
 800339a:	b29b      	uxth	r3, r3
 800339c:	617b      	str	r3, [r7, #20]
 800339e:	e01d      	b.n	80033dc <UART_SetConfig+0x464>
 80033a0:	f7ff f988 	bl	80026b4 <HAL_RCC_GetSysClockFreq>
 80033a4:	4603      	mov	r3, r0
 80033a6:	005a      	lsls	r2, r3, #1
 80033a8:	687b      	ldr	r3, [r7, #4]
 80033aa:	685b      	ldr	r3, [r3, #4]
 80033ac:	085b      	lsrs	r3, r3, #1
 80033ae:	441a      	add	r2, r3
 80033b0:	687b      	ldr	r3, [r7, #4]
 80033b2:	685b      	ldr	r3, [r3, #4]
 80033b4:	fbb2 f3f3 	udiv	r3, r2, r3
 80033b8:	b29b      	uxth	r3, r3
 80033ba:	617b      	str	r3, [r7, #20]
 80033bc:	e00e      	b.n	80033dc <UART_SetConfig+0x464>
 80033be:	687b      	ldr	r3, [r7, #4]
 80033c0:	685b      	ldr	r3, [r3, #4]
 80033c2:	085b      	lsrs	r3, r3, #1
 80033c4:	f503 3280 	add.w	r2, r3, #65536	; 0x10000
 80033c8:	687b      	ldr	r3, [r7, #4]
 80033ca:	685b      	ldr	r3, [r3, #4]
 80033cc:	fbb2 f3f3 	udiv	r3, r2, r3
 80033d0:	b29b      	uxth	r3, r3
 80033d2:	617b      	str	r3, [r7, #20]
 80033d4:	e002      	b.n	80033dc <UART_SetConfig+0x464>
 80033d6:	2301      	movs	r3, #1
 80033d8:	74fb      	strb	r3, [r7, #19]
 80033da:	bf00      	nop
 80033dc:	697b      	ldr	r3, [r7, #20]
 80033de:	2b0f      	cmp	r3, #15
 80033e0:	d916      	bls.n	8003410 <UART_SetConfig+0x498>
 80033e2:	697b      	ldr	r3, [r7, #20]
 80033e4:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 80033e8:	d212      	bcs.n	8003410 <UART_SetConfig+0x498>
 80033ea:	697b      	ldr	r3, [r7, #20]
 80033ec:	b29b      	uxth	r3, r3
 80033ee:	f023 030f 	bic.w	r3, r3, #15
 80033f2:	817b      	strh	r3, [r7, #10]
 80033f4:	697b      	ldr	r3, [r7, #20]
 80033f6:	085b      	lsrs	r3, r3, #1
 80033f8:	b29b      	uxth	r3, r3
 80033fa:	f003 0307 	and.w	r3, r3, #7
 80033fe:	b29a      	uxth	r2, r3
 8003400:	897b      	ldrh	r3, [r7, #10]
 8003402:	4313      	orrs	r3, r2
 8003404:	817b      	strh	r3, [r7, #10]
 8003406:	687b      	ldr	r3, [r7, #4]
 8003408:	681b      	ldr	r3, [r3, #0]
 800340a:	897a      	ldrh	r2, [r7, #10]
 800340c:	60da      	str	r2, [r3, #12]
 800340e:	e070      	b.n	80034f2 <UART_SetConfig+0x57a>
 8003410:	2301      	movs	r3, #1
 8003412:	74fb      	strb	r3, [r7, #19]
 8003414:	e06d      	b.n	80034f2 <UART_SetConfig+0x57a>
 8003416:	7efb      	ldrb	r3, [r7, #27]
 8003418:	2b08      	cmp	r3, #8
 800341a:	d859      	bhi.n	80034d0 <UART_SetConfig+0x558>
 800341c:	a201      	add	r2, pc, #4	; (adr r2, 8003424 <UART_SetConfig+0x4ac>)
 800341e:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8003422:	bf00      	nop
 8003424:	08003449 	.word	0x08003449
 8003428:	08003465 	.word	0x08003465
 800342c:	08003481 	.word	0x08003481
 8003430:	080034d1 	.word	0x080034d1
 8003434:	0800349d 	.word	0x0800349d
 8003438:	080034d1 	.word	0x080034d1
 800343c:	080034d1 	.word	0x080034d1
 8003440:	080034d1 	.word	0x080034d1
 8003444:	080034b9 	.word	0x080034b9
 8003448:	f7ff f9ca 	bl	80027e0 <HAL_RCC_GetPCLK1Freq>
 800344c:	4602      	mov	r2, r0
 800344e:	687b      	ldr	r3, [r7, #4]
 8003450:	685b      	ldr	r3, [r3, #4]
 8003452:	085b      	lsrs	r3, r3, #1
 8003454:	441a      	add	r2, r3
 8003456:	687b      	ldr	r3, [r7, #4]
 8003458:	685b      	ldr	r3, [r3, #4]
 800345a:	fbb2 f3f3 	udiv	r3, r2, r3
 800345e:	b29b      	uxth	r3, r3
 8003460:	617b      	str	r3, [r7, #20]
 8003462:	e038      	b.n	80034d6 <UART_SetConfig+0x55e>
 8003464:	f7ff f9d2 	bl	800280c <HAL_RCC_GetPCLK2Freq>
 8003468:	4602      	mov	r2, r0
 800346a:	687b      	ldr	r3, [r7, #4]
 800346c:	685b      	ldr	r3, [r3, #4]
 800346e:	085b      	lsrs	r3, r3, #1
 8003470:	441a      	add	r2, r3
 8003472:	687b      	ldr	r3, [r7, #4]
 8003474:	685b      	ldr	r3, [r3, #4]
 8003476:	fbb2 f3f3 	udiv	r3, r2, r3
 800347a:	b29b      	uxth	r3, r3
 800347c:	617b      	str	r3, [r7, #20]
 800347e:	e02a      	b.n	80034d6 <UART_SetConfig+0x55e>
 8003480:	687b      	ldr	r3, [r7, #4]
 8003482:	685b      	ldr	r3, [r3, #4]
 8003484:	085b      	lsrs	r3, r3, #1
 8003486:	f503 0374 	add.w	r3, r3, #15990784	; 0xf40000
 800348a:	f503 5310 	add.w	r3, r3, #9216	; 0x2400
 800348e:	687a      	ldr	r2, [r7, #4]
 8003490:	6852      	ldr	r2, [r2, #4]
 8003492:	fbb3 f3f2 	udiv	r3, r3, r2
 8003496:	b29b      	uxth	r3, r3
 8003498:	617b      	str	r3, [r7, #20]
 800349a:	e01c      	b.n	80034d6 <UART_SetConfig+0x55e>
 800349c:	f7ff f90a 	bl	80026b4 <HAL_RCC_GetSysClockFreq>
 80034a0:	4602      	mov	r2, r0
 80034a2:	687b      	ldr	r3, [r7, #4]
 80034a4:	685b      	ldr	r3, [r3, #4]
 80034a6:	085b      	lsrs	r3, r3, #1
 80034a8:	441a      	add	r2, r3
 80034aa:	687b      	ldr	r3, [r7, #4]
 80034ac:	685b      	ldr	r3, [r3, #4]
 80034ae:	fbb2 f3f3 	udiv	r3, r2, r3
 80034b2:	b29b      	uxth	r3, r3
 80034b4:	617b      	str	r3, [r7, #20]
 80034b6:	e00e      	b.n	80034d6 <UART_SetConfig+0x55e>
 80034b8:	687b      	ldr	r3, [r7, #4]
 80034ba:	685b      	ldr	r3, [r3, #4]
 80034bc:	085b      	lsrs	r3, r3, #1
 80034be:	f503 4200 	add.w	r2, r3, #32768	; 0x8000
 80034c2:	687b      	ldr	r3, [r7, #4]
 80034c4:	685b      	ldr	r3, [r3, #4]
 80034c6:	fbb2 f3f3 	udiv	r3, r2, r3
 80034ca:	b29b      	uxth	r3, r3
 80034cc:	617b      	str	r3, [r7, #20]
 80034ce:	e002      	b.n	80034d6 <UART_SetConfig+0x55e>
 80034d0:	2301      	movs	r3, #1
 80034d2:	74fb      	strb	r3, [r7, #19]
 80034d4:	bf00      	nop
 80034d6:	697b      	ldr	r3, [r7, #20]
 80034d8:	2b0f      	cmp	r3, #15
 80034da:	d908      	bls.n	80034ee <UART_SetConfig+0x576>
 80034dc:	697b      	ldr	r3, [r7, #20]
 80034de:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 80034e2:	d204      	bcs.n	80034ee <UART_SetConfig+0x576>
 80034e4:	687b      	ldr	r3, [r7, #4]
 80034e6:	681b      	ldr	r3, [r3, #0]
 80034e8:	697a      	ldr	r2, [r7, #20]
 80034ea:	60da      	str	r2, [r3, #12]
 80034ec:	e001      	b.n	80034f2 <UART_SetConfig+0x57a>
 80034ee:	2301      	movs	r3, #1
 80034f0:	74fb      	strb	r3, [r7, #19]
 80034f2:	687b      	ldr	r3, [r7, #4]
 80034f4:	2200      	movs	r2, #0
 80034f6:	661a      	str	r2, [r3, #96]	; 0x60
 80034f8:	687b      	ldr	r3, [r7, #4]
 80034fa:	2200      	movs	r2, #0
 80034fc:	665a      	str	r2, [r3, #100]	; 0x64
 80034fe:	7cfb      	ldrb	r3, [r7, #19]
 8003500:	4618      	mov	r0, r3
 8003502:	3720      	adds	r7, #32
 8003504:	46bd      	mov	sp, r7
 8003506:	e8bd 8890 	ldmia.w	sp!, {r4, r7, fp, pc}
 800350a:	bf00      	nop

0800350c <UART_AdvFeatureConfig>:
 800350c:	b480      	push	{r7}
 800350e:	b083      	sub	sp, #12
 8003510:	af00      	add	r7, sp, #0
 8003512:	6078      	str	r0, [r7, #4]
 8003514:	687b      	ldr	r3, [r7, #4]
 8003516:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003518:	f003 0301 	and.w	r3, r3, #1
 800351c:	2b00      	cmp	r3, #0
 800351e:	d00a      	beq.n	8003536 <UART_AdvFeatureConfig+0x2a>
 8003520:	687b      	ldr	r3, [r7, #4]
 8003522:	681b      	ldr	r3, [r3, #0]
 8003524:	685b      	ldr	r3, [r3, #4]
 8003526:	f423 3100 	bic.w	r1, r3, #131072	; 0x20000
 800352a:	687b      	ldr	r3, [r7, #4]
 800352c:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 800352e:	687b      	ldr	r3, [r7, #4]
 8003530:	681b      	ldr	r3, [r3, #0]
 8003532:	430a      	orrs	r2, r1
 8003534:	605a      	str	r2, [r3, #4]
 8003536:	687b      	ldr	r3, [r7, #4]
 8003538:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800353a:	f003 0302 	and.w	r3, r3, #2
 800353e:	2b00      	cmp	r3, #0
 8003540:	d00a      	beq.n	8003558 <UART_AdvFeatureConfig+0x4c>
 8003542:	687b      	ldr	r3, [r7, #4]
 8003544:	681b      	ldr	r3, [r3, #0]
 8003546:	685b      	ldr	r3, [r3, #4]
 8003548:	f423 3180 	bic.w	r1, r3, #65536	; 0x10000
 800354c:	687b      	ldr	r3, [r7, #4]
 800354e:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8003550:	687b      	ldr	r3, [r7, #4]
 8003552:	681b      	ldr	r3, [r3, #0]
 8003554:	430a      	orrs	r2, r1
 8003556:	605a      	str	r2, [r3, #4]
 8003558:	687b      	ldr	r3, [r7, #4]
 800355a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800355c:	f003 0304 	and.w	r3, r3, #4
 8003560:	2b00      	cmp	r3, #0
 8003562:	d00a      	beq.n	800357a <UART_AdvFeatureConfig+0x6e>
 8003564:	687b      	ldr	r3, [r7, #4]
 8003566:	681b      	ldr	r3, [r3, #0]
 8003568:	685b      	ldr	r3, [r3, #4]
 800356a:	f423 2180 	bic.w	r1, r3, #262144	; 0x40000
 800356e:	687b      	ldr	r3, [r7, #4]
 8003570:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8003572:	687b      	ldr	r3, [r7, #4]
 8003574:	681b      	ldr	r3, [r3, #0]
 8003576:	430a      	orrs	r2, r1
 8003578:	605a      	str	r2, [r3, #4]
 800357a:	687b      	ldr	r3, [r7, #4]
 800357c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800357e:	f003 0308 	and.w	r3, r3, #8
 8003582:	2b00      	cmp	r3, #0
 8003584:	d00a      	beq.n	800359c <UART_AdvFeatureConfig+0x90>
 8003586:	687b      	ldr	r3, [r7, #4]
 8003588:	681b      	ldr	r3, [r3, #0]
 800358a:	685b      	ldr	r3, [r3, #4]
 800358c:	f423 4100 	bic.w	r1, r3, #32768	; 0x8000
 8003590:	687b      	ldr	r3, [r7, #4]
 8003592:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8003594:	687b      	ldr	r3, [r7, #4]
 8003596:	681b      	ldr	r3, [r3, #0]
 8003598:	430a      	orrs	r2, r1
 800359a:	605a      	str	r2, [r3, #4]
 800359c:	687b      	ldr	r3, [r7, #4]
 800359e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80035a0:	f003 0310 	and.w	r3, r3, #16
 80035a4:	2b00      	cmp	r3, #0
 80035a6:	d00a      	beq.n	80035be <UART_AdvFeatureConfig+0xb2>
 80035a8:	687b      	ldr	r3, [r7, #4]
 80035aa:	681b      	ldr	r3, [r3, #0]
 80035ac:	689b      	ldr	r3, [r3, #8]
 80035ae:	f423 5180 	bic.w	r1, r3, #4096	; 0x1000
 80035b2:	687b      	ldr	r3, [r7, #4]
 80035b4:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 80035b6:	687b      	ldr	r3, [r7, #4]
 80035b8:	681b      	ldr	r3, [r3, #0]
 80035ba:	430a      	orrs	r2, r1
 80035bc:	609a      	str	r2, [r3, #8]
 80035be:	687b      	ldr	r3, [r7, #4]
 80035c0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80035c2:	f003 0320 	and.w	r3, r3, #32
 80035c6:	2b00      	cmp	r3, #0
 80035c8:	d00a      	beq.n	80035e0 <UART_AdvFeatureConfig+0xd4>
 80035ca:	687b      	ldr	r3, [r7, #4]
 80035cc:	681b      	ldr	r3, [r3, #0]
 80035ce:	689b      	ldr	r3, [r3, #8]
 80035d0:	f423 5100 	bic.w	r1, r3, #8192	; 0x2000
 80035d4:	687b      	ldr	r3, [r7, #4]
 80035d6:	6bda      	ldr	r2, [r3, #60]	; 0x3c
 80035d8:	687b      	ldr	r3, [r7, #4]
 80035da:	681b      	ldr	r3, [r3, #0]
 80035dc:	430a      	orrs	r2, r1
 80035de:	609a      	str	r2, [r3, #8]
 80035e0:	687b      	ldr	r3, [r7, #4]
 80035e2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80035e4:	f003 0340 	and.w	r3, r3, #64	; 0x40
 80035e8:	2b00      	cmp	r3, #0
 80035ea:	d01a      	beq.n	8003622 <UART_AdvFeatureConfig+0x116>
 80035ec:	687b      	ldr	r3, [r7, #4]
 80035ee:	681b      	ldr	r3, [r3, #0]
 80035f0:	685b      	ldr	r3, [r3, #4]
 80035f2:	f423 1180 	bic.w	r1, r3, #1048576	; 0x100000
 80035f6:	687b      	ldr	r3, [r7, #4]
 80035f8:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 80035fa:	687b      	ldr	r3, [r7, #4]
 80035fc:	681b      	ldr	r3, [r3, #0]
 80035fe:	430a      	orrs	r2, r1
 8003600:	605a      	str	r2, [r3, #4]
 8003602:	687b      	ldr	r3, [r7, #4]
 8003604:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003606:	f5b3 1f80 	cmp.w	r3, #1048576	; 0x100000
 800360a:	d10a      	bne.n	8003622 <UART_AdvFeatureConfig+0x116>
 800360c:	687b      	ldr	r3, [r7, #4]
 800360e:	681b      	ldr	r3, [r3, #0]
 8003610:	685b      	ldr	r3, [r3, #4]
 8003612:	f423 01c0 	bic.w	r1, r3, #6291456	; 0x600000
 8003616:	687b      	ldr	r3, [r7, #4]
 8003618:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 800361a:	687b      	ldr	r3, [r7, #4]
 800361c:	681b      	ldr	r3, [r3, #0]
 800361e:	430a      	orrs	r2, r1
 8003620:	605a      	str	r2, [r3, #4]
 8003622:	687b      	ldr	r3, [r7, #4]
 8003624:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003626:	f003 0380 	and.w	r3, r3, #128	; 0x80
 800362a:	2b00      	cmp	r3, #0
 800362c:	d00a      	beq.n	8003644 <UART_AdvFeatureConfig+0x138>
 800362e:	687b      	ldr	r3, [r7, #4]
 8003630:	681b      	ldr	r3, [r3, #0]
 8003632:	685b      	ldr	r3, [r3, #4]
 8003634:	f423 2100 	bic.w	r1, r3, #524288	; 0x80000
 8003638:	687b      	ldr	r3, [r7, #4]
 800363a:	6c9a      	ldr	r2, [r3, #72]	; 0x48
 800363c:	687b      	ldr	r3, [r7, #4]
 800363e:	681b      	ldr	r3, [r3, #0]
 8003640:	430a      	orrs	r2, r1
 8003642:	605a      	str	r2, [r3, #4]
 8003644:	bf00      	nop
 8003646:	370c      	adds	r7, #12
 8003648:	46bd      	mov	sp, r7
 800364a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800364e:	4770      	bx	lr

08003650 <UART_CheckIdleState>:
 8003650:	b580      	push	{r7, lr}
 8003652:	b086      	sub	sp, #24
 8003654:	af02      	add	r7, sp, #8
 8003656:	6078      	str	r0, [r7, #4]
 8003658:	687b      	ldr	r3, [r7, #4]
 800365a:	2200      	movs	r2, #0
 800365c:	67da      	str	r2, [r3, #124]	; 0x7c
 800365e:	f7fd fc4b 	bl	8000ef8 <HAL_GetTick>
 8003662:	60f8      	str	r0, [r7, #12]
 8003664:	687b      	ldr	r3, [r7, #4]
 8003666:	681b      	ldr	r3, [r3, #0]
 8003668:	681b      	ldr	r3, [r3, #0]
 800366a:	f003 0308 	and.w	r3, r3, #8
 800366e:	2b08      	cmp	r3, #8
 8003670:	d10e      	bne.n	8003690 <UART_CheckIdleState+0x40>
 8003672:	f06f 437e 	mvn.w	r3, #4261412864	; 0xfe000000
 8003676:	9300      	str	r3, [sp, #0]
 8003678:	68fb      	ldr	r3, [r7, #12]
 800367a:	2200      	movs	r2, #0
 800367c:	f44f 1100 	mov.w	r1, #2097152	; 0x200000
 8003680:	6878      	ldr	r0, [r7, #4]
 8003682:	f000 f82a 	bl	80036da <UART_WaitOnFlagUntilTimeout>
 8003686:	4603      	mov	r3, r0
 8003688:	2b00      	cmp	r3, #0
 800368a:	d001      	beq.n	8003690 <UART_CheckIdleState+0x40>
 800368c:	2303      	movs	r3, #3
 800368e:	e020      	b.n	80036d2 <UART_CheckIdleState+0x82>
 8003690:	687b      	ldr	r3, [r7, #4]
 8003692:	681b      	ldr	r3, [r3, #0]
 8003694:	681b      	ldr	r3, [r3, #0]
 8003696:	f003 0304 	and.w	r3, r3, #4
 800369a:	2b04      	cmp	r3, #4
 800369c:	d10e      	bne.n	80036bc <UART_CheckIdleState+0x6c>
 800369e:	f06f 437e 	mvn.w	r3, #4261412864	; 0xfe000000
 80036a2:	9300      	str	r3, [sp, #0]
 80036a4:	68fb      	ldr	r3, [r7, #12]
 80036a6:	2200      	movs	r2, #0
 80036a8:	f44f 0180 	mov.w	r1, #4194304	; 0x400000
 80036ac:	6878      	ldr	r0, [r7, #4]
 80036ae:	f000 f814 	bl	80036da <UART_WaitOnFlagUntilTimeout>
 80036b2:	4603      	mov	r3, r0
 80036b4:	2b00      	cmp	r3, #0
 80036b6:	d001      	beq.n	80036bc <UART_CheckIdleState+0x6c>
 80036b8:	2303      	movs	r3, #3
 80036ba:	e00a      	b.n	80036d2 <UART_CheckIdleState+0x82>
 80036bc:	687b      	ldr	r3, [r7, #4]
 80036be:	2220      	movs	r2, #32
 80036c0:	675a      	str	r2, [r3, #116]	; 0x74
 80036c2:	687b      	ldr	r3, [r7, #4]
 80036c4:	2220      	movs	r2, #32
 80036c6:	679a      	str	r2, [r3, #120]	; 0x78
 80036c8:	687b      	ldr	r3, [r7, #4]
 80036ca:	2200      	movs	r2, #0
 80036cc:	f883 2070 	strb.w	r2, [r3, #112]	; 0x70
 80036d0:	2300      	movs	r3, #0
 80036d2:	4618      	mov	r0, r3
 80036d4:	3710      	adds	r7, #16
 80036d6:	46bd      	mov	sp, r7
 80036d8:	bd80      	pop	{r7, pc}

080036da <UART_WaitOnFlagUntilTimeout>:
 80036da:	b580      	push	{r7, lr}
 80036dc:	b084      	sub	sp, #16
 80036de:	af00      	add	r7, sp, #0
 80036e0:	60f8      	str	r0, [r7, #12]
 80036e2:	60b9      	str	r1, [r7, #8]
 80036e4:	603b      	str	r3, [r7, #0]
 80036e6:	4613      	mov	r3, r2
 80036e8:	71fb      	strb	r3, [r7, #7]
 80036ea:	e02a      	b.n	8003742 <UART_WaitOnFlagUntilTimeout+0x68>
 80036ec:	69bb      	ldr	r3, [r7, #24]
 80036ee:	f1b3 3fff 	cmp.w	r3, #4294967295
 80036f2:	d026      	beq.n	8003742 <UART_WaitOnFlagUntilTimeout+0x68>
 80036f4:	f7fd fc00 	bl	8000ef8 <HAL_GetTick>
 80036f8:	4602      	mov	r2, r0
 80036fa:	683b      	ldr	r3, [r7, #0]
 80036fc:	1ad3      	subs	r3, r2, r3
 80036fe:	69ba      	ldr	r2, [r7, #24]
 8003700:	429a      	cmp	r2, r3
 8003702:	d302      	bcc.n	800370a <UART_WaitOnFlagUntilTimeout+0x30>
 8003704:	69bb      	ldr	r3, [r7, #24]
 8003706:	2b00      	cmp	r3, #0
 8003708:	d11b      	bne.n	8003742 <UART_WaitOnFlagUntilTimeout+0x68>
 800370a:	68fb      	ldr	r3, [r7, #12]
 800370c:	681b      	ldr	r3, [r3, #0]
 800370e:	681a      	ldr	r2, [r3, #0]
 8003710:	68fb      	ldr	r3, [r7, #12]
 8003712:	681b      	ldr	r3, [r3, #0]
 8003714:	f422 72d0 	bic.w	r2, r2, #416	; 0x1a0
 8003718:	601a      	str	r2, [r3, #0]
 800371a:	68fb      	ldr	r3, [r7, #12]
 800371c:	681b      	ldr	r3, [r3, #0]
 800371e:	689a      	ldr	r2, [r3, #8]
 8003720:	68fb      	ldr	r3, [r7, #12]
 8003722:	681b      	ldr	r3, [r3, #0]
 8003724:	f022 0201 	bic.w	r2, r2, #1
 8003728:	609a      	str	r2, [r3, #8]
 800372a:	68fb      	ldr	r3, [r7, #12]
 800372c:	2220      	movs	r2, #32
 800372e:	675a      	str	r2, [r3, #116]	; 0x74
 8003730:	68fb      	ldr	r3, [r7, #12]
 8003732:	2220      	movs	r2, #32
 8003734:	679a      	str	r2, [r3, #120]	; 0x78
 8003736:	68fb      	ldr	r3, [r7, #12]
 8003738:	2200      	movs	r2, #0
 800373a:	f883 2070 	strb.w	r2, [r3, #112]	; 0x70
 800373e:	2303      	movs	r3, #3
 8003740:	e00f      	b.n	8003762 <UART_WaitOnFlagUntilTimeout+0x88>
 8003742:	68fb      	ldr	r3, [r7, #12]
 8003744:	681b      	ldr	r3, [r3, #0]
 8003746:	69da      	ldr	r2, [r3, #28]
 8003748:	68bb      	ldr	r3, [r7, #8]
 800374a:	4013      	ands	r3, r2
 800374c:	68ba      	ldr	r2, [r7, #8]
 800374e:	429a      	cmp	r2, r3
 8003750:	bf0c      	ite	eq
 8003752:	2301      	moveq	r3, #1
 8003754:	2300      	movne	r3, #0
 8003756:	b2db      	uxtb	r3, r3
 8003758:	461a      	mov	r2, r3
 800375a:	79fb      	ldrb	r3, [r7, #7]
 800375c:	429a      	cmp	r2, r3
 800375e:	d0c5      	beq.n	80036ec <UART_WaitOnFlagUntilTimeout+0x12>
 8003760:	2300      	movs	r3, #0
 8003762:	4618      	mov	r0, r3
 8003764:	3710      	adds	r7, #16
 8003766:	46bd      	mov	sp, r7
 8003768:	bd80      	pop	{r7, pc}
	...

0800376c <__libc_init_array>:
 800376c:	b570      	push	{r4, r5, r6, lr}
 800376e:	4e0d      	ldr	r6, [pc, #52]	; (80037a4 <__libc_init_array+0x38>)
 8003770:	4c0d      	ldr	r4, [pc, #52]	; (80037a8 <__libc_init_array+0x3c>)
 8003772:	1ba4      	subs	r4, r4, r6
 8003774:	10a4      	asrs	r4, r4, #2
 8003776:	2500      	movs	r5, #0
 8003778:	42a5      	cmp	r5, r4
 800377a:	d109      	bne.n	8003790 <__libc_init_array+0x24>
 800377c:	4e0b      	ldr	r6, [pc, #44]	; (80037ac <__libc_init_array+0x40>)
 800377e:	4c0c      	ldr	r4, [pc, #48]	; (80037b0 <__libc_init_array+0x44>)
 8003780:	f000 f820 	bl	80037c4 <_init>
 8003784:	1ba4      	subs	r4, r4, r6
 8003786:	10a4      	asrs	r4, r4, #2
 8003788:	2500      	movs	r5, #0
 800378a:	42a5      	cmp	r5, r4
 800378c:	d105      	bne.n	800379a <__libc_init_array+0x2e>
 800378e:	bd70      	pop	{r4, r5, r6, pc}
 8003790:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 8003794:	4798      	blx	r3
 8003796:	3501      	adds	r5, #1
 8003798:	e7ee      	b.n	8003778 <__libc_init_array+0xc>
 800379a:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 800379e:	4798      	blx	r3
 80037a0:	3501      	adds	r5, #1
 80037a2:	e7f2      	b.n	800378a <__libc_init_array+0x1e>
 80037a4:	08004b9c 	.word	0x08004b9c
 80037a8:	08004b9c 	.word	0x08004b9c
 80037ac:	08004b9c 	.word	0x08004b9c
 80037b0:	08004ba0 	.word	0x08004ba0

080037b4 <memset>:
 80037b4:	4402      	add	r2, r0
 80037b6:	4603      	mov	r3, r0
 80037b8:	4293      	cmp	r3, r2
 80037ba:	d100      	bne.n	80037be <memset+0xa>
 80037bc:	4770      	bx	lr
 80037be:	f803 1b01 	strb.w	r1, [r3], #1
 80037c2:	e7f9      	b.n	80037b8 <memset+0x4>

080037c4 <_init>:
 80037c4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80037c6:	bf00      	nop
 80037c8:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80037ca:	bc08      	pop	{r3}
 80037cc:	469e      	mov	lr, r3
 80037ce:	4770      	bx	lr

080037d0 <_fini>:
 80037d0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80037d2:	bf00      	nop
 80037d4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80037d6:	bc08      	pop	{r3}
 80037d8:	469e      	mov	lr, r3
 80037da:	4770      	bx	lr
